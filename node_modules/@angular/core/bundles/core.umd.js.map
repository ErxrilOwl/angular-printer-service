{"version":3,"file":"core.umd.js","sources":["../../../../../../../../../../../../../../../Users/misko/work/angular/node_modules/tslib/tslib.es6.js","../../../../../../../../../../execroot/angular/packages/core/src/di/defs.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/injection_token.ts","../../../../../../../../../../execroot/angular/packages/core/src/util/decorators.ts","../../../../../../../../../../execroot/angular/packages/core/src/metadata/di.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/constants.ts","../../../../../../../../../../execroot/angular/packages/core/src/metadata/directives.ts","../../../../../../../../../../execroot/angular/packages/core/src/type.ts","../../../../../../../../../../execroot/angular/packages/core/src/util.ts","../../../../../../../../../../execroot/angular/packages/core/src/reflection/reflection_capabilities.ts","../../../../../../../../../../execroot/angular/packages/core/src/util/property.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/forward_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/metadata.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/injector.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/injectable.ts","../../../../../../../../../../execroot/angular/packages/core/src/metadata/ng_module.ts","../../../../../../../../../../execroot/angular/packages/core/src/metadata/view.ts","../../../../../../../../../../execroot/angular/packages/core/src/metadata.ts","../../../../../../../../../../execroot/angular/packages/core/src/version.ts","../../../../../../../../../../execroot/angular/packages/core/src/errors.ts","../../../../../../../../../../execroot/angular/packages/core/src/error_handler.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/reflective_errors.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/reflective_key.ts","../../../../../../../../../../execroot/angular/packages/core/src/reflection/reflector.ts","../../../../../../../../../../execroot/angular/packages/core/src/reflection/reflection.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/reflective_provider.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/reflective_injector.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/scope.ts","../../../../../../../../../../execroot/angular/packages/core/src/di/r3_injector.ts","../../../../../../../../../../execroot/angular/packages/core/src/di.ts","../../../../../../../../../../execroot/angular/packages/core/src/util/lang.ts","../../../../../../../../../../execroot/angular/packages/core/src/application_init.ts","../../../../../../../../../../execroot/angular/packages/core/src/application_tokens.ts","../../../../../../../../../../execroot/angular/packages/core/src/console.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/compiler.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/component_factory.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/component_factory_resolver.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/ng_module_factory.ts","../../../../../../../../../../execroot/angular/packages/core/src/profile/wtf_impl.ts","../../../../../../../../../../execroot/angular/packages/core/src/profile/profile.ts","../../../../../../../../../../execroot/angular/packages/core/src/event_emitter.ts","../../../../../../../../../../execroot/angular/packages/core/src/zone/ng_zone.ts","../../../../../../../../../../execroot/angular/packages/core/src/testability/testability.ts","../../../../../../../../../../execroot/angular/packages/core/src/application_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/zone.ts","../../../../../../../../../../execroot/angular/packages/core/src/render/api.ts","../../../../../../../../../../execroot/angular/packages/core/src/render.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/element_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/ng_module_factory_loader.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/query_list.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/system_js_ng_module_factory_loader.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/template_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/view_container_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/change_detector_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker/view_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/linker.ts","../../../../../../../../../../execroot/angular/packages/core/src/debug/debug_node.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/change_detection_util.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/differs/default_iterable_differ.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/differs/iterable_differs.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/differs/keyvalue_differs.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection/change_detection.ts","../../../../../../../../../../execroot/angular/packages/core/src/change_detection.ts","../../../../../../../../../../execroot/angular/packages/core/src/platform_core_providers.ts","../../../../../../../../../../execroot/angular/packages/core/src/i18n/tokens.ts","../../../../../../../../../../execroot/angular/packages/core/src/application_module.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/inert_body.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/url_sanitizer.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/html_sanitizer.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/style_sanitizer.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/security.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/types.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/errors.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/util.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/element.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/ng_module.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/view_attach.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/refs.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/provider.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/query.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/ng_content.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/pure_expression.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/text.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/view.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/services.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/entrypoint.ts","../../../../../../../../../../execroot/angular/packages/core/src/view/index.ts","../../../../../../../../../../execroot/angular/packages/core/src/core_private_export.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/assert.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/hooks.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/ng_dev_mode.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/projection.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/node_assert.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/container.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/node.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/renderer.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/view.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/util.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/node_manipulation.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/node_selector_matcher.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/errors.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/instructions.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/view_ref.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/component.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/di.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/definition.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/pure_function.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/pipe.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/definition.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/injector.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/interfaces/query.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/query.ts","../../../../../../../../../../execroot/angular/packages/core/src/render3/index.ts","../../../../../../../../../../execroot/angular/packages/core/src/sanitization/sanitization.ts","../../../../../../../../../../execroot/angular/packages/core/src/core_render3_private_export.ts","../../../../../../../../../../execroot/angular/packages/core/src/codegen_private_exports.ts","../../../../../../../../../../execroot/angular/packages/core/src/core.ts","../../../../../../../../../../execroot/angular/packages/core/public_api.ts","../../../../../../../../../../execroot/angular/packages/core/index.ts","../../../../../../../../../../execroot/angular/packages/core/core.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {ClassProvider, ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectableDef<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'any'|null;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: () => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorDef<T> {\n  factory: () => T;\n\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ngInjectableDef property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * @experimental\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectableDef: never;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * @experimental\n */\nexport interface InjectorType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectorDef: never;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nexport function defineInjectable<T>(opts: {\n  providedIn?: Type<any>| 'root' | 'any' | null,\n  factory: () => T,\n}): never {\n  return ({\n    providedIn: opts.providedIn as any || null, factory: opts.factory, value: undefined,\n  } as InjectableDef<T>) as never;\n}\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nexport function defineInjector(options: {factory: () => any, providers?: any[], imports?: any[]}):\n    never {\n  return ({\n    factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n  } as InjectorDef<any>) as never;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {InjectableDef, defineInjectable} from './defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakeable Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ngInjectableDef: never|undefined;\n\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>| 'root' | null,\n    factory: () => T\n  }) {\n    if (options !== undefined) {\n      this.ngInjectableDef = defineInjectable({\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    } else {\n      this.ngInjectableDef = undefined;\n    }\n  }\n\n  toString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> { ngInjectableDef: never; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    chainFn?: (fn: Function) => void, typeFn?: (type: Type<any>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: any) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (<any>DecoratorFactory)(...args);\n    const TypeDecorator: TypeDecorator = <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      typeFn && typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n      return cls;\n    };\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (<any>DecoratorFactory).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * @usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n *\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   *\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChildren to get the `QueryList` of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   * ### Basic Example\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane Example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n *  @Annotation\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n *\n */\nexport interface ContentChildDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @see `ContentChild`.\n *\n *\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n *\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * Configures a view query.\n   *\n   * You can use ViewChildren to get the `QueryList` of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Configures a view query.\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n *\n */\nexport enum ChangeDetectionStrategy {\n  /**\n   * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n   */\n  OnPush = 0,\n\n  /**\n   * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n   */\n  Default = 1,\n}\n\n/**\n * Describes the status of the detector.\n */\nexport enum ChangeDetectorStatus {\n  /**\n   * `CheckOnce` means that after calling detectChanges the mode of the change detector\n   * will become `Checked`.\n   */\n  CheckOnce,\n\n  /**\n   * `Checked` means that the change detector should be skipped until its mode changes to\n   * `CheckOnce`.\n   */\n  Checked,\n\n  /**\n   * `CheckAlways` means that after calling detectChanges the mode of the change detector\n   * will remain `CheckAlways`.\n   */\n  CheckAlways,\n\n  /**\n   * `Detached` means that the change detector sub tree is not a part of the main tree and\n   * should be skipped.\n   */\n  Detached,\n\n  /**\n   * `Errored` means that the change detector encountered an error checking a binding\n   * or calling a directive lifecycle method and is now in an inconsistent state. Change\n   * detectors in this state will no longer detect changes.\n   */\n  Errored,\n\n  /**\n   * `Destroyed` means that the change detector is destroyed.\n   */\n  Destroyed,\n}\n\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n\n\n/**\n * Type of the Directive decorator / constructor function.\n */\nexport interface DirectiveDecorator {\n  /**\n   * Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template. Can be\n   * given a single name or a comma-delimited list of names.\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @usageNotes\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   * ```\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * @usageNotes\n   * The key corresponds to the name of the event, property or attribute on the host to\n   * bind. The value is formatted differently depending upon the type of the binding.\n   *\n   * ### Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   * See [live demo](http://plnkr.co/edit/DlA5KU?p=preview)\n   *\n   * ### Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * See [live demo](http://plnkr.co/edit/gNg0ED?p=preview).\n   *\n   * ### Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   * Attaching the `my-button` directive to the host `<div>` element\n   * ensures that this element gets the \"button\" role.\n   *\n   * ```html\n   * <div my-button></div>\n   * ```\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * The following simple example shows how a class is injected,\n   * using a provider specified in the directive metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The followoing example (shows what??)\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * The set of event-bound output properties.\n   * When an output property emits an event, an event handler attached\n   * to that event in the template is invoked.\n   *\n   * Each output property maps a `directiveProperty` to a `bindingProperty`:\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the HTML attribute the event handler is attached to.\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evalueates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * See the `Component` decorator.\n   */\n  providers?: Provider[];\n\n  /**\n   * The name or names that can be used in the template to assign this directive to a variable.\n   * For multiple names, use a comma-separated string.\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   */\n  queries?: {[key: string]: any};\n}\n\n/**\n * Type of the Component metadata.\n */\nexport const Directive: DirectiveDecorator =\n    makeDecorator('Directive', (dir: Directive = {}) => dir);\n/**\n * Component decorator interface\n *\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n   * </code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `@Component` decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The URL of a template file for an Angular component. If provided,\n   * do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * `state()` and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the template and CSS styles. One of:\n   * - `ViewEncapsulation.Native`: Use shadow roots. This works\n   * only if natively available on the platform.\n   * - `ViewEncapsulation.Emulated`: Use shimmed CSS that\n   * emulates the native behavior.\n   * - `ViewEncapsulation.None`: Use global CSS without any\n   * encapsulation.\n   *\n   * If not supplied, the value is taken from `CompilerOptions`. The default compiler option is\n   * `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * or `styleUrls` specified, the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (`{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * @Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div @myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * @Annotation\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive);\n\n/**\n * Type of the Pipe decorator / constructor function.\n */\nexport interface PipeDecorator {\n  /**\n   * Declares a reusable pipe function, and supplies configuration metadata.\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   *\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n}\n\n/**\n *\n *\n * @Annotation\n */\nexport const Pipe: PipeDecorator = makeDecorator('Pipe', (p: Pipe) => ({pure: true, ...p}));\n\n\n/**\n *\n */\nexport interface InputDecorator {\n  /**\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `@NgModule` metadata.\n   *\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n *\n */\nexport interface Input {\n  /**\n   * Decorator that marks a class field as an input property and supplies configuration metadata.\n   * Declares a data-bound input property, which Angular automatically updates\n   * during change detection.\n   *\n   * @usageNotes\n   *\n   * You can supply an optional name to use in templates when the\n   * component is instantiated, that maps to the\n   * name of the bound property. By default, the original\n   * name of the bound property is used for input binding.\n   *\n   * The following example creates a component with two input properties,\n   * one of which is given a special binding name.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n  *      Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   // This property is bound using its original name.\n   *   @Input() bankName: string;\n   *   // this property value is bound to a different property name\n   *   // when this component is instantiated in a template.\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and is not automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   */\n  bindingPropertyName?: string;\n}\n\n/**\n *\n * @Annotation\n */\nexport const Input: InputDecorator =\n    makePropDecorator('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n/**\n * Type of the Output decorator / constructor function.\n */\nexport interface OutputDecorator {\n  /**\n  * Decorator that marks a class field as an output property and supplies configuration metadata.\n  * Declares a data-bound output property, which Angular automatically updates\n  * during change detection.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for output binding.\n  *\n  * See `@Input` decorator for an example of providing a binding name.\n  *\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n */\nexport interface Output { bindingPropertyName?: string; }\n\n/**\n *\n * @Annotation\n */\nexport const Output: OutputDecorator =\n    makePropDecorator('Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n */\nexport interface HostBinding { hostPropertyName?: string; }\n\n/**\n *\n * @Annotation\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n */\nexport interface HostListenerDecorator {\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n */\nexport interface HostListener {\n  /**\n   * The CSS event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _global: {[name: string]: any} = __window || __global || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T, target: any): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === target) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() { return stringify(this()); };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @experimental\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return (<ForwardRefFn>type)();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../di/provider';\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {EMPTY_ARRAY} from '../view/util';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n */\nexport interface InjectDecorator {\n  /**\n   * A parameter decorator that specifies a dependency.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, `Injector` will use the type annotation of the\n   * parameter.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n */\nexport interface Inject { token: any; }\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n */\nexport interface OptionalDecorator {\n  /**\n   * A parameter metadata that marks a dependency as optional.\n   * `Injector` provides `null` if the dependency is not found.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Self decorator / constructor function.\n */\nexport interface SelfDecorator {\n  /**\n   * Specifies that an `Injector` should retrieve a dependency only from itself.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n */\nexport interface SkipSelfDecorator {\n  /**\n   * Specifies that the dependency resolution should start from the parent injector.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n *\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n */\nexport interface HostDecorator {\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, defineInjectable} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nexport const SOURCE = '__source';\nconst _THROW_IF_NOT_FOUND = new Object();\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nexport const INJECTOR = new InjectionToken<Injector>('INJECTOR');\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n  /**\n   * Create a new Injector which is configure using `StaticProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n   */\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return new StaticInjector(options, parent);\n    } else {\n      return new StaticInjector(options.providers, options.parent, options.name || null);\n    }\n  }\n\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'any' as any,\n    factory: () => inject(INJECTOR),\n  });\n}\n\n\n\nconst IDENT = function<T>(value: T): T {\n  return value;\n};\nconst EMPTY = <any[]>[];\nconst CIRCULAR = IDENT;\nconst MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nconst GET_PROPERTY_NAME = {} as any;\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: GET_PROPERTY_NAME});\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst NULL_INJECTOR = Injector.NULL;\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'Éµ';\n\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\n  readonly source: string|null;\n\n  private _records: Map<any, Record>;\n\n  constructor(\n      providers: StaticProvider[], parent: Injector = NULL_INJECTOR, source: string|null = null) {\n    this.parent = parent;\n    this.source = source;\n    const records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    records.set(\n        INJECTOR, <Record>{token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags: InjectFlags = InjectFlags.Default): any {\n    const record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n    } catch (e) {\n      const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n      }\n      e.message = formatError('\\n' + e.message, tokenPath, this.source);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n\n  toString() {\n    const tokens = <string[]>[], records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const deps = computeDeps(provider);\n  let fn: Function = IDENT;\n  let value: any = EMPTY;\n  let useNew: boolean = false;\n  let provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = (provider as ValueProvider).useValue;\n  } else if ((provider as FactoryProvider).useFactory) {\n    fn = (provider as FactoryProvider).useFactory;\n  } else if ((provider as ExistingProvider).useExisting) {\n    // Just use IDENT\n  } else if ((provider as StaticClassProvider).useClass) {\n    useNew = true;\n    fn = resolveForwardRef((provider as StaticClassProvider).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let token = resolveForwardRef(provider.provide);\n      const resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          });\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue, flags);\n  } catch (e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  let value;\n  if (record && !(flags & InjectFlags.SkipSelf)) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let obj = undefined;\n      let useNew = record.useNew;\n      let fn = record.fn;\n      let depRecords = record.deps;\n      let deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let i = 0; i < depRecords.length; i++) {\n          const depRecord: DependencyRecord = depRecords[i];\n          const options = depRecord.options;\n          const childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND,\n              InjectFlags.Default));\n        }\n      }\n      record.value = value = useNew ? new (fn as any)(...deps) : fn.apply(obj, deps);\n    }\n  } else if (!(flags & InjectFlags.Self)) {\n    value = parent.get(token, notFoundValue, InjectFlags.Default);\n  }\n  return value;\n}\n\n\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let deps: DependencyRecord[] = EMPTY;\n  const providerDeps: any[] =\n      (provider as ExistingProvider & StaticClassProvider & ConstructorProvider).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let i = 0; i < providerDeps.length; i++) {\n      let options = OptionFlags.Default;\n      let token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let j = 0, annotations = token; j < annotations.length; j++) {\n          const annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = (annotation as Inject).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if ((provider as ExistingProvider).useExisting) {\n    const token = resolveForwardRef((provider as ExistingProvider).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n\nfunction formatError(text: string, obj: any, source: string | null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n\nfunction getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n      return key;\n    }\n  }\n  throw Error('!prop');\n}\n\n/**\n * Injection flags for DI.\n */\nexport const enum InjectFlags {\n  Default = 0,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 1 << 0,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 1 << 1,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 1 << 2,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 1 << 3,\n}\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector | null | undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\n/**\n * Injects a token from the currently active injector.\n *\n * This function must be used in the context of a factory function such as one defined for an\n * `InjectionToken`, and will throw an error if not called from such a context.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * Within such a factory function `inject` is utilized to request injection of a dependency, instead\n * of providing an additional array of dependencies as was common to do with `useFactory` providers.\n * `inject` is faster and more type-safe.\n *\n * @experimental\n */\nexport function inject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|null;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  if (_currentInjector === undefined) {\n    throw new Error(`inject() must be called from an injection context`);\n  } else if (_currentInjector === null) {\n    const injectableDef: InjectableDef<T> = (token as any).ngInjectableDef;\n    if (injectableDef && injectableDef.providedIn == 'root') {\n      return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                                 injectableDef.value;\n    }\n    throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\nexport function injectArgs(types: (Type<any>| InjectionToken<any>| any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = types[i];\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new Error('Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n          flags |= InjectFlags.Optional;\n        } else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n          flags |= InjectFlags.SkipSelf;\n        } else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n          flags |= InjectFlags.Self;\n        } else if (meta instanceof Inject) {\n          type = meta.token;\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(inject(type !, flags));\n    } else {\n      args.push(inject(arg));\n    }\n  }\n  return args;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {InjectableDef, InjectableType, defineInjectable} from './defs';\nimport {inject, injectArgs} from './injector';\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\nconst GET_PROPERTY_NAME = {} as any;\nconst USE_VALUE = getClosureSafeProperty<ValueProvider>(\n    {provide: String, useValue: GET_PROPERTY_NAME}, GET_PROPERTY_NAME);\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @experimental\n */\nexport type InjectableProvider = ValueSansProvider | ExistingSansProvider |\n    StaticClassSansProvider | ConstructorSansProvider | FactorySansProvider | ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n */\nexport interface InjectableDecorator {\n  /**\n   * A marker metadata that marks a class as available to `Injector` for creation.\n   *\n   * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * `Injector` will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   */\n  (): any;\n  (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): any;\n  new (): Injectable;\n  new (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @experimental\n */\nexport interface Injectable {\n  providedIn?: Type<any>|'root'|null;\n  factory: () => any;\n}\n\nconst EMPTY_ARRAY: any[] = [];\n\nexport function convertInjectableProviderToFactory(\n    type: Type<any>, provider?: InjectableProvider): () => any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n\n/**\n* Injectable decorator and metadata.\n*\n* @Annotation\n*/\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (injectableType: InjectableType<any>,\n     options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider) => {\n      if (options && options.providedIn !== undefined &&\n          injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n          providedIn: options.providedIn,\n          factory: convertInjectableProviderToFactory(injectableType, options)\n        });\n      }\n    });\n\n/**\n * Type representing injectable service.\n *\n * @experimental\n */\nexport interface InjectableType<T> extends Type<T> { ngInjectableDef: InjectableDef<T>; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectorDef, InjectorType, defineInjector} from '../di/defs';\nimport {convertInjectableProviderToFactory} from '../di/injectable';\nimport {Provider} from '../di/provider';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n *\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n\n/**\n * A schema definition associated with an NgModule.\n * \n * @see `@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n * \n * @param name The name of a defined schema.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that allows any property on any element.\n *\n * @experimental\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n *\n */\nexport interface NgModuleDecorator {\n  /**\n   * Marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n *\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @usageNotes\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of directives and pipes that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules, with or without providers,\n   * whose exported directives/pipes\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * The following example allows MainModule to use CommonModule:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *  @see {@link ModuleWithProviders}\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * The set of directives, pipe, and NgModules that can be used\n   * within the template of any component that is part of an\n   * NgModule that imports this NgModule.\n   *\n   * @usageNotes\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined.\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getModuleFactory`.\n   * If left `undefined`, the NgModule is not registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n\n/**\n * Decorator that marks the following class as an NgModule, and supplies\n * configuration metadata for it.\n *\n * @Annotation\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    (moduleType: InjectorType<any>, metadata: NgModule) => {\n      let imports = (metadata && metadata.imports) || [];\n      if (metadata && metadata.exports) {\n        imports = [...imports, metadata.exports];\n      }\n\n      moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n        providers: metadata && metadata.providers,\n        imports: imports,\n      });\n    });\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n */\nexport enum ViewEncapsulation {\n  /**\n   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n   * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n   * selectors.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n  /**\n   * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n   * Use the native encapsulation mechanism of the renderer.\n   *\n   * For the DOM this means using the deprecated [Shadow DOM\n   * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  Native = 1,\n  /**\n   * Don't provide any template or style encapsulation.\n   */\n  None = 2,\n\n  /**\n   * Use Shadow DOM to encapsulate styles.\n   *\n   * For the DOM this means using modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   *\n   * ### Example\n   * {@example core/ts/metadata/encapsulation.ts region='longform'}\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This indirection is needed to free up Component, etc symbols in the public API\n * to be used by the decorator versions of these annotations.\n */\n\nimport {Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren} from './metadata/di';\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nimport {ModuleWithProviders, NgModule, SchemaMetadata} from './metadata/ng_module';\nimport {ViewEncapsulation} from './metadata/view';\n\nexport {ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildDecorator, ContentChildren, ContentChildrenDecorator, Query, ViewChild, ViewChildDecorator, ViewChildren, ViewChildrenDecorator} from './metadata/di';\nexport {Component, ComponentDecorator, Directive, DirectiveDecorator, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nexport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from './metadata/lifecycle_hooks';\nexport {CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NO_ERRORS_SCHEMA, NgModule, SchemaMetadata} from './metadata/ng_module';\nexport {ViewEncapsulation} from './metadata/view';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n *\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\nexport const VERSION = new Version('6.0.9');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const ERROR_TYPE = 'ngType';\nexport const ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const ERROR_LOGGER = 'ngErrorLogger';\n\n\nexport function getType(error: Error): Function {\n  return (error as any)[ERROR_TYPE];\n}\n\nexport function getDebugContext(error: Error): DebugContext {\n  return (error as any)[ERROR_DEBUG_CONTEXT];\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return (error as any)[ERROR_LOGGER] || defaultErrorLogger;\n}\n\n\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  (<any>console.error)(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n\n\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n    const context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n\n  /** @internal */\n  _findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n\n  /** @internal */\n  _findOriginalError(error: Error): any {\n    let e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const res: any[] = [];\n  for (let i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const reversed = findFirstClosedCycle(keys.slice().reverse());\n    const tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const keys = [key];\n  const errMsg = constructResolvingMessage(keys);\n  const error =\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError;\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const signature: string[] = [];\n  for (let i = 0, ii = params.length; i < ii; i++) {\n    const parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n\n\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nexport class ReflectiveKey {\n  public readonly displayName: string;\n  /**\n   * Private\n   */\n  constructor(public token: Object, public id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n    this.displayName = stringify(this.token);\n  }\n\n  /**\n   * Retrieves a `Key` for a token.\n   */\n  static get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n\n  /**\n   * @returns the number of keys registered in the system.\n   */\n  static get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nexport class KeyRegistry {\n  private _allKeys = new Map<Object, ReflectiveKey>();\n\n  get(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token) !;\n    }\n\n    const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys(): number { return this._allKeys.size; }\n}\n\nconst _globalKeyRegistry = new KeyRegistry();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n  constructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n\n  factory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  getter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n\n  setter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n\n  method(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n\n  importUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  resourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n  constructor(\n      public key: ReflectiveKey, public optional: boolean, public visibility: Self|SkipSelf|null) {}\n\n  static fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nconst _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * @usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\n\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n  readonly resolvedFactory: ResolvedReflectiveFactory;\n\n  constructor(\n      public key: ReflectiveKey, public resolvedFactories: ResolvedReflectiveFactory[],\n      public multiProvider: boolean) {\n    this.resolvedFactory = this.resolvedFactories[0];\n  }\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @experimental\n */\nexport class ResolvedReflectiveFactory {\n  constructor(\n      /**\n       * Factory function which can return an instance of an object represented by a key.\n       */\n      public factory: Function,\n\n      /**\n       * Arguments (dependencies) to the `factory` function.\n       */\n      public dependencies: ReflectiveDependency[]) {}\n}\n\n\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let factoryFn: Function;\n  let resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n\n/**\n * Resolve a list of Providers.\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const normalized = _normalizeProviders(providers, []);\n  const resolved = normalized.map(resolveReflectiveProvider);\n  const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    const existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && (b as any).provide !== undefined) {\n      res.push(b as NormalizedProvider);\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let token: any = null;\n  let optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let visibility: Self|SkipSelf|null = null;\n\n  for (let i = 0; i < metadata.length; ++i) {\n    const paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst UNDEFINED = new Object();\n\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nexport abstract class ReflectiveInjector implements Injector {\n  /**\n   * Turns an array of provider definitions into an array of resolved providers.\n   *\n   * A resolution is a process of flattening multiple nested arrays and converting individual\n   * providers into an array of `ResolvedReflectiveProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n   *\n   * expect(providers.length).toEqual(2);\n   *\n   * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n   * expect(providers[0].key.displayName).toBe(\"Car\");\n   * expect(providers[0].dependencies.length).toEqual(1);\n   * expect(providers[0].factory).toBeDefined();\n   *\n   * expect(providers[1].key.displayName).toBe(\"Engine\");\n   * });\n   * ```\n   *\n   */\n  static resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n\n  /**\n   * Resolves an array of providers and creates an injector from those providers.\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n\n  /**\n   * Creates an injector from previously resolved providers.\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, Engine]);\n   * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   * @experimental\n   */\n  static fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * var parent = ReflectiveInjector.resolveAndCreate([]);\n   * var child = parent.resolveAndCreateChild([]);\n   * expect(child.parent).toBe(parent);\n   * ```\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n  private static INJECTOR_KEY = ReflectiveKey.get(Injector);\n  /** @internal */\n  _constructionCounter: number = 0;\n  /** @internal */\n  public _providers: ResolvedReflectiveProvider[];\n  public readonly parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n  /**\n   * Private\n   */\n  constructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this.parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n\n  resolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n\n  createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const inj = new ReflectiveInjector_(providers);\n    (inj as{parent: Injector | null}).parent = this;\n    return inj;\n  }\n\n  resolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n\n  instantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n\n  getProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n\n  /** @internal */\n  _new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n\n  private _getMaxNumberOfObjects(): number { return this.objs.length; }\n\n  private _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const res = new Array(provider.resolvedFactories.length);\n      for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n\n  private _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const factory = ResolvedReflectiveFactory.factory;\n\n    let deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch (e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let obj: any;\n    try {\n      obj = factory(...deps);\n    } catch (e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n\n  private _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n\n  private _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === ReflectiveInjector_.INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n\n  private _getObjByKeyId(keyId: number): any {\n    for (let i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n\n  /** @internal */\n  _throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n\n  /** @internal */\n  _getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n\n  /** @internal */\n  _getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this.parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const inj_ = <ReflectiveInjector_>inj;\n      const obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_.parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n\n  get displayName(): string {\n    const providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n\n  toString(): string { return this.displayName; }\n}\n\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const res: any[] = new Array(injector._providers.length);\n  for (let i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {InjectionToken} from './injection_token';\n\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const APP_ROOT = new InjectionToken<boolean>(\n    'The presence of this token marks an injector as being the root injector.');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy} from '../metadata/lifecycle_hooks';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, InjectableType, InjectorDef, InjectorType, InjectorTypeWithProviders} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectableDefToken, InjectionToken} from './injection_token';\nimport {INJECTOR, InjectFlags, Injector, NullInjector, THROW_IF_NOT_FOUND, USE_VALUE, inject, injectArgs, setCurrentInjector} from './injector';\nimport {ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, Provider, StaticClassProvider, TypeProvider, ValueProvider} from './provider';\nimport {APP_ROOT} from './scope';\n\n\n\n/**\n * Internal type for a single provider in a deep provider array.\n */\ntype SingleProvider = TypeProvider | ValueProvider | ClassProvider | ConstructorProvider |\n    ExistingProvider | FactoryProvider | StaticClassProvider;\n\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nconst NOT_YET = {};\n\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nconst CIRCULAR = {};\n\nconst EMPTY_ARRAY = [] as any[];\n\n/**\n * A lazily initialized NullInjector.\n */\nlet NULL_INJECTOR: Injector|undefined = undefined;\n\nfunction getNullInjector(): Injector {\n  if (NULL_INJECTOR === undefined) {\n    NULL_INJECTOR = new NullInjector();\n  }\n  return NULL_INJECTOR;\n}\n\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n */\ninterface Record<T> {\n  factory: (() => T)|undefined;\n  value: T|{};\n  multi: any[]|undefined;\n}\n\n/**\n * Create a new `Injector` which is configured using `InjectorType`s.\n *\n * @experimental\n */\nexport function createInjector(\n    defType: /* InjectorType<any> */ any, parent: Injector | null = null): Injector {\n  parent = parent || getNullInjector();\n  return new R3Injector(defType, parent);\n}\n\nexport class R3Injector {\n  /**\n   * Map of tokens to records which contain the instances of those tokens.\n   */\n  private records = new Map<Type<any>|InjectionToken<any>, Record<any>>();\n\n  /**\n   * The transitive set of `InjectorType`s which define this injector.\n   */\n  private injectorDefTypes = new Set<InjectorType<any>>();\n\n  /**\n   * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n   */\n  private onDestroy = new Set<OnDestroy>();\n\n  /**\n   * Flag indicating this injector provides the APP_ROOT_SCOPE token, and thus counts as the\n   * root scope.\n   */\n  private readonly isRootInjector: boolean;\n\n  /**\n   * Flag indicating that this injector was previously destroyed.\n   */\n  private destroyed = false;\n\n  constructor(def: InjectorType<any>, readonly parent: Injector) {\n    // Start off by creating Records for every provider declared in every InjectorType\n    // included transitively in `def`.\n    deepForEach(\n        [def], injectorDef => this.processInjectorType(injectorDef, new Set<InjectorType<any>>()));\n\n    // Make sure the INJECTOR token provides this injector.\n    this.records.set(INJECTOR, makeRecord(undefined, this));\n\n    // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n    // any injectable scoped to APP_ROOT_SCOPE.\n    this.isRootInjector = this.records.has(APP_ROOT);\n\n    // Eagerly instantiate the InjectorType classes themselves.\n    this.injectorDefTypes.forEach(defType => this.get(defType));\n  }\n\n  /**\n   * Destroy the injector and release references to every instance or provider associated with it.\n   *\n   * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n   * hook was found.\n   */\n  destroy(): void {\n    this.assertNotDestroyed();\n\n    // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n    this.destroyed = true;\n    try {\n      // Call all the lifecycle hooks.\n      this.onDestroy.forEach(service => service.ngOnDestroy());\n    } finally {\n      // Release all references.\n      this.records.clear();\n      this.onDestroy.clear();\n      this.injectorDefTypes.clear();\n    }\n  }\n\n  get<T>(\n      token: Type<T>|InjectionToken<T>, notFoundValue: any = THROW_IF_NOT_FOUND,\n      flags = InjectFlags.Default): T {\n    this.assertNotDestroyed();\n    // Set the injection context.\n    const previousInjector = setCurrentInjector(this);\n    try {\n      // Check for the SkipSelf flag.\n      if (!(flags & InjectFlags.SkipSelf)) {\n        // SkipSelf isn't set, check if the record belongs to this injector.\n        let record: Record<T>|undefined = this.records.get(token);\n        if (record === undefined) {\n          // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n          // with a scope matching this injector.\n          const def = couldBeInjectableType(token) &&\n                  (token as InjectableType<any>| InjectableDefToken<any>).ngInjectableDef ||\n              undefined;\n          if (def !== undefined && this.injectableDefInScope(def)) {\n            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n            // all along.\n            record = injectableDefRecord(token);\n            this.records.set(token, record);\n          }\n        }\n        // If a record was found, get the instance for it and return it.\n        if (record !== undefined) {\n          return this.hydrate(token, record);\n        }\n      }\n\n      // Select the next injector based on the Self flag - if self is set, the next injector is\n      // the NullInjector, otherwise it's the parent.\n      let next = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n      return this.parent.get(token, notFoundValue);\n    } finally {\n      // Lastly, clean up the state by restoring the previous injector.\n      setCurrentInjector(previousInjector);\n    }\n  }\n\n  private assertNotDestroyed(): void {\n    if (this.destroyed) {\n      throw new Error('Injector has already been destroyed.');\n    }\n  }\n\n  /**\n   * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n   * to this injector.\n   */\n  private processInjectorType(\n      defOrWrappedDef: InjectorType<any>|InjectorTypeWithProviders<any>,\n      parents: Set<InjectorType<any>>) {\n    defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n\n    // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n    // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n    // read, so care is taken to only do the read once.\n\n    // First attempt to read the ngInjectorDef.\n    let def = (defOrWrappedDef as InjectorType<any>).ngInjectorDef as(InjectorDef<any>| undefined);\n\n    // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n    const ngModule =\n        (def == null) && (defOrWrappedDef as InjectorTypeWithProviders<any>).ngModule || undefined;\n\n    // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n    // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n    // is the `ngModule`.\n    const defType: InjectorType<any> =\n        (ngModule === undefined) ? (defOrWrappedDef as InjectorType<any>) : ngModule;\n\n    // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n    // extra providers.\n    const providers =\n        (ngModule !== undefined) && (defOrWrappedDef as InjectorTypeWithProviders<any>).providers ||\n        EMPTY_ARRAY;\n\n    // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n    // `InjectorDef` is on its `ngModule`.\n    if (ngModule !== undefined) {\n      def = ngModule.ngInjectorDef;\n    }\n\n    // If no definition was found, throw.\n    if (def == null) {\n      throw new Error(`Type ${stringify(defType)} is missing an ngInjectorDef definition.`);\n    }\n\n    // Check for circular dependencies.\n    if (parents.has(defType)) {\n      throw new Error(`Circular dependency: type ${stringify(defType)} ends up importing itself.`);\n    }\n\n    // Track the InjectorType and add a provider for it.\n    this.injectorDefTypes.add(defType);\n    this.records.set(defType, makeRecord(def.factory));\n\n    // Add providers in the same way that @NgModule resolution did:\n\n    // First, include providers from any imports.\n    if (def.imports != null) {\n      // Before processing defType's imports, add it to the set of parents. This way, if it ends\n      // up deeply importing itself, this can be detected.\n      parents.add(defType);\n      try {\n        deepForEach(def.imports, imported => this.processInjectorType(imported, parents));\n      } finally {\n        // Remove it from the parents set when finished.\n        parents.delete(defType);\n      }\n    }\n\n    // Next, include providers listed on the definition itself.\n    if (def.providers != null) {\n      deepForEach(def.providers, provider => this.processProvider(provider));\n    }\n\n    // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n    deepForEach(providers, provider => this.processProvider(provider));\n  }\n\n  /**\n   * Process a `SingleProvider` and add it.\n   */\n  private processProvider(provider: SingleProvider): void {\n    // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n    // property.\n    provider = resolveForwardRef(provider);\n    let token: any = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n\n    // Construct a `Record` for the provider.\n    const record = providerToRecord(provider);\n\n    if (!isTypeProvider(provider) && provider.multi === true) {\n      // If the provider indicates that it's a multi-provider, process it specially.\n      // First check whether it's been defined already.\n      let multiRecord = this.records.get(token);\n      if (multiRecord) {\n        // It has. Throw a nice error if\n        if (multiRecord.multi === undefined) {\n          throw new Error(`Mixed multi-provider for ${token}.`);\n        }\n      } else {\n        token = provider;\n        multiRecord = makeRecord(undefined, NOT_YET, true);\n        multiRecord.factory = () => injectArgs(multiRecord !.multi !);\n        this.records.set(token, multiRecord);\n      }\n      token = provider;\n      multiRecord.multi !.push(provider);\n    }\n\n    const existing = this.records.get(token);\n    if (existing && existing.multi !== undefined) {\n      throw new Error(`Mixed multi-provider for ${token}`);\n    }\n\n    this.records.set(token, record);\n  }\n\n  private hydrate<T>(token: Type<T>|InjectionToken<T>, record: Record<T>): T {\n    if (record.value === CIRCULAR) {\n      throw new Error(`Circular dep for ${stringify(token)}`);\n    } else if (record.value === NOT_YET) {\n      record.value = CIRCULAR;\n      record.value = record.factory !();\n    }\n    if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n      this.onDestroy.add(record.value);\n    }\n    return record.value as T;\n  }\n\n  private injectableDefInScope(def: InjectableDef<any>): boolean {\n    if (!def.providedIn) {\n      return false;\n    } else if (typeof def.providedIn === 'string') {\n      return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n    } else {\n      return this.injectorDefTypes.has(def.providedIn);\n    }\n  }\n}\n\nfunction injectableDefRecord(token: Type<any>| InjectionToken<any>): Record<any> {\n  const def = (token as InjectableType<any>).ngInjectableDef as InjectableDef<any>;\n  if (def === undefined) {\n    throw new Error(`Type ${stringify(token)} is missing an ngInjectableDef definition.`);\n  }\n  return makeRecord(def.factory);\n}\n\nfunction providerToRecord(provider: SingleProvider): Record<any> {\n  let token = resolveForwardRef(provider);\n  let value: any = NOT_YET;\n  let factory: (() => any)|undefined = undefined;\n  if (isTypeProvider(provider)) {\n    return injectableDefRecord(provider);\n  } else {\n    token = resolveForwardRef(provider.provide);\n    if (isValueProvider(provider)) {\n      value = provider.useValue;\n    } else if (isExistingProvider(provider)) {\n      factory = () => inject(provider.useExisting);\n    } else if (isFactoryProvider(provider)) {\n      factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n    } else {\n      const classRef = (provider as StaticClassProvider | ClassProvider).useClass || token;\n      if (hasDeps(provider)) {\n        factory = () => new (classRef)(...injectArgs(provider.deps));\n      } else {\n        return injectableDefRecord(classRef);\n      }\n    }\n  }\n  return makeRecord(factory, value);\n}\n\nfunction makeRecord<T>(\n    factory: (() => T) | undefined, value: T | {} = NOT_YET, multi: boolean = false): Record<T> {\n  return {\n    factory: factory,\n    value: value,\n    multi: multi ? [] : undefined,\n  };\n}\n\nfunction deepForEach<T>(input: (T | any[])[], fn: (value: T) => void): void {\n  input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n\nfunction isValueProvider(value: SingleProvider): value is ValueProvider {\n  return USE_VALUE in value;\n}\n\nfunction isExistingProvider(value: SingleProvider): value is ExistingProvider {\n  return !!(value as ExistingProvider).useExisting;\n}\n\nfunction isFactoryProvider(value: SingleProvider): value is FactoryProvider {\n  return !!(value as FactoryProvider).useFactory;\n}\n\nfunction isClassProvider(value: SingleProvider): value is ClassProvider {\n  return !!(value as ClassProvider).useClass;\n}\n\nfunction isTypeProvider(value: SingleProvider): value is TypeProvider {\n  return typeof value === 'function';\n}\n\nfunction hasDeps(value: ClassProvider | ConstructorProvider | StaticClassProvider):\n    value is ClassProvider&{deps: any[]} {\n  return !!(value as any).deps;\n}\n\nfunction hasOnDestroy(value: any): value is OnDestroy {\n  return typeof value === 'object' && value != null && (value as OnDestroy).ngOnDestroy &&\n      typeof(value as OnDestroy).ngOnDestroy === 'function';\n}\n\nfunction couldBeInjectableType(value: any): value is Type<any>|InjectionToken<any> {\n  return (typeof value === 'function') ||\n      (typeof value === 'object' && value instanceof InjectionToken);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport * from './di/metadata';\nexport {InjectableType, InjectorType, defineInjectable, defineInjector} from './di/defs';\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\nexport {Injectable, InjectableDecorator, InjectableProvider} from './di/injectable';\nexport {inject, InjectFlags, INJECTOR, Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {StaticProvider, ValueProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ClassProvider} from './di/provider';\nexport {createInjector} from './di/r3_injector';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken} from './di/injection_token';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\n@Injectable()\nexport class ApplicationInitStatus {\n  private resolve: Function;\n  private reject: Function;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private appInits: (() => any)[]) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as{done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable()\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, StaticProvider} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\n@Injectable()\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n}\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Location of the Host Element of this Component Instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The injector on which the component instance exists.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The instance of the Component.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The {@link ViewRef} of the Host View of this Component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The {@link ChangeDetectorRef} of the Component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\nexport abstract class ComponentFactory<C> {\n  abstract get selector(): string;\n  abstract get componentType(): Type<any>;\n  /**\n   * selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * the inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * the outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\n  private _factories = new Map<any, ComponentFactory<any>>();\n\n  constructor(\n      factories: ComponentFactory<any>[], private _parent: ComponentFactoryResolver,\n      private _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n  readonly selector: string;\n  readonly componentType: Type<any>;\n  readonly ngContentSelectors: string[];\n  readonly inputs: {propName: string, templateName: string}[];\n  readonly outputs: {propName: string, templateName: string}[];\n\n  constructor(private factory: ComponentFactory<C>, private ngModule: NgModuleRef<any>) {\n    super();\n    this.selector = factory.selector;\n    this.componentType = factory.componentType;\n    this.ngContentSelectors = factory.ngContentSelectors;\n    this.inputs = factory.inputs;\n    this.outputs = factory.outputs;\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @experimental\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Subscription} from 'rxjs';\n\n/**\n * Use by directives and components to emit custom Events.\n *\n * @usageNotes\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n\n  /**\n   * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n   * delivers events synchronously or asynchronously.\n   *\n   * @param isAsync By default, events are delivered synchronously (default value: `false`).\n   * Set to `true` for asynchronous event delivery.\n   */\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  emit(value?: T) { super.next(value); }\n\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let schedulerFn: (t: any) => any;\n    let errorFn = (err: any): any => null;\n    let completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n\n    if (generatorOrNext instanceof Subscription) {\n      generatorOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\nimport {} from 'zone.js';\nimport {EventEmitter} from '../event_emitter';\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs) as T;\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn) as T;\n  }\n}\n\nfunction noop() {}\nconst EMPTY_PAYLOAD = {};\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run(fn: () => any): any { return fn(); }\n\n  runGuarded(fn: () => any): any { return fn(); }\n\n  runOutsideAngular(fn: () => any): any { return fn(); }\n\n  runTask<T>(fn: () => any): any { return fn(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  isPeriodic: boolean;\n  delay?: number;\n  creationLocation: Error;\n  xhr?: XMLHttpRequest;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: any;\n\n  constructor(private _ngZone: NgZone) {\n    this._watchAngularEvents();\n    _ngZone.run(() => { this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop() !;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        isPeriodic: t.data.isPeriodic,\n        delay: t.data.delay,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        // Added by Zones for XHRs\n        // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n        xhr: (t.data as any).target\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number { return this._pendingCount; }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\n@Injectable()\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  constructor() { _testabilityGetter.addToWindow(this); }\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) { this._applications.delete(token); }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() { this._applications.clear(); }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\nclass _NoopGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {}\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability = new _NoopGetTestability();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Observer, Subscription, merge} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\nlet _platform: PlatformRef;\n\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        const injectedProviders: StaticProvider[] =\n            providers.concat(extraProviders).concat({provide: marker, useValue: true});\n        createPlatform(Injector.create({providers: injectedProviders, name: desc}));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n */\n@Injectable()\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   *\n   * @experimental APIs related to application bootstrap are currently under review.\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZoneOption = options ? options.ngZone : undefined;\n    const ngZone = getNgZone(ngZoneOption);\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone !.runOutsideAngular(\n          () => ngZone !.onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone !, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>, compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const options = optionsReducer({}, compilerOptions);\n    const compiler = compilerFactory.createCompiler([options]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { return this._injector; }\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  get destroyed() { return this._destroyed; }\n}\n\nfunction getNgZone(ngZoneOption?: NgZone | 'zone.js' | 'noop'): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneOption === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n        new NgZone({enableLongStackTrace: isDevMode()});\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T | T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n */\n@Injectable()\nexport class ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n  private _stable = true;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   */\n  public readonly isStable: Observable<boolean>;\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus) {\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as{isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the componentType's\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * componentType's selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory =\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory) !;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  private _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this.components, componentRef);\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() { return this._views.length; }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n  constructor(\n      public id: string, public templateUrl: string, public slotCount: number,\n      public encapsulation: ViewEncapsulation, public styles: Array<string|any[]>,\n      public animations: any) {}\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n\n/**\n * @experimental\n */\nexport abstract class RendererFactory2 {\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  abstract begin?(): void;\n  abstract end?(): void;\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n/**\n * @experimental\n */\nexport enum RendererStyleFlags2 {\n  Important = 1 << 0,\n  DashCase = 1 << 1\n}\n\n/**\n * @experimental\n */\nexport abstract class Renderer2 {\n  /**\n   * This field can be used to store arbitrary data on this renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  abstract destroy(): void;\n  abstract createElement(name: string, namespace?: string|null): any;\n  abstract createComment(value: string): any;\n  abstract createText(value: string): any;\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode: ((node: any) => void)|null;\n  abstract appendChild(parent: any, newChild: any): void;\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  abstract removeChild(parent: any, oldChild: any): void;\n  abstract selectRootElement(selectorOrNode: string|any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Attention: On WebWorkers, this will always return a value,\n   * as we are asking for a result synchronously. I.e.\n   * the caller can't rely on checking whether this is null or not.\n   */\n  abstract nextSibling(node: any): any;\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  abstract addClass(el: any, name: string): void;\n  abstract removeClass(el: any, name: string): void;\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n  abstract setProperty(el: any, name: string, value: any): void;\n  abstract setValue(node: any, value: string): void;\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for render\nexport {RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, RootRenderer} from './render/api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) { this.nativeElement = nativeElement; }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory} from './ng_module_factory';\n\n/**\n * Used to load ng module factories.\n *\n */\nexport abstract class NgModuleFactoryLoader {\n  abstract load(path: string): Promise<NgModuleFactory<any>>;\n}\n\nlet moduleFactories = new Map<string, NgModuleFactory<any>>();\n\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  public readonly changes: Observable<any> = new EventEmitter();\n\n  readonly length: number = 0;\n  readonly first: T;\n  readonly last: T;\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  toArray(): T[] { return this._results.slice(); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._results as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._results.toString(); }\n\n  reset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n    (this as{length: number}).length = this._results.length;\n    (this as{last: T}).last = this._results[this.length - 1];\n    (this as{first: T}).first = this._results[0];\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n\n  /** internal */\n  setDirty() { (this as{dirty: boolean}).dirty = true; }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst _SEPARATOR = '#';\n\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathPrefix: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathSuffix: string;\n}\n\nconst DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\n@Injectable()\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\n  private _config: SystemJsNgModuleLoaderConfig;\n\n  constructor(private _compiler: Compiler, @Optional() config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    const offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n\n  private loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n\n  private loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\n}\n\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n *\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The location in the View where the Embedded View logically belongs to.\n   *\n   * The data-binding and injection contexts of Embedded Views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new Embedded Views are attached to the View Container of this location, but in\n   * advanced use-cases, the View can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n\n\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n *\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing View.\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  abstract get injector(): Injector;\n\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all Views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Returns the {@link ViewRef} for the View located in this container at the specified index.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Returns the number of Views currently attached to this container.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an Embedded View based on the {@link TemplateRef `templateRef`} and inserts it\n   * into this container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the {@link ViewRef} for the newly created View.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single {@link Component} and inserts its Host View into this container at the\n   * specified `index`.\n   *\n   * The component is instantiated using its {@link ComponentFactory} which can be obtained via\n   * {@link ComponentFactoryResolver#resolveComponentFactory resolveComponentFactory}.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * You can optionally specify the {@link Injector} that will be used as parent for the Component.\n   *\n   * Returns the {@link ComponentRef} of the Host View created for the newly instantiated Component.\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * If `index` is not specified, the new View will be inserted as the last View in the container.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a View identified by a {@link ViewRef} into the container at the specified `index`.\n   *\n   * Returns the inserted {@link ViewRef}.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of the View, specified via {@link ViewRef}, within the current container or\n   * `-1` if this container doesn't contain the View.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a View attached to this container at the specified `index`.\n   *\n   * If `index` is not specified, the last View in the container will be removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Use along with {@link #insert} to move a View within the current container.\n   *\n   * If the `index` param is omitted, the last {@link ViewRef} is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport abstract class ChangeDetectorRef {\n  /**\n   * Marks a view and all of its ancestors dirty.\n   *\n   * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n   * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n   * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'my-app',\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   * })\n   * class AppComponent {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   * ```\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches the view from the change detection tree.\n   *\n   * Detached views will not be checked during change detection runs until they are\n   * re-attached, even if they are dirty. `detach` can be used in combination with\n   * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks the view and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n   * local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   *\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach detach} for more information.\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the view to the change detection tree.\n   *\n   * This can be used to re-attach views that were previously detached from the tree\n   * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'my-app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class AppComponent {\n   *   live = true;\n   * }\n   * ```\n   */\n  abstract reattach(): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n\nexport abstract class ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys the view and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  abstract get destroyed(): boolean;\n\n  abstract onDestroy(callback: Function): any /** TODO #9100 */;\n}\n\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * @usageNotes\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two `TemplateRef`s:\n *\n * Outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate `TemplateRef`s.\n *\n * The outer/inner `TemplateRef`s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n  abstract get context(): C;\n\n  abstract get rootNodes(): any[];\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for compiler\nexport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, ModuleWithComponentFactories} from './linker/compiler';\nexport {ComponentFactory, ComponentRef} from './linker/component_factory';\nexport {ComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ElementRef} from './linker/element_ref';\nexport {NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nexport {NgModuleFactoryLoader, getModuleFactory} from './linker/ng_module_factory_loader';\nexport {QueryList} from './linker/query_list';\nexport {SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig} from './linker/system_js_ng_module_factory_loader';\nexport {TemplateRef} from './linker/template_ref';\nexport {ViewContainerRef} from './linker/view_container_ref';\nexport {EmbeddedViewRef, ViewRef} from './linker/view_ref';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement|null;\n\n  constructor(nativeNode: any, parent: DebugNode|null, private _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string | null};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string | null};\n  childNodes: DebugNode[];\n  nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @experimental\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\n/**\n * @experimental\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T): boolean; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\n\n\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\n  constructor() {}\n  supports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn);\n  }\n}\n\nconst trackByIdentity = (index: number, item: any) => item;\n\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\n  public readonly length: number = 0;\n  public readonly collection: V[]|Iterable<V>|null;\n  // Keeps track of the used records at any point in time (during & across `_check()` calls)\n  private _linkedRecords: _DuplicateMap<V>|null = null;\n  // Keeps track of the removed records at any point in time during `_check()` calls.\n  private _unlinkedRecords: _DuplicateMap<V>|null = null;\n  private _previousItHead: IterableChangeRecord_<V>|null = null;\n  private _itHead: IterableChangeRecord_<V>|null = null;\n  private _itTail: IterableChangeRecord_<V>|null = null;\n  private _additionsHead: IterableChangeRecord_<V>|null = null;\n  private _additionsTail: IterableChangeRecord_<V>|null = null;\n  private _movesHead: IterableChangeRecord_<V>|null = null;\n  private _movesTail: IterableChangeRecord_<V>|null = null;\n  private _removalsHead: IterableChangeRecord_<V>|null = null;\n  private _removalsTail: IterableChangeRecord_<V>|null = null;\n  // Keeps track of records where custom track by is the same, but item identity has changed\n  private _identityChangesHead: IterableChangeRecord_<V>|null = null;\n  private _identityChangesTail: IterableChangeRecord_<V>|null = null;\n  private _trackByFn: TrackByFunction<V>;\n\n  constructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n\n  forEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let nextIt = this._itHead;\n    let nextRemove = this._removalsHead;\n    let addRemoveOffset = 0;\n    let moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex ! <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt ! :\n          nextRemove;\n      const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt !._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const localCurrentIndex = currentIndex ! - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let i = 0; i < localMovePreviousIndex; i++) {\n              const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n\n  forEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  forEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n\n  diff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  onDestroy() {}\n\n  check(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let record: IterableChangeRecord_<V>|null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      (this as{length: number}).length = collection.length;\n\n      for (let index = 0; index < this.length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      (this as{length: number}).length = index;\n    }\n\n    this._truncate(record);\n    (this as{collection: V[] | Iterable<V>}).collection = collection;\n    return this.isDirty;\n  }\n\n  /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n   * changes.\n   */\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * @internal\n   */\n  _reset() {\n    if (this.isDirty) {\n      let record: IterableChangeRecord_<V>|null;\n      let nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // TODO(vicb): when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * @internal\n   */\n  _mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * @internal\n   */\n  _verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev !, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n\n  /**\n   * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {@link IterableChangeRecord_}.\n   *\n   * @internal\n   */\n  _truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n\n  /** @internal */\n  _reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const prev = record._prevRemoved;\n    const next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // TODO(vicb):\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // TODO(vicb):\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n\n  /** @internal */\n  _remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n\n  /** @internal */\n  _unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const prev = record._prev;\n    const next = record._next;\n\n    // TODO(vicb):\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n\n  /** @internal */\n  _addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // TODO(vicb):\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n\n  private _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // TODO(vicb):\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // TODO(vicb):\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n}\n\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n\n  /** @internal */\n  _nextPrevious: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prev: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _next: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextAdded: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextMoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextIdentityChange: IterableChangeRecord_<V>|null = null;\n\n\n  constructor(public item: V, public trackById: any) {}\n}\n\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList<V> {\n  /** @internal */\n  _head: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _tail: IterableChangeRecord_<V>|null = null;\n\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   */\n  add(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // TODO(vicb):\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail !._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n\n  // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n  // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex !) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   */\n  remove(record: IterableChangeRecord_<V>): boolean {\n    // TODO(vicb):\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n\n  put(record: IterableChangeRecord_<V>) {\n    const key = record.trackById;\n\n    let duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   */\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const key = trackById;\n    const recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n\n  /**\n   * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   */\n  remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const key = record.trackById;\n    const recordList: _DuplicateItemRecordList<V> = this.map.get(key) !;\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n\n  get isEmpty(): boolean { return this.map.size === 0; }\n\n  clear() { this.map.clear(); }\n}\n\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\n\n\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\n  constructor() {}\n  supports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): KeyValueDiffer<K, V> { return new DefaultKeyValueDiffer<K, V>(); }\n}\n\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\n  private _records = new Map<K, KeyValueChangeRecord_<K, V>>();\n  private _mapHead: KeyValueChangeRecord_<K, V>|null = null;\n  // _appendAfter is used in the check loop\n  private _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\n  private _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  diff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n\n  onDestroy() {}\n\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   */\n  check(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   */\n  private _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n\n  private _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const record = this._records.get(key) !;\n      this._maybeAddToChanges(record, value);\n      const prev = record._prev;\n      const next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n\n  /** @internal */\n  _reset() {\n    if (this.isDirty) {\n      let record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n\n  // Add the record or a given key to the list of changes only when the value has actually changed\n  private _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n\n  private _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail !._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  private _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail !._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  /** @internal */\n  private _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _prev: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n\n  constructor(public key: K) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable} from '../../di/defs';\nimport {Optional, SkipSelf} from '../../di/metadata';\nimport {StaticProvider} from '../../di/provider';\nimport {DefaultIterableDifferFactory} from '../differs/default_iterable_differ';\n\n\n/**\n * A type describing supported iterable types.\n *\n *\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n *\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n *\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn:\n          (record: IterableChangeRecord<V>, previousIndex: number|null,\n           currentIndex: number|null) => void): void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n   * changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n *\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `TrackByFunction`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n *\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n *\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n}\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nexport class IterableDiffers {\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private\n   */\n  factories: IterableDifferFactory[];\n  constructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n\n  static create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n\n    return new IterableDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {@link IterableDiffers} instance with the provided factories and return a new\n   * {@link IterableDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link IterableDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(iterable: any): IterableDifferFactory {\n    const factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider} from '../../di';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n *\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n *\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n *\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n *\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nexport class KeyValueDiffers {\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\nexport {ChangeDetectionStrategy, ChangeDetectorRef, CollectionChangeRecord, DefaultIterableDiffer, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers, NgIterable, PipeTransform, SimpleChange, SimpleChanges, TrackByFunction, WrappedValue} from './change_detection/change_detection';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef, deps: [Injector]},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationInitStatus} from './application_init';\nimport {ApplicationRef} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\n\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\n@NgModule({\n  providers: [\n    ApplicationRef,\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n  ]\n})\nexport class ApplicationModule {\n  // Inject ApplicationRef to make it eager...\n  constructor(appRef: ApplicationRef) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport class InertBodyHelper {\n  private inertBodyElement: HTMLElement;\n  private inertDocument: Document;\n\n  constructor(private defaultDoc: Document) {\n    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n    this.inertBodyElement = this.inertDocument.body;\n\n    if (this.inertBodyElement == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.inertDocument.createElement('html');\n      this.inertDocument.appendChild(inertHtml);\n      this.inertBodyElement = this.inertDocument.createElement('body');\n      inertHtml.appendChild(this.inertBodyElement);\n    }\n\n    this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n      // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n      // so use the XHR strategy.\n      this.getInertBodyElement = this.getInertBodyElement_XHR;\n      return;\n    }\n\n    this.inertBodyElement.innerHTML =\n        '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n    if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n      // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n      // so use the DOMParser strategy, if it is available.\n      // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n      // fall through to the default strategy below.\n      if (isDOMParserAvailable()) {\n        this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n        return;\n      }\n    }\n\n    // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n    this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n  }\n\n  /**\n   * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n   * The implementation of this is determined in the constructor, when the class is instantiated.\n   */\n  getInertBodyElement: (html: string) => HTMLElement | null;\n\n  /**\n   * Use XHR to create and fill an inert body element (on Safari 10.1)\n   * See\n   * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n   */\n  private getInertBodyElement_XHR(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      html = encodeURI(html);\n    } catch (e) {\n      return null;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'document';\n    xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n    xhr.send(null);\n    const body: HTMLBodyElement = xhr.response.body;\n    body.removeChild(body.firstChild !);\n    return body;\n  }\n\n  /**\n   * Use DOMParser to create and fill an inert body element (on Firefox)\n   * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n   *\n   */\n  private getInertBodyElement_DOMParser(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      const body = new (window as any)\n                       .DOMParser()\n                       .parseFromString(html, 'text/html')\n                       .body as HTMLBodyElement;\n      body.removeChild(body.firstChild !);\n      return body;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * Use an HTML5 `template` element, if supported, or an inert body element created via\n   * `createHtmlDocument` to create and fill an inert DOM element.\n   * This is the default sane strategy to use if the browser does not require one of the specialised\n   * strategies above.\n   */\n  private getInertBodyElement_InertDocument(html: string) {\n    // Prefer using <template> element if supported.\n    const templateEl = this.inertDocument.createElement('template');\n    if ('content' in templateEl) {\n      templateEl.innerHTML = html;\n      return templateEl;\n    }\n\n    this.inertBodyElement.innerHTML = html;\n\n    // Support: IE 9-11 only\n    // strip custom-namespaced attributes on IE<=11\n    if ((this.defaultDoc as any).documentMode) {\n      this.stripCustomNsAttrs(this.inertBodyElement);\n    }\n\n    return this.inertBodyElement;\n  }\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n   * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n   * 'ns1:xlink:foo').\n   *\n   * This is undesirable since we don't want to allow any of these custom attributes. This method\n   * strips them all.\n   */\n  private stripCustomNsAttrs(el: Element) {\n    const elAttrs = el.attributes;\n    // loop backwards so that we can support removals.\n    for (let i = elAttrs.length - 1; 0 < i; i--) {\n      const attrib = elAttrs.item(i);\n      const attrName = attrib.name;\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        el.removeAttribute(attrName);\n      }\n    }\n    let childNode = el.firstChild;\n    while (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode as Element);\n      childNode = childNode.nextSibling;\n    }\n  }\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n  try {\n    return !!(window as any).DOMParser;\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nexport function _sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {InertBodyHelper} from './inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from './url_sanitizer';\n\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const t of tags.split(',')) res[t] = true;\n  return res;\n}\n\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const s of sets) {\n    for (const v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nconst VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nconst URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nconst SRCSET_ATTRS = tagSet('srcset');\n\nconst HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nconst VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n  // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n  // because characters were re-encoded.\n  public sanitizedSomething = false;\n  private buf: string[] = [];\n\n  sanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let current: Node = el.firstChild !;\n    while (current) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        this.startElement(current as Element);\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        this.chars(current.nodeValue !);\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (current.firstChild) {\n        current = current.firstChild !;\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          this.endElement(current as Element);\n        }\n\n        let next = this.checkClobberedElement(current, current.nextSibling !);\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, current.parentNode !);\n      }\n    }\n    return this.buf.join('');\n  }\n\n  private startElement(element: Element) {\n    const tagName = element.nodeName.toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return;\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const elAttr = elAttrs.item(i);\n      const attrName = elAttr.name;\n      const lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        continue;\n      }\n      let value = elAttr.value;\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = _sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n    }\n    this.buf.push('>');\n  }\n\n  private endElement(current: Element) {\n    const tagName = current.nodeName.toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n\n  private chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n\n  checkClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode &&\n        (node.compareDocumentPosition(nextNode) &\n         Node.DOCUMENT_POSITION_CONTAINED_BY) ===Â Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      throw new Error(\n          `Failed to sanitize html because the element is clobbered: ${(node as Element).outerHTML}`);\n    }\n    return nextNode;\n  }\n}\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const hi = match.charCodeAt(0);\n            const low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet inertBodyHelper: InertBodyHelper;\n\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nexport function _sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  let inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let mXSSAttempts = 5;\n    let parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = inertBodyElement !.innerHTML;\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const sanitizer = new SanitizingHtmlSerializer();\n    const safeHtml = sanitizer.sanitizeChildren(\n        getTemplateContent(inertBodyElement !) as Element || inertBodyElement);\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      console.warn(\n          'WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n    }\n\n    return safeHtml;\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n      while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n      }\n    }\n  }\n}\n\nfunction getTemplateContent(el: Node): Node|null {\n  return 'content' in (el as any /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n      el.content :\n      null;\n}\nfunction isTemplateElement(el: Node): el is HTMLTemplateElement {\n  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {_sanitizeUrl} from './url_sanitizer';\n\n\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst COLOR_FNS = '(?:rgb|hsl)a?';\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst CSS3_FNS = '(?:calc|attr)';\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value: string) {\n  let outsideSingle = true;\n  let outsideDouble = true;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nexport function _sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const urlMatch = value.match(URL_RE);\n  if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    console.warn(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n *\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../sanitization/security';\nimport {Type} from '../type';\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n  modules: any[];\n  isRoot: boolean;\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeNgModule = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n  initIndex: number;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  // InitState Uses 3 bits\n  InitState_Mask = 7 << 8,\n  InitState_BeforeInit = 0 << 8,\n  InitState_CallingOnInit = 1 << 8,\n  InitState_CallingAfterContentInit = 2 << 8,\n  InitState_CallingAfterViewInit = 3 << 8,\n  InitState_AfterInit = 4 << 8,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges | InitState_BeforeInit\n}\n\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nexport function shiftInitState(\n    view: ViewData, priorInitState: ViewState, newInitState: ViewState): boolean {\n  // Only update the InitState if we are currently in the prior state.\n  // For example, only move into CallingInit if we are in BeforeInit. Only\n  // move into CallingContentInit if we are in CallingInit. Normally this will\n  // always be true because of how checkCycle is called in checkAndUpdateView.\n  // However, if checkAndUpdateView is called recursively or if an exception is\n  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n  // from the beginning. This ensures the state is monotonically increasing,\n  // terminating in the AfterInit state, which ensures the Init methods are called\n  // at least once and only once.\n  const state = view.state;\n  const initState = state & ViewState.InitState_Mask;\n  if (initState === priorInitState) {\n    view.state = (state & ~ViewState.InitState_Mask) | newInitState;\n    view.initIndex = -1;\n    return true;\n  }\n  return initState === newInitState;\n}\n\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nexport function shouldCallLifecycleInitHook(\n    view: ViewData, initState: ViewState, index: number): boolean {\n  if ((view.state & ViewState.InitState_Mask) === initState && view.initIndex <= index) {\n    view.initIndex = index + 1;\n    return true;\n  }\n  return false;\n}\n\nexport interface DisposableFn { (): void; }\n\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData { private __brand: any; }\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return <any>view.nodes[index];\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  overrideComponentView(compType: Type<any>, compFactory: ComponentFactory<any>): void;\n  clearOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  overrideComponentView: undefined !,\n  clearOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  (err as any)[ERROR_DEBUG_CONTEXT] = context;\n  (err as any)[ERROR_LOGGER] = context.logError.bind(context);\n}\n\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SOURCE} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const NOOP: any = () => {};\n\nconst _tokenKeyCache = new Map<any, string>();\n\nexport function tokenKey(token: any): string {\n  let key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (WrappedValue.isWrapped(value)) {\n    value = WrappedValue.unwrap(value);\n    const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet _renderCompCount = 0;\n\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    const bindingName = def.bindings[bindingIdx].name;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`,\n        `${bindingName}: ${value}`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function markParentViewsForCheck(view: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const nodeDef = view.def.nodes[nodeIndex];\n    const startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch (e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef !.nodeIndex);\n  }\n  return null;\n}\n\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef !.parent;\n  } else {\n    return null;\n  }\n}\n\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let matchedQueryIds = 0;\n  const references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[], sourceName?: string): DepDef[] {\n  return deps.map(value => {\n    let token: any;\n    let flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n      Object.defineProperty(token, SOURCE, {value: sourceName, configurable: true});\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element !.componentRendererType &&\n         renderParent.element !.componentRendererType !.encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent !.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let value = DEFINITION_CACHE.get(factory) !as D;\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n\nexport function rootRenderNodes(view: ViewData): any[] {\n  const renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode !));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const hostView = compView !.parent;\n  const hostElDef = viewParentEl(compView !);\n  const startIndex = hostElDef !.nodeIndex + 1;\n  const endIndex = hostElDef !.nodeIndex + hostElDef !.childCount;\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = hostView !.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView !, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView !.parent) {\n    // a root view\n    const projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent !.index, action, parentNode, nextSibling, target);\n  } else {\n    const rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element !.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target !.push(renderNode);\n      break;\n  }\n}\n\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const match = name.match(NS_PREFIX_RE) !;\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let flags = 0;\n  for (let i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let result = '';\n  for (let i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const EMPTY_ARRAY: any[] = [];\nexport const EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../sanitization/security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let ns: string = null !;\n  let name: string = null !;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let securityContext: SecurityContext = undefined !;\n    let suffix: string = undefined !;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = <string>suffixOrSecurityContext;\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = <SecurityContext>suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: <any>target, eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const attrs = <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const elDef = def.element !;\n  const rootSelectorOrNode = view.root.selectorOrNode;\n  const renderer = view.renderer;\n  let el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let i = 0; i < def.outputs.length; i++) {\n    const output = def.outputs[i];\n    const handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const disposable =\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n    view.disposables ![def.outputIndex + i] = disposable;\n  }\n}\n\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\n\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindLen = def.bindings.length;\n  let changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const binding = def.bindings[bindingIdx];\n  const elData = asElementData(view, def.nodeIndex);\n  const renderNode = elData.renderElement;\n  const name = binding.name !;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, value as{} | string);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, InjectFlags, Injector, setCurrentInjector} from '../di/injector';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n      const injectableDef = depDef.token.ngInjectableDef as InjectableDef<any>;\n      const key = tokenKey;\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even across component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {InjectFlags, Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  _projectedViews: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  _providers: any[];\n  /** @internal */\n  _modules: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {INJECTOR, Injector, resolveForwardRef} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {stringify} from '../util';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData, shouldCallLifecycleInitHook} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst RendererV1TokenKey = tokenKey(RendererV1);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const bindings: BindingDef[] = [];\n  if (props) {\n    for (let prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n\n  const depDefs = splitDepsDsl(deps, stringify(token));\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent !, viewParentEl(compView) !, allowPrivateServices, def.provider !.value,\n      def.provider !.deps);\n}\n\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const instance = createClass(\n      view, def.parent !, allowPrivateServices, def.provider !.value, def.provider !.deps);\n  if (def.outputs.length) {\n    for (let i = 0; i < def.outputs.length; i++) {\n      const output = def.outputs[i];\n      const subscription = instance[output.propName !].subscribe(\n          eventHandlerClosure(view, def.parent !.nodeIndex, output.eventName));\n      view.disposables ![def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  const bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  for (let i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, def.parent !, allowPrivateServices, providerDef !.deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return providerDef !.value;\n  }\n}\n\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element !.componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent !;\n  }\n\n  let searchView: ViewData|null = view;\n  while (searchView) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(searchView, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element !.template) {\n            return asElementData(searchView, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let cdView = findCompView(searchView, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n        case INJECTORRefTokenKey:\n          return createInjector(searchView, elDef);\n        default:\n          const providerDef =\n              (allowPrivateServices ? elDef.element !.allProviders :\n                                      elDef.element !.publicProviders) ![tokenKey];\n          if (providerDef) {\n            let providerData = asProviderData(searchView, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(searchView, providerDef)};\n              searchView.nodes[providerDef.nodeIndex] = providerData as any;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n\n    allowPrivateServices = isComponentView(searchView);\n    elDef = viewParentEl(searchView) !;\n    searchView = searchView.parent !;\n\n    if (depDef.flags & DepFlags.Self) {\n      searchView = null;\n    }\n  }\n\n  const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const compView = asElementData(view, def.parent !.nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const binding = def.bindings[bindingIdx];\n  const propName = binding.name !;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n    const binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName !] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const nodes = view.def.nodes;\n  let initIndex = 0;\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeDef = nodes[i];\n    let parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction callElementProvidersLifecycles(\n    view: ViewData, elDef: NodeDef, lifecycles: NodeFlags, initIndex: number): number {\n  for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n  return initIndex;\n}\n\nfunction callProviderLifecycles(\n    view: ViewData, index: number, lifecycles: NodeFlags, initIndex: number) {\n  const providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterContentInit, initIndex)) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterViewInit, initIndex)) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let bindingDefs: QueryBindingDef[] = [];\n  for (let propName in bindings) {\n    const bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n\nexport function dirtyParentQueries(view: ViewData) {\n  const queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let tplDef = view.parentNodeDef !;\n    view = view.parent;\n    // content queries\n    const end = tplDef.nodeIndex + tplDef.childCount;\n    for (let i = 0; i <= end; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query !.filterId & queryIds) === nodeDef.query !.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let i = 0; i < view.def.nodes.length; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let directiveInstance: any;\n  let newValues: any[] = undefined !;\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const elementDef = nodeDef.parent !.parent !;\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query !,\n        []);\n    directiveInstance = asProviderData(view, nodeDef.parent !.nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query !, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const bindings = nodeDef.query !.bindings;\n  let notify = false;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    let boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    const valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element !.template &&\n        (nodeDef.element !.template !.nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const embeddedViews = elementData.viewContainer !._embeddedViews;\n        for (let k = 0; k < embeddedViews.length; k++) {\n          const embeddedView = embeddedViews[k];\n          const dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let k = 0; k < projectedViews.length; k++) {\n          const projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const ngContentIndex = def.ngContent !.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let renderNode: any;\n  const renderer = view.renderer;\n  renderNode = renderer.createText(def.text !.prefix);\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let changed = false;\n  const bindings = def.bindings;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let value = def.text !.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let value = '';\n    for (let i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text !.prefix + value;\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData, shiftInitState} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let viewBindingCount = 0;\n  let viewDisposableCount = 0;\n  let viewNodeFlags = 0;\n  let viewRootNodeFlags = 0;\n  let viewMatchedQueries = 0;\n  let currentParent: NodeDef|null = null;\n  let currentRenderParent: NodeDef|null = null;\n  let currentElementHasPublicProviders = false;\n  let currentElementHasPrivateProviders = false;\n  let lastRenderRootNode: NodeDef|null = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element !.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent !.element !.publicProviders =\n            Object.create(currentParent !.element !.publicProviders);\n        currentParent !.element !.allProviders = currentParent !.element !.publicProviders;\n      }\n      const isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent !.element !.publicProviders ![tokenKey(node.provider !.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent !.element !.allProviders =\n              Object.create(currentParent !.element !.publicProviders);\n        }\n        currentParent !.element !.allProviders ![tokenKey(node.provider !.token)] = node;\n      }\n      if (isComponent) {\n        currentParent !.element !.componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element !.handleEvent !(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && node.element !.name === null;\n}\n\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const rendererType = nodeDef.element !.componentRendererType;\n  let compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, nodeDef.element !.componentProvider, viewDef);\n}\n\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const nodes: NodeData[] = new Array(def.nodes.length);\n  const disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables,\n    initIndex: -1\n  };\n  return view;\n}\n\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nfunction createViewNodes(view: ViewData) {\n  let renderHost: any;\n  if (isComponentView(view)) {\n    const hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent !, hostDef !.parent !.nodeIndex).renderElement;\n  }\n  const def = view.def;\n  const nodes = view.nodes;\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const el = createElement(view, renderHost, nodeDef) as any;\n        let componentView: ViewData = undefined !;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const compViewDef = resolveDefinition(nodeDef.element !.componentView !);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: nodeDef.element !.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = createText(view, renderHost, nodeDef) as any;\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const instance = createProviderInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const instance = createPipeInstance(view, nodeDef);\n        nodeData = <ProviderData>{instance};\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const instance = createDirectiveInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const compView = asElementData(view, nodeDef.parent !.nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = createPureExpression(view, nodeDef) as any;\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = createQuery() as any;\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  shiftInitState(view, ViewState.InitState_BeforeInit, ViewState.InitState_CallingOnInit);\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  let callInit = shiftInitState(\n      view, ViewState.InitState_CallingOnInit, ViewState.InitState_CallingAfterContentInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked | (callInit ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callInit = shiftInitState(\n      view, ViewState.InitState_CallingAfterContentInit, ViewState.InitState_CallingAfterViewInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked | (callInit ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n  shiftInitState(view, ViewState.InitState_CallingAfterViewInit, ViewState.InitState_AfterInit);\n}\n\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let i = 0; i < projectedViews.length; i++) {\n          const projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${nodeDef.query!.id} not dirty`, `Query ${nodeDef.query!.id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n\nfunction destroyViewNodes(view: ViewData) {\n  const len = view.def.nodes.length;\n  for (let i = 0; i < len; i++) {\n    const def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode !(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode !(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\n\nenum ViewAction {\n  CreateViewNodes,\n  CheckNoChanges,\n  CheckNoChangesProjectedViews,\n  CheckAndUpdate,\n  CheckAndUpdateProjectedViews,\n  Destroy\n}\n\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const embeddedViews = asElementData(view, i).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const nodeCount = view.def.nodes.length;\n  for (let i = 0; i < nodeCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {tokenKey} from '../view/util';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n      typeof override.token.ngInjectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (token.ngInjectableDef.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(token.ngInjectableDef.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n  get component(): any { return this.elOrCompView.component; }\n  get context(): any { return this.elOrCompView.context; }\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\n\nclass DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\n\nclass DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any): any {\n    const el = this.delegate.selectRootElement(selectorOrNode);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {anchorDef, elementDef} from './element';\nexport {clearOverrides, createNgModuleFactory, overrideComponentView, overrideProvider} from './entrypoint';\nexport {ngContentDef} from './ng_content';\nexport {moduleDef, moduleProvideDef} from './ng_module';\nexport {directiveDef, pipeDef, providerDef} from './provider';\nexport {pureArrayDef, pureObjectDef, purePipeDef} from './pure_expression';\nexport {queryDef} from './query';\nexport {ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue} from './refs';\nexport {initServicesIfNeeded} from './services';\nexport {textDef} from './text';\nexport {EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue} from './util';\nexport {viewDef} from './view';\nexport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nexport * from './types';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {ALLOW_MULTIPLE_PLATFORMS as ÉµALLOW_MULTIPLE_PLATFORMS} from './application_ref';\nexport {APP_ID_RANDOM_PROVIDER as ÉµAPP_ID_RANDOM_PROVIDER} from './application_tokens';\nexport {defaultIterableDiffers as ÉµdefaultIterableDiffers} from './change_detection/change_detection';\nexport {devModeEqual as ÉµdevModeEqual} from './change_detection/change_detection_util';\nexport {isListLikeIterable as ÉµisListLikeIterable} from './change_detection/change_detection_util';\nexport {ChangeDetectorStatus as ÉµChangeDetectorStatus, isDefaultChangeDetectionStrategy as ÉµisDefaultChangeDetectionStrategy} from './change_detection/constants';\nexport {Console as ÉµConsole} from './console';\nexport {inject as Éµinject, setCurrentInjector as ÉµsetCurrentInjector} from './di/injector';\nexport {APP_ROOT as ÉµAPP_ROOT} from './di/scope';\nexport {ComponentFactory as ÉµComponentFactory} from './linker/component_factory';\nexport {CodegenComponentFactoryResolver as ÉµCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {ReflectionCapabilities as ÉµReflectionCapabilities} from './reflection/reflection_capabilities';\nexport {GetterFn as ÉµGetterFn, MethodFn as ÉµMethodFn, SetterFn as ÉµSetterFn} from './reflection/types';\nexport {DirectRenderer as ÉµDirectRenderer, RenderDebugInfo as ÉµRenderDebugInfo} from './render/api';\nexport {_sanitizeHtml as Éµ_sanitizeHtml} from './sanitization/html_sanitizer';\nexport {_sanitizeStyle as Éµ_sanitizeStyle} from './sanitization/style_sanitizer';\nexport {_sanitizeUrl as Éµ_sanitizeUrl} from './sanitization/url_sanitizer';\nexport {global as Éµglobal, looseIdentical as ÉµlooseIdentical, stringify as Éµstringify} from './util';\nexport {makeDecorator as ÉµmakeDecorator} from './util/decorators';\nexport {isObservable as ÉµisObservable, isPromise as ÉµisPromise} from './util/lang';\nexport {clearOverrides as ÉµclearOverrides, overrideComponentView as ÉµoverrideComponentView, overrideProvider as ÉµoverrideProvider} from './view/index';\nexport {NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './view/provider';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nexport function assertNumber(actual: any, msg: string) {\n  if (typeof actual != 'number') {\n    throwError(msg);\n  }\n}\n\nexport function assertEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual != expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual == expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertSame<T>(actual: T, expected: T, msg: string) {\n  if (actual !== expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertLessThan<T>(actual: T, expected: T, msg: string) {\n  if (actual >= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertGreaterThan<T>(actual: T, expected: T, msg: string) {\n  if (actual <= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNull<T>(actual: T, msg: string) {\n  if (actual != null) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotNull<T>(actual: T, msg: string) {\n  if (actual == null) {\n    throwError(msg);\n  }\n}\n\nexport function assertComponentType(\n    actual: any,\n    msg: string =\n        'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.') {\n  if (!actual.ngComponentDef) {\n    throwError(msg);\n  }\n}\n\nfunction throwError(msg: string): never {\n  debugger;  // Left intentionally for better debugger experience.\n  throw new Error(`ASSERTION ERROR: ${msg}`);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual} from './assert';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNodeFlags} from './interfaces/node';\nimport {HookData, LView, LifecycleStage, TView} from './interfaces/view';\n\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView.data\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nexport function queueInitHooks(\n    index: number, onInit: (() => void) | null, doCheck: (() => void) | null, tView: TView): void {\n  ngDevMode &&\n      assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n  if (onInit) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n  }\n\n  if (doCheck) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n    (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n  }\n}\n\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nexport function queueLifecycleHooks(flags: number, currentView: LView): void {\n  const tView = currentView.tView;\n  if (tView.firstTemplatePass === true) {\n    const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const count = flags & TNodeFlags.DirectiveCountMask;\n    const end = start + count;\n\n    // It's necessary to loop through the directives at elementEnd() (rather than processing in\n    // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n    // hooks for projected components and directives must be called *before* their hosts.\n    for (let i = start; i < end; i++) {\n      const def: DirectiveDef<any> = tView.directives ![i];\n      queueContentHooks(def, tView, i);\n      queueViewHooks(def, tView, i);\n      queueDestroyHooks(def, tView, i);\n    }\n  }\n}\n\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterContentInit) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n  }\n\n  if (def.afterContentChecked) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n  }\n}\n\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterViewInit) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n  }\n\n  if (def.afterViewChecked) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n  }\n}\n\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.onDestroy != null) {\n    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n  }\n}\n\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nexport function executeInitHooks(currentView: LView, tView: TView, creationMode: boolean): void {\n  if (currentView.lifecycleStage === LifecycleStage.Init) {\n    executeHooks(currentView.directives !, tView.initHooks, tView.checkHooks, creationMode);\n    currentView.lifecycleStage = LifecycleStage.AfterInit;\n  }\n}\n\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nexport function executeHooks(\n    data: any[], allHooks: HookData | null, checkHooks: HookData | null,\n    creationMode: boolean): void {\n  const hooksToCall = creationMode ? allHooks : checkHooks;\n  if (hooksToCall) {\n    callHooks(data, hooksToCall);\n  }\n}\n\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nexport function callHooks(data: any[], arr: HookData): void {\n  for (let i = 0; i < arr.length; i += 2) {\n    (arr[i + 1] as() => void).call(data[arr[i] as number]);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\ndeclare global {\n  const ngDevMode: boolean;\n}\n\ndeclare let global: any;\n\nif (typeof ngDevMode == 'undefined') {\n  if (typeof window != 'undefined') (window as any).ngDevMode = true;\n  if (typeof self != 'undefined') (self as any).ngDevMode = true;\n  if (typeof global != 'undefined') (global as any).ngDevMode = true;\n}\n\nexport const _ngDevMode = true;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LContainerNode, LElementNode, LTextNode} from './node';\n\n/**\n * Linked list of projected nodes (using the pNextOrParent property).\n */\nexport interface LProjection {\n  head: LElementNode|LTextNode|LContainerNode|null;\n  tail: LElementNode|LTextNode|LContainerNode|null;\n}\n\n/**\n * Expresses a single CSS Selector.\n *\n * Beginning of array\n * - First index: element name\n * - Subsequent odd indices: attr keys\n * - Subsequent even indices: attr values\n *\n * After SelectorFlags.CLASS flag\n * - Class name values\n *\n * SelectorFlags.NOT flag\n * - Changes the mode to NOT\n * - Can be combined with other flags to set the element / attr / class mode\n *\n * e.g. SelectorFlags.NOT | SelectorFlags.ELEMENT\n *\n * Example:\n * Original: `div.foo.bar[attr1=val1][attr2]`\n * Parsed: ['div', 'attr1', 'val1', 'attr2', '', SelectorFlags.CLASS, 'foo', 'bar']\n *\n * Original: 'div[attr1]:not(.foo[attr2])\n * Parsed: [\n *  'div', 'attr1', '',\n *  SelectorFlags.NOT | SelectorFlags.ATTRIBUTE 'attr2', '', SelectorFlags.CLASS, 'foo'\n * ]\n *\n * See more examples in node_selector_matcher_spec.ts\n */\nexport type CssSelector = (string | SelectorFlags)[];\n\n/**\n * A list of CssSelectors.\n *\n * A directive or component can have multiple selectors. This type is used for\n * directive defs so any of the selectors in the list will match that directive.\n *\n * Original: 'form, [ngForm]'\n * Parsed: [['form'], ['', 'ngForm', '']]\n */\nexport type CssSelectorList = CssSelector[];\n\n/** Flags used to build up CssSelectors */\nexport const enum SelectorFlags {\n  /** Indicates this is the beginning of a new negative selector */\n  NOT = 0b0001,\n\n  /** Mode for matching attributes */\n  ATTRIBUTE = 0b0010,\n\n  /** Mode for matching tag names */\n  ELEMENT = 0b0100,\n\n  /** Mode for matching class names */\n  CLASS = 0b1000,\n}\n\nexport const NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual, assertNotNull} from './assert';\nimport {LNode, LNodeType} from './interfaces/node';\n\nexport function assertNodeType(node: LNode, type: LNodeType) {\n  assertNotNull(node, 'should be called with a node');\n  assertEqual(node.type, type, `should be a ${typeName(type)}`);\n}\n\nexport function assertNodeOfPossibleTypes(node: LNode, ...types: LNodeType[]) {\n  assertNotNull(node, 'should be called with a node');\n  const found = types.some(type => node.type === type);\n  assertEqual(found, true, `Should be one of ${types.map(typeName).join(', ')}`);\n}\n\nfunction typeName(type: LNodeType): string {\n  if (type == LNodeType.Projection) return 'Projection';\n  if (type == LNodeType.Container) return 'Container';\n  if (type == LNodeType.View) return 'View';\n  if (type == LNodeType.Element) return 'Element';\n  return '<unknown>';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentTemplate} from './definition';\nimport {LContainerNode, LElementNode, LViewNode} from './node';\nimport {LQueries} from './query';\nimport {LView, TView} from './view';\n\n\n\n/** The state associated with an LContainer */\nexport interface LContainer {\n  /**\n   * The next active index in the views array to read or write to. This helps us\n   * keep track of where we are in the views array.\n   */\n  nextIndex: number;\n\n  /**\n   * This allows us to jump from a container to a sibling container or\n   * component view with the same parent, so we can remove listeners efficiently.\n   */\n  next: LView|LContainer|null;\n\n  /**\n   * Access to the parent view is necessary so we can propagate back\n   * up from inside a container to parent.next.\n   */\n  parent: LView|null;\n\n  /**\n   * A list of the container's currently active child views. Views will be inserted\n   * here as they are added and spliced from here when they are removed. We need\n   * to keep a record of current views so we know which views are already in the DOM\n   * (and don't need to be re-added) and so we can remove views from the DOM when they\n   * are no longer required.\n   */\n  readonly views: LViewNode[];\n\n  /**\n   * Parent Element which will contain the location where all of the Views will be\n   * inserted into to.\n   *\n   * If `renderParent` is `null` it is headless. This means that it is contained\n   * in another `LViewNode` which in turn is contained in another `LContainerNode` and\n   * therefore it does not yet have its own parent.\n   *\n   * If `renderParent` is not `null` then it may be:\n   * - same as `LContainerNode.parent` in which case it is just a normal container.\n   * - different from `LContainerNode.parent` in which case it has been re-projected.\n   *   In other words `LContainerNode.parent` is logical parent where as\n   *   `LContainer.projectedParent` is render parent.\n   *\n   * When views are inserted into `LContainerNode` then `renderParent` is:\n   * - `null`, we are in `LViewNode` keep going up a hierarchy until actual\n   *   `renderParent` is found.\n   * - not `null`, then use the `projectedParent.native` as the `RElement` to insert\n   *   `LViewNode`s into.\n   */\n  renderParent: LElementNode|null;\n\n  /**\n   * The template extracted from the location of the Container.\n   */\n  readonly template: ComponentTemplate<any>|null;\n\n  /**\n   * A count of dynamic views rendered into this container. If this is non-zero, the `views` array\n   * will be traversed when refreshing dynamic views on this container.\n   */\n  dynamicViewCount: number;\n\n  /**\n   * Queries active for this container - all the views inserted to / removed from\n   * this container are reported to queries referenced here.\n   */\n  queries: LQueries|null;\n}\n\n/**\n * The static equivalent of LContainer, used in TContainerNode.\n *\n * The container needs to store static data for each of its embedded views\n * (TViews). Otherwise, nodes in embedded views with the same index as nodes\n * in their parent views will overwrite each other, as they are in\n * the same template.\n *\n * Each index in this array corresponds to the static data for a certain\n * view. So if you had V(0) and V(1) in a container, you might have:\n *\n * [\n *   [{tagName: 'div', attrs: ...}, null],     // V(0) TView\n *   [{tagName: 'button', attrs ...}, null]    // V(1) TView\n * ]\n */\nexport type TContainer = TView[];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LContainer, TContainer} from './container';\nimport {LInjector} from './injector';\nimport {LProjection} from './projection';\nimport {LQueries} from './query';\nimport {RElement, RNode, RText} from './renderer';\nimport {LView, TData, TView} from './view';\n\n\n\n/**\n * LNodeType corresponds to the LNode.type property. It contains information\n * on how to map a particular set of bits in LNode.flags to the node type.\n */\nexport const enum LNodeType {\n  Container = 0b00,\n  Projection = 0b01,\n  View = 0b10,\n  Element = 0b11,\n  ViewOrElement = 0b10,\n}\n\n/**\n * Corresponds to the TNode.flags property.\n */\nexport const enum TNodeFlags {\n  /** The number of directives on this node is encoded on the least significant bits */\n  DirectiveCountMask = 0b00000000000000000000111111111111,\n\n  /** Then this bit is set when the node is a component */\n  isComponent = 0b1000000000000,\n\n  /** The index of the first directive on this node is encoded on the most significant bits  */\n  DirectiveStartingIndexShift = 13,\n}\n\n/**\n * LNode is an internal data structure which is used for the incremental DOM algorithm.\n * The \"L\" stands for \"Logical\" to differentiate between `RNodes` (actual rendered DOM\n * node) and our logical representation of DOM nodes, `LNodes`.\n *\n * The data structure is optimized for speed and size.\n *\n * In order to be fast, all subtypes of `LNode` should have the same shape.\n * Because size of the `LNode` matters, many fields have multiple roles depending\n * on the `LNode` subtype.\n *\n * See: https://en.wikipedia.org/wiki/Inline_caching#Monomorphic_inline_caching\n *\n * NOTE: This is a private data structure and should not be exported by any of the\n * instructions.\n */\nexport interface LNode {\n  /** The type of the node (see LNodeFlags) */\n  type: LNodeType;\n\n  /**\n   * The associated DOM node. Storing this allows us to:\n   *  - append children to their element parents in the DOM (e.g. `parent.native.appendChild(...)`)\n   *  - retrieve the sibling elements of text nodes whose creation / insertion has been delayed\n   */\n  readonly native: RElement|RText|null|undefined;\n\n  /**\n   * We need a reference to a node's parent so we can append the node to its parent's native\n   * element at the appropriate time.\n   */\n  readonly parent: LNode|null;\n\n  /**\n   * First child of the current node.\n   */\n  child: LNode|null;\n\n  /**\n   * The next sibling node. Necessary so we can propagate through the root nodes of a view\n   * to insert them or remove them from the DOM.\n   */\n  next: LNode|null;\n\n  /**\n   * If regular LElementNode, then `data` will be null.\n   * If LElementNode with component, then `data` contains LView.\n   * If LViewNode, then `data` contains the LView.\n   * If LContainerNode, then `data` contains LContainer.\n   * If LProjectionNode, then `data` contains LProjection.\n   */\n  readonly data: LView|LContainer|LProjection|null;\n\n\n  /**\n   * Each node belongs to a view.\n   *\n   * When the injector is walking up a tree, it needs access to the `directives` (part of view).\n   */\n  readonly view: LView;\n\n  /** The injector associated with this node. Necessary for DI. */\n  nodeInjector: LInjector|null;\n\n  /**\n   * Optional set of queries that track query-related events for this node.\n   *\n   * If present the node creation/updates are reported to the `LQueries`.\n   */\n  queries: LQueries|null;\n\n  /**\n   * If this node is projected, pointer to the next node in the same projection parent\n   * (which is a container, an element, or a text node), or to the parent projection node\n   * if this is the last node in the projection.\n   * If this node is not projected, this field is null.\n   */\n  pNextOrParent: LNode|null;\n\n  /**\n   * Pointer to the corresponding TNode object, which stores static\n   * data about this node.\n   */\n  tNode: TNode|null;\n\n  /**\n   * A pointer to a LContainerNode created by directives requesting ViewContainerRef\n   */\n  dynamicLContainerNode: LContainerNode|null;\n}\n\n\n/** LNode representing an element. */\nexport interface LElementNode extends LNode {\n  /** The DOM element associated with this node. */\n  readonly native: RElement;\n\n  child: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n  next: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n\n  /** If Component then data has LView (light DOM) */\n  readonly data: LView|null;\n\n  /** LElementNodes can be inside other LElementNodes or inside LViewNodes. */\n  readonly parent: LElementNode|LViewNode;\n}\n\n/** LNode representing a #text node. */\nexport interface LTextNode extends LNode {\n  /** The text node associated with this node. */\n  native: RText;\n  child: null;\n  next: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n\n  /** LTextNodes can be inside LElementNodes or inside LViewNodes. */\n  readonly parent: LElementNode|LViewNode;\n  readonly data: null;\n  dynamicLContainerNode: null;\n}\n\n/** Abstract node which contains root nodes of a view. */\nexport interface LViewNode extends LNode {\n  readonly native: null;\n  child: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n  next: LViewNode|null;\n\n  /**  LViewNodes can only be added to LContainerNodes. */\n  readonly parent: LContainerNode|null;\n  readonly data: LView;\n  dynamicLContainerNode: null;\n}\n\n/** Abstract node container which contains other views. */\nexport interface LContainerNode extends LNode {\n  /*\n   * Caches the reference of the first native node following this container in the same native\n   * parent.\n   * This is reset to undefined in containerRefreshEnd.\n   * When it is undefined, it means the value has not been computed yet.\n   * Otherwise, it contains the result of findBeforeNode(container, null).\n   */\n  native: RElement|RText|null|undefined;\n  readonly data: LContainer;\n  child: null;\n  next: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n\n  /** Containers can be added to elements or views. */\n  readonly parent: LElementNode|LViewNode|null;\n}\n\n\nexport interface LProjectionNode extends LNode {\n  readonly native: null;\n  child: null;\n  next: LContainerNode|LElementNode|LTextNode|LProjectionNode|null;\n\n  readonly data: LProjection;\n\n  /** Projections can be added to elements or views. */\n  readonly parent: LElementNode|LViewNode;\n  dynamicLContainerNode: null;\n}\n\n/**\n * LNode binding data (flyweight) for a particular node that is shared between all templates\n * of a specific type.\n *\n * If a property is:\n *    - PropertyAliases: that property's data was generated and this is it\n *    - Null: that property's data was already generated and nothing was found.\n *    - Undefined: that property's data has not yet been generated\n *\n * see: https://en.wikipedia.org/wiki/Flyweight_pattern for more on the Flyweight pattern\n */\nexport interface TNode {\n  /**\n   * This number stores two values using its bits:\n   *\n   * - the number of directives on that node (first 12 bits)\n   * - the starting index of the node's directives in the directives array (last 20 bits).\n   *\n   * These two values are necessary so DI can effectively search the directives associated\n   * with a node without searching the whole directives array.\n   */\n  flags: TNodeFlags;\n\n  /** The tag name associated with this node. */\n  tagName: string|null;\n\n  /**\n   * Static attributes associated with an element. We need to store\n   * static attributes to support content projection with selectors.\n   * Attributes are stored statically because reading them from the DOM\n   * would be way too slow for content projection and queries.\n   *\n   * Since attrs will always be calculated first, they will never need\n   * to be marked undefined by other instructions.\n   *\n   * The name of the attribute and its value alternate in the array.\n   * e.g. ['role', 'checkbox']\n   */\n  attrs: string[]|null;\n\n  /**\n   * A set of local names under which a given element is exported in a template and\n   * visible to queries. An entry in this array can be created for different reasons:\n   * - an element itself is referenced, ex.: `<div #foo>`\n   * - a component is referenced, ex.: `<my-cmpt #foo>`\n   * - a directive is referenced, ex.: `<my-cmpt #foo=\"directiveExportAs\">`.\n   *\n   * A given element might have different local names and those names can be associated\n   * with a directive. We store local names at even indexes while odd indexes are reserved\n   * for directive index in a view (or `-1` if there is no associated directive).\n   *\n   * Some examples:\n   * - `<div #foo>` => `[\"foo\", -1]`\n   * - `<my-cmpt #foo>` => `[\"foo\", myCmptIdx]`\n   * - `<my-cmpt #foo #bar=\"directiveExportAs\">` => `[\"foo\", myCmptIdx, \"bar\", directiveIdx]`\n   * - `<div #foo #bar=\"directiveExportAs\">` => `[\"foo\", -1, \"bar\", directiveIdx]`\n   */\n  localNames: (string|number)[]|null;\n\n  /** Information about input properties that need to be set once from attribute data. */\n  initialInputs: InitialInputData|null|undefined;\n\n  /**\n   * Input data for all directives on this node.\n   *\n   * - `undefined` means that the prop has not been initialized yet,\n   * - `null` means that the prop has been initialized but no inputs have been found.\n   */\n  inputs: PropertyAliases|null|undefined;\n\n  /**\n   * Output data for all directives on this node.\n   *\n   * - `undefined` means that the prop has not been initialized yet,\n   * - `null` means that the prop has been initialized but no outputs have been found.\n   */\n  outputs: PropertyAliases|null|undefined;\n\n  /**\n   * The static data equivalent of LNode.data.\n   *\n   * If this TNode corresponds to an LContainerNode, the container will\n   * need to store separate static data for each of its views (TContainer).\n   *\n   * If this TNode corresponds to an LElementNode, data will be null.\n   */\n  data: TContainer|null;\n}\n\n/** Static data for an LElementNode  */\nexport interface TElementNode extends TNode { data: null; }\n\n/** Static data for an LContainerNode */\nexport interface TContainerNode extends TNode { data: TContainer; }\n\n/**\n * This mapping is necessary so we can set input properties and output listeners\n * properly at runtime when property names are minified or aliased.\n *\n * Key: unminified / public input or output name\n * Value: array containing minified / internal name and related directive index\n *\n * The value must be an array to support inputs and outputs with the same name\n * on the same node.\n */\nexport type PropertyAliases = {\n  // This uses an object map because using the Map type would be too slow\n  [key: string]: PropertyAliasValue\n};\n\n/**\n * Store the runtime input or output names for all the directives.\n *\n * - Even indices: directive index\n * - Odd indices: minified / internal name\n *\n * e.g. [0, 'change-minified']\n */\nexport type PropertyAliasValue = (number | string)[];\n\n\n/**\n * This array contains information about input properties that\n * need to be set once from attribute data. It's ordered by\n * directive index (relative to element) so it's simple to\n * look up a specific directive's initial input data.\n *\n * Within each sub-array:\n *\n * Even indices: minified/internal input name\n * Odd indices: initial value\n *\n * If a directive on a node does not have any input properties\n * that should be set from attributes, its index is set to null\n * to avoid a sparse array.\n *\n * e.g. [null, ['role-min', 'button']]\n */\nexport type InitialInputData = (InitialInputs | null)[];\n\n/**\n * Used by InitialInputData to store input properties\n * that should be set once from attributes.\n *\n * Even indices: minified/internal input name\n * Odd indices: initial value\n *\n * e.g. ['role-min', 'button']\n */\nexport type InitialInputs = string[];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The goal here is to make sure that the browser DOM API is the Renderer.\n * We do this by defining a subset of DOM API to be the renderer and than\n * use that time for rendering.\n *\n * At runtime we can than use the DOM api directly, in server or web-worker\n * it will be easy to implement such API.\n */\n\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {RendererStyleFlags2, RendererType2} from '../../render/api';\n\n\n// TODO: cleanup once the code is merged in angular/angular\nexport enum RendererStyleFlags3 {\n  Important = 1 << 0,\n  DashCase = 1 << 1\n}\n\nexport type Renderer3 = ObjectOrientedRenderer3 | ProceduralRenderer3;\n\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n * */\nexport interface ObjectOrientedRenderer3 {\n  createElement(tagName: string): RElement;\n  createTextNode(data: string): RText;\n\n  querySelector(selectors: string): RElement|null;\n}\n\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nexport function isProceduralRenderer(renderer: ProceduralRenderer3 | ObjectOrientedRenderer3):\n    renderer is ProceduralRenderer3 {\n  return !!((renderer as any).listen);\n}\n\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n */\nexport interface ProceduralRenderer3 {\n  destroy(): void;\n  createElement(name: string, namespace?: string|null): RElement;\n  createText(value: string): RText;\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode?: ((node: RNode) => void)|null;\n  appendChild(parent: RElement, newChild: RNode): void;\n  insertBefore(parent: RNode, newChild: RNode, refChild: RNode|null): void;\n  removeChild(parent: RElement, oldChild: RNode): void;\n  selectRootElement(selectorOrNode: string|any): RElement;\n\n  setAttribute(el: RElement, name: string, value: string, namespace?: string|null): void;\n  removeAttribute(el: RElement, name: string, namespace?: string|null): void;\n  addClass(el: RElement, name: string): void;\n  removeClass(el: RElement, name: string): void;\n  setStyle(\n      el: RElement, style: string, value: any,\n      flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  removeStyle(el: RElement, style: string, flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  setProperty(el: RElement, name: string, value: any): void;\n  setValue(node: RText, value: string): void;\n\n  // TODO(misko): Deprecate in favor of addEventListener/removeEventListener\n  listen(target: RNode, eventName: string, callback: (event: any) => boolean | void): () => void;\n}\n\nexport interface RendererFactory3 {\n  createRenderer(hostElement: RElement|null, rendererType: RendererType2|null): Renderer3;\n  begin?(): void;\n  end?(): void;\n}\n\nexport const domRendererFactory3: RendererFactory3 = {\n  createRenderer: (hostElement: RElement | null, rendererType: RendererType2 | null):\n                      Renderer3 => { return document;}\n};\n\n/** Subset of API needed for appending elements and text nodes. */\nexport interface RNode {\n  removeChild(oldChild: RNode): void;\n\n  /**\n   * Insert a child node.\n   *\n   * Used exclusively for adding View root nodes into ViewAnchor location.\n   */\n  insertBefore(newChild: RNode, refChild: RNode|null, isViewRoot: boolean): void;\n\n  /**\n   * Append a child node.\n   *\n   * Used exclusively for building up DOM which are static (ie not View roots)\n   */\n  appendChild(newChild: RNode): RNode;\n}\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n */\nexport interface RElement extends RNode {\n  style: RCssStyleDeclaration;\n  classList: RDomTokenList;\n  className: string;\n  setAttribute(name: string, value: string): void;\n  removeAttribute(name: string): void;\n  setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\n  addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\n  removeEventListener(type: string, listener?: EventListener, options?: boolean): void;\n\n  setProperty?(name: string, value: any): void;\n}\n\nexport interface RCssStyleDeclaration {\n  removeProperty(propertyName: string): string;\n  setProperty(propertyName: string, value: string|null, priority?: string): void;\n}\n\nexport interface RDomTokenList {\n  add(token: string): void;\n  remove(token: string): void;\n}\n\nexport interface RText extends RNode { textContent: string|null; }\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../../di/injector';\nimport {LContainer} from './container';\nimport {ComponentTemplate, DirectiveDef, DirectiveDefList, PipeDef, PipeDefList} from './definition';\nimport {LElementNode, LViewNode, TNode} from './node';\nimport {LQueries} from './query';\nimport {Renderer3} from './renderer';\n\n\n\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `currentView` to that\n * `LView`. When that view is done processing, the `currentView` is set back to\n * whatever the original `currentView` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n */\nexport interface LView {\n  /** Flags for this view (see LViewFlags for definition of each bit). */\n  flags: LViewFlags;\n\n  /**\n   * The parent view is needed when we exit the view and must restore the previous\n   * `LView`. Without this, the render method would have to keep a stack of\n   * views as it is recursively rendering templates.\n   */\n  readonly parent: LView|null;\n\n  /**\n   * Pointer to the `LViewNode` or `LElementNode` which represents the root of the view.\n   *\n   * If `LViewNode`, this is an embedded view of a container. We need this to be able to\n   * efficiently find the `LViewNode` when inserting the view into an anchor.\n   *\n   * If `LElementNode`, this is the LView of a component.\n   */\n  readonly node: LViewNode|LElementNode;\n\n  /**\n   * ID to determine whether this view is the same as the previous view\n   * in this position. If it's not, we know this view needs to be inserted\n   * and the one that exists needs to be removed (e.g. if/else statements)\n   */\n  readonly id: number;\n\n  /** Renderer to be used for this view. */\n  readonly renderer: Renderer3;\n\n  /**\n   * The binding start index is the index at which the nodes array\n   * starts to store bindings only. Saving this value ensures that we\n   * will begin reading bindings at the correct point in the array when\n   * we are in update mode.\n   */\n  bindingStartIndex: number;\n\n  /**\n   * The binding index we should access next.\n   *\n   * This is stored so that bindings can continue where they left off\n   * if a view is left midway through processing bindings (e.g. if there is\n   * a setter that creates an embedded view, like in ngIf).\n   */\n  bindingIndex: number;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n   * and output data (in chunks of 2) for a particular view. Combining the arrays\n   * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n   * separate for loops).\n   *\n   * If it's a listener being stored:\n   * 1st index is: event name to remove\n   * 2nd index is: native element\n   * 3rd index is: listener function\n   * 4th index is: useCapture boolean\n   *\n   * If it's an output subscription:\n   * 1st index is: unsubscribe function\n   * 2nd index is: context for function\n   */\n  cleanup: any[]|null;\n\n  /**\n   * This number tracks the next lifecycle hook that needs to be run.\n   *\n   * If lifecycleStage === LifecycleStage.ON_INIT, the init hooks haven't yet been run\n   * and should be executed by the first r() instruction that runs OR the first\n   * cR() instruction that runs (so inits are run for the top level view before any\n   * embedded views).\n   *\n   * If lifecycleStage === LifecycleStage.CONTENT_INIT, the init hooks have been run, but\n   * the content hooks have not yet been run. They should be executed on the first\n   * r() instruction that runs.\n   *\n   * If lifecycleStage === LifecycleStage.VIEW_INIT, both the init hooks and content hooks\n   * have already been run.\n   */\n  lifecycleStage: LifecycleStage;\n\n  /**\n   * The first LView or LContainer beneath this LView in the hierarchy.\n   *\n   * Necessary to store this so views can traverse through their nested views\n   * to remove listeners and call onDestroy callbacks.\n   *\n   * For embedded views, we store the LContainer rather than the first ViewState\n   * to avoid managing splicing when views are added/removed.\n   */\n  child: LView|LContainer|null;\n\n  /**\n   * The last LView or LContainer beneath this LView in the hierarchy.\n   *\n   * The tail allows us to quickly add a new state to the end of the view list\n   * without having to propagate starting from the first child.\n   */\n  tail: LView|LContainer|null;\n\n  /**\n   * The next sibling LView or LContainer.\n   *\n   * Allows us to propagate between sibling view states that aren't in the same\n   * container. Embedded views already have a node.next, but it is only set for\n   * views in the same container. We need a way to link component views and views\n   * across containers as well.\n   */\n  next: LView|LContainer|null;\n\n  /**\n   * This array stores all element/text/container nodes created inside this view\n   * and their bindings. Stored as an array rather than a linked list so we can\n   * look up nodes directly in the case of forward declaration or bindings\n   * (e.g. E(1)).\n   *\n   * All bindings for a given view are stored in the order in which they\n   * appear in the template, starting with `bindingStartIndex`.\n   * We use `bindingIndex` to internally keep track of which binding\n   * is currently active.\n   */\n  readonly data: any[];\n\n  /**\n   * An array of directive instances in the current view.\n   *\n   * These must be stored separately from LNodes because their presence is\n   * unknown at compile-time and thus space cannot be reserved in data[].\n   */\n  directives: any[]|null;\n\n  /**\n   * The static data for this view. We need a reference to this so we can easily walk up the\n   * node tree in DI and get the TView.data array associated with a node (where the\n   * directive defs are stored).\n   */\n  tView: TView;\n\n  /**\n   * For dynamically inserted views, the template function to refresh the view.\n   */\n  template: ComponentTemplate<{}>|null;\n\n  /**\n   * - For embedded views, the context with which to render the template.\n   * - For root view of the root component the context contains change detection data.\n   * - `null` otherwise.\n   */\n  context: {}|RootContext|null;\n\n  /**\n   * A count of dynamic views that are children of this view (indirectly via containers).\n   *\n   * This is used to decide whether to scan children of this view when refreshing dynamic views\n   * after refreshing the view itself.\n   */\n  dynamicViewCount: number;\n\n  /**\n   * Queries active for this view - nodes from a view are reported to those queries\n   */\n  queries: LQueries|null;\n\n  /**\n   * An optional Module Injector to be used as fall back after Element Injectors are consulted.\n   */\n  injector: Injector|null;\n}\n\n/** Flags associated with an LView (saved in LView.flags) */\nexport const enum LViewFlags {\n  /**\n   * Whether or not the view is in creationMode.\n   *\n   * This must be stored in the view rather than using `data` as a marker so that\n   * we can properly support embedded views. Otherwise, when exiting a child view\n   * back into the parent view, `data` will be defined and `creationMode` will be\n   * improperly reported as false.\n   */\n  CreationMode = 0b0001,\n\n  /** Whether this view has default change detection strategy (checks always) or onPush */\n  CheckAlways = 0b0010,\n\n  /** Whether or not this view is currently dirty (needing check) */\n  Dirty = 0b0100,\n\n  /** Whether or not this view is currently attached to change detection tree. */\n  Attached = 0b1000,\n}\n\n/** Interface necessary to work with view tree traversal */\nexport interface LViewOrLContainer {\n  next: LView|LContainer|null;\n  child?: LView|LContainer|null;\n  views?: LViewNode[];\n  parent: LView|null;\n}\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n */\nexport interface TView {\n  /** Whether or not this template has been processed. */\n  firstTemplatePass: boolean;\n\n  /** Static data equivalent of LView.data[]. Contains TNodes. */\n  data: TData;\n\n  /**\n   * Selector matches for a node are temporarily cached on the TView so the\n   * DI system can eagerly instantiate directives on the same node if they are\n   * created out of order. They are overwritten after each node.\n   *\n   * <div dirA dirB></div>\n   *\n   * e.g. DirA injects DirB, but DirA is created first. DI should instantiate\n   * DirB when it finds that it's on the same node, but not yet created.\n   *\n   * Even indices: Directive defs\n   * Odd indices:\n   *   - Null if the associated directive hasn't been instantiated yet\n   *   - Directive index, if associated directive has been created\n   *   - String, temporary 'CIRCULAR' token set while dependencies are being resolved\n   */\n  currentMatches: CurrentMatchesList|null;\n\n  /**\n   * Directive and component defs that have already been matched to nodes on\n   * this view.\n   *\n   * Defs are stored at the same index in TView.directives[] as their instances\n   * are stored in LView.directives[]. This simplifies lookup in DI.\n   */\n  directives: DirectiveDefList|null;\n\n  /**\n   * Full registry of directives and components that may be found in this view.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  directiveRegistry: DirectiveDefList|null;\n\n  /**\n   * Full registry of pipes that may be found in this view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  pipeRegistry: PipeDefList|null;\n\n  /**\n   * Array of ngOnInit and ngDoCheck hooks that should be executed for this view in\n   * creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  initHooks: HookData|null;\n\n  /**\n   * Array of ngDoCheck hooks that should be executed for this view in update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  checkHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentInit and ngAfterContentChecked hooks that should be executed\n   * for this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentChecked hooks that should be executed for this view in update\n   * mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentCheckHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewInit and ngAfterViewChecked hooks that should be executed for\n   * this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewChecked hooks that should be executed for this view in\n   * update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewCheckHooks: HookData|null;\n\n  /**\n   * Array of ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  destroyHooks: HookData|null;\n\n  /**\n   * Array of pipe ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Index of pipe in data\n   * Odd indices: Hook function\n   *\n   * These must be stored separately from directive destroy hooks because their contexts\n   * are stored in data.\n   */\n  pipeDestroyHooks: HookData|null;\n\n  /**\n   * A list of directive and element indices for child components that will need to be\n   * refreshed when the current view has finished its check.\n   *\n   * Even indices: Directive indices\n   * Odd indices: Element indices\n   */\n  components: number[]|null;\n\n  /**\n   * A list of indices for child directives that have host bindings.\n   *\n   * Even indices: Directive indices\n   * Odd indices: Element indices\n   */\n  hostBindings: number[]|null;\n}\n\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {@link renderComponent}.\n */\nexport interface RootContext {\n  /**\n   * A function used for scheduling change detection in the future. Usually\n   * this is `requestAnimationFrame`.\n   */\n  scheduler: (workFn: () => void) => void;\n\n  /**\n   * A promise which is resolved when all components are considered clean (not dirty).\n   *\n   * This promise is overwritten every time a first call to {@link markDirty} is invoked.\n   */\n  clean: Promise<null>;\n\n  /**\n   * RootComponent - The component which was instantiated by the call to\n   * {@link renderComponent}.\n   */\n  component: {};\n}\n\n/**\n * Array of hooks that should be executed for a view and their directive indices.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n */\nexport type HookData = (number | (() => void))[];\n\n/** Possible values of LView.lifecycleStage, used to determine which hooks to run.  */\n// TODO: Remove this enum when containerRefresh instructions are removed\nexport const enum LifecycleStage {\n\n  /* Init hooks need to be run, if any. */\n  Init = 1,\n\n  /* Content hooks need to be run, if any. Init hooks have already run. */\n  AfterInit = 2,\n}\n\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Each pipe's definition is stored here at the same index\n * as its pipe instance in the data array. Any nodes that do not have static\n * data store a null value in tData to avoid a sparse array.\n */\nexport type TData = (TNode | PipeDef<any>| null)[];\n\n/** Type for TView.currentMatches */\nexport type CurrentMatchesList = [DirectiveDef<any>, (string | number | null)];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nexport function isDifferent(a: any, b: any): boolean {\n  // NaN is the only value that is not equal to itself so the first\n  // test checks if both a and b are not NaN\n  return !(a !== a && b !== b) && a !== b;\n}\n\nexport function stringify(value: any): string {\n  if (typeof value == 'function') return value.name || value;\n  if (typeof value == 'string') return value;\n  if (value == null) return '';\n  return '' + value;\n}\n\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nexport function notImplemented(): Error {\n  return new Error('NotImplemented');\n}\n\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nexport function flatten(list: any[]): any[] {\n  const result: any[] = [];\n  let i = 0;\n\n  while (i < list.length) {\n    const item = list[i];\n    if (Array.isArray(item)) {\n      if (item.length > 0) {\n        list = item.concat(list.slice(i + 1));\n        i = 0;\n      } else {\n        i++;\n      }\n    } else {\n      result.push(item);\n      i++;\n    }\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertNotNull} from './assert';\nimport {callHooks} from './hooks';\nimport {LContainer, unusedValueExportToPlacateAjd as unused1} from './interfaces/container';\nimport {LContainerNode, LElementNode, LNode, LNodeType, LProjectionNode, LTextNode, LViewNode, unusedValueExportToPlacateAjd as unused2} from './interfaces/node';\nimport {unusedValueExportToPlacateAjd as unused3} from './interfaces/projection';\nimport {ProceduralRenderer3, RElement, RNode, RText, Renderer3, isProceduralRenderer, unusedValueExportToPlacateAjd as unused4} from './interfaces/renderer';\nimport {HookData, LView, LViewOrLContainer, TView, unusedValueExportToPlacateAjd as unused5} from './interfaces/view';\nimport {assertNodeType} from './node_assert';\nimport {stringify} from './util';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param node The node whose following DOM node must be found.\n * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @returns RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node: LNode | null, stopNode: LNode | null): RElement|RText|null {\n  let currentNode = node;\n  while (currentNode && currentNode !== stopNode) {\n    let pNextOrParent = currentNode.pNextOrParent;\n    if (pNextOrParent) {\n      while (pNextOrParent.type !== LNodeType.Projection) {\n        const nativeNode = findFirstRNode(pNextOrParent);\n        if (nativeNode) {\n          return nativeNode;\n        }\n        pNextOrParent = pNextOrParent.pNextOrParent !;\n      }\n      currentNode = pNextOrParent;\n    } else {\n      let currentSibling = currentNode.next;\n      while (currentSibling) {\n        const nativeNode = findFirstRNode(currentSibling);\n        if (nativeNode) {\n          return nativeNode;\n        }\n        currentSibling = currentSibling.next;\n      }\n      const parentNode = currentNode.parent;\n      currentNode = null;\n      if (parentNode) {\n        const parentType = parentNode.type;\n        if (parentType === LNodeType.Container || parentType === LNodeType.View) {\n          currentNode = parentNode;\n        }\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node: LNode): LNode|null {\n  const pNextOrParent = node.pNextOrParent;\n\n  if (pNextOrParent) {\n    // The node is projected\n    const isLastProjectedNode = pNextOrParent.type === LNodeType.Projection;\n    // returns pNextOrParent if we are not at the end of the list, null otherwise\n    return isLastProjectedNode ? null : pNextOrParent;\n  }\n\n  // returns node.next because the the node is not projected\n  return node.next;\n}\n\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param initialNode The node whose following node in the LNode tree must be found.\n * @param rootNode The root node at which the lookup should stop.\n * @return LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode: LNode, rootNode: LNode): LNode|null {\n  let node: LNode|null = initialNode;\n  let nextNode = getNextLNodeWithProjection(node);\n  while (node && !nextNode) {\n    // if node.pNextOrParent is not null here, it is not the next node\n    // (because, at this point, nextNode is null, so it is the parent)\n    node = node.pNextOrParent || node.parent;\n    if (node === rootNode) {\n      return null;\n    }\n    nextNode = node && getNextLNodeWithProjection(node);\n  }\n  return nextNode;\n}\n\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param node The node whose first DOM node must be found\n * @returns RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode: LNode): RElement|RText|null {\n  let node: LNode|null = rootNode;\n  while (node) {\n    let nextNode: LNode|null = null;\n    if (node.type === LNodeType.Element) {\n      // A LElementNode has a matching RNode in LElementNode.native\n      return (node as LElementNode).native;\n    } else if (node.type === LNodeType.Container) {\n      const lContainerNode: LContainerNode = (node as LContainerNode);\n      const childContainerData: LContainer = lContainerNode.dynamicLContainerNode ?\n          lContainerNode.dynamicLContainerNode.data :\n          lContainerNode.data;\n      nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n    } else if (node.type === LNodeType.Projection) {\n      // For Projection look at the first projected node\n      nextNode = (node as LProjectionNode).data.head;\n    } else {\n      // Otherwise look at the first child\n      nextNode = (node as LViewNode).child;\n    }\n\n    node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n  }\n  return null;\n}\n\nexport function createTextNode(value: any, renderer: Renderer3): RText {\n  return isProceduralRenderer(renderer) ? renderer.createText(stringify(value)) :\n                                          renderer.createTextNode(stringify(value));\n}\n\n/**\n * Adds or removes all DOM elements associated with a view.\n *\n * Because some root nodes of the view may be containers, we sometimes need\n * to propagate deeply into the nested containers to remove all elements in the\n * views beneath it.\n *\n * @param container The container to which the root view belongs\n * @param rootNode The view from which elements should be added or removed\n * @param insertMode Whether or not elements should be added (if false, removing)\n * @param beforeNode The node before which elements should be added, if insert mode\n */\nexport function addRemoveViewFromContainer(\n    container: LContainerNode, rootNode: LViewNode, insertMode: true,\n    beforeNode: RNode | null): void;\nexport function addRemoveViewFromContainer(\n    container: LContainerNode, rootNode: LViewNode, insertMode: false): void;\nexport function addRemoveViewFromContainer(\n    container: LContainerNode, rootNode: LViewNode, insertMode: boolean,\n    beforeNode?: RNode | null): void {\n  ngDevMode && assertNodeType(container, LNodeType.Container);\n  ngDevMode && assertNodeType(rootNode, LNodeType.View);\n  const parentNode = container.data.renderParent;\n  const parent = parentNode ? parentNode.native : null;\n  let node: LNode|null = rootNode.child;\n  if (parent) {\n    while (node) {\n      let nextNode: LNode|null = null;\n      const renderer = container.view.renderer;\n      if (node.type === LNodeType.Element) {\n        if (insertMode) {\n          if (!node.native) {\n            // If the native element doesn't exist, this is a bound text node that hasn't yet been\n            // created because update mode has not run (occurs when a bound text node is a root\n            // node of a dynamically created view). See textBinding() in instructions for ctx.\n            (node as LTextNode).native = createTextNode('', renderer);\n          }\n          isProceduralRenderer(renderer) ?\n              renderer.insertBefore(parent, node.native !, beforeNode as RNode | null) :\n              parent.insertBefore(node.native !, beforeNode as RNode | null, true);\n        } else {\n          isProceduralRenderer(renderer) ? renderer.removeChild(parent as RElement, node.native !) :\n                                           parent.removeChild(node.native !);\n        }\n        nextNode = node.next;\n      } else if (node.type === LNodeType.Container) {\n        // if we get to a container, it must be a root node of a view because we are only\n        // propagating down into child views / containers and not child elements\n        const childContainerData: LContainer = (node as LContainerNode).data;\n        childContainerData.renderParent = parentNode;\n        nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n      } else if (node.type === LNodeType.Projection) {\n        nextNode = (node as LProjectionNode).data.head;\n      } else {\n        nextNode = (node as LViewNode).child;\n      }\n      if (nextNode === null) {\n        node = getNextOrParentSiblingNode(node, rootNode);\n      } else {\n        node = nextNode;\n      }\n    }\n  }\n}\n\n/**\n * Traverses the tree of component views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nexport function destroyViewTree(rootView: LView): void {\n  let viewOrContainer: LViewOrLContainer|null = rootView;\n\n  while (viewOrContainer) {\n    let next: LViewOrLContainer|null = null;\n\n    if (viewOrContainer.views && viewOrContainer.views.length) {\n      next = viewOrContainer.views[0].data;\n    } else if (viewOrContainer.child) {\n      next = viewOrContainer.child;\n    } else if (viewOrContainer.next) {\n      cleanUpView(viewOrContainer as LView);\n      next = viewOrContainer.next;\n    }\n\n    if (next == null) {\n      // If the viewOrContainer is the rootView, then the cleanup is done twice.\n      // Without this check, ngOnDestroy would be called twice for a directive on an element.\n      while (viewOrContainer && !viewOrContainer !.next && viewOrContainer !== rootView) {\n        cleanUpView(viewOrContainer as LView);\n        viewOrContainer = getParentState(viewOrContainer, rootView);\n      }\n      cleanUpView(viewOrContainer as LView || rootView);\n\n      next = viewOrContainer && viewOrContainer.next;\n    }\n    viewOrContainer = next;\n  }\n}\n\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param newView The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nexport function insertView(\n    container: LContainerNode, newView: LViewNode, index: number): LViewNode {\n  const state = container.data;\n  const views = state.views;\n\n  if (index > 0) {\n    // This is a new view, we need to add it to the children.\n    setViewNext(views[index - 1], newView);\n  }\n\n  if (index < views.length) {\n    setViewNext(newView, views[index]);\n    views.splice(index, 0, newView);\n  } else {\n    views.push(newView);\n  }\n\n  // If the container's renderParent is null, we know that it is a root node of its own parent view\n  // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n  // nodes twice - once now and once when its parent inserts its views).\n  if (container.data.renderParent !== null) {\n    let beforeNode = findNextRNodeSibling(newView, container);\n    if (!beforeNode) {\n      let containerNextNativeNode = container.native;\n      if (containerNextNativeNode === undefined) {\n        containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n      }\n      beforeNode = containerNextNativeNode;\n    }\n    addRemoveViewFromContainer(container, newView, true, beforeNode);\n  }\n\n  return newView;\n}\n\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nexport function removeView(container: LContainerNode, removeIndex: number): LViewNode {\n  const views = container.data.views;\n  const viewNode = views[removeIndex];\n  if (removeIndex > 0) {\n    setViewNext(views[removeIndex - 1], viewNode.next);\n  }\n  views.splice(removeIndex, 1);\n  viewNode.next = null;\n  destroyViewTree(viewNode.data);\n  addRemoveViewFromContainer(container, viewNode, false);\n  // Notify query that view has been removed\n  container.data.queries && container.data.queries.removeView(removeIndex);\n  return viewNode;\n}\n\n/**\n * Sets a next on the view node, so views in for loops can easily jump from\n * one view to the next to add/remove elements. Also adds the LView (view.data)\n * to the view tree for easy traversal when cleaning up the view.\n *\n * @param view The view to set up\n * @param next The view's new next\n */\nexport function setViewNext(view: LViewNode, next: LViewNode | null): void {\n  view.next = next;\n  view.data.next = next ? next.data : null;\n}\n\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nexport function getParentState(state: LViewOrLContainer, rootView: LView): LViewOrLContainer|null {\n  let node;\n  if ((node = (state as LView) !.node) && node.type === LNodeType.View) {\n    // if it's an embedded view, the state needs to go up to the container, in case the\n    // container has a next\n    return node.parent !.data as any;\n  } else {\n    // otherwise, use parent view for containers or component views\n    return state.parent === rootView ? null : state.parent;\n  }\n}\n\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(view: LView): void {\n  removeListeners(view);\n  executeOnDestroys(view);\n  executePipeOnDestroys(view);\n}\n\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(view: LView): void {\n  const cleanup = view.cleanup !;\n  if (cleanup != null) {\n    for (let i = 0; i < cleanup.length - 1; i += 2) {\n      if (typeof cleanup[i] === 'string') {\n        cleanup ![i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n        i += 2;\n      } else {\n        cleanup[i].call(cleanup[i + 1]);\n      }\n    }\n    view.cleanup = null;\n  }\n}\n\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view: LView): void {\n  const tView = view.tView;\n  let destroyHooks: HookData|null;\n  if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n    callHooks(view.directives !, destroyHooks);\n  }\n}\n\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(view: LView): void {\n  const pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n  if (pipeDestroyHooks) {\n    callHooks(view.data !, pipeDestroyHooks);\n  }\n}\n\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nexport function canInsertNativeNode(parent: LNode, currentView: LView): boolean {\n  const parentIsElement = parent.type === LNodeType.Element;\n\n  return parentIsElement &&\n      (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nexport function appendChild(parent: LNode, child: RNode | null, currentView: LView): boolean {\n  if (child !== null && canInsertNativeNode(parent, currentView)) {\n    // We only add element if not in View or not projected.\n    const renderer = currentView.renderer;\n    isProceduralRenderer(renderer) ? renderer.appendChild(parent.native !as RElement, child) :\n                                     parent.native !.appendChild(child);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Inserts the provided node before the correct element in the DOM.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param node Node to insert\n * @param currentView Current LView\n */\nexport function insertChild(node: LNode, currentView: LView): void {\n  const parent = node.parent !;\n  if (canInsertNativeNode(parent, currentView)) {\n    let nativeSibling: RNode|null = findNextRNodeSibling(node, null);\n    const renderer = currentView.renderer;\n    isProceduralRenderer(renderer) ?\n        renderer.insertBefore(parent.native !, node.native !, nativeSibling) :\n        parent.native !.insertBefore(node.native !, nativeSibling, false);\n  }\n}\n\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nexport function appendProjectedNode(\n    node: LElementNode | LTextNode | LContainerNode, currentParent: LElementNode,\n    currentView: LView): void {\n  if (node.type !== LNodeType.Container) {\n    appendChild(currentParent, (node as LElementNode | LTextNode).native, currentView);\n  } else {\n    // The node we are adding is a Container and we are adding it to Element which\n    // is not a component (no more re-projection).\n    // Alternatively a container is projected at the root of a component's template\n    // and can't be re-projected (as not content of any component).\n    // Assignee the final projection location in those cases.\n    const lContainer = (node as LContainerNode).data;\n    lContainer.renderParent = currentParent;\n    const views = lContainer.views;\n    for (let i = 0; i < views.length; i++) {\n      addRemoveViewFromContainer(node as LContainerNode, views[i], true, null);\n    }\n  }\n  if (node.dynamicLContainerNode) {\n    node.dynamicLContainerNode.data.renderParent = currentParent;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {assertNotNull} from './assert';\nimport {TNode, unusedValueExportToPlacateAjd as unused1} from './interfaces/node';\nimport {CssSelector, CssSelectorList, NG_PROJECT_AS_ATTR_NAME, SelectorFlags, unusedValueExportToPlacateAjd as unused2} from './interfaces/projection';\n\nconst unusedValueToPlacateAjd = unused1 + unused2;\n\nfunction isCssClassMatching(nodeClassAttrVal: string, cssClassToMatch: string): boolean {\n  const nodeClassesLen = nodeClassAttrVal.length;\n  const matchIndex = nodeClassAttrVal !.indexOf(cssClassToMatch);\n  const matchEndIdx = matchIndex + cssClassToMatch.length;\n  if (matchIndex === -1                                                  // no match\n      || (matchIndex > 0 && nodeClassAttrVal ![matchIndex - 1] !== ' ')  // no space before\n      ||\n      (matchEndIdx < nodeClassesLen && nodeClassAttrVal ![matchEndIdx] !== ' '))  // no space after\n  {\n    return false;\n  }\n  return true;\n}\n\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nexport function isNodeMatchingSelector(tNode: TNode, selector: CssSelector): boolean {\n  ngDevMode && assertNotNull(selector[0], 'Selector should have a tag name');\n\n  let mode: SelectorFlags = SelectorFlags.ELEMENT;\n  const nodeAttrs = tNode.attrs !;\n\n  // When processing \":not\" selectors, we skip to the next \":not\" if the\n  // current one doesn't match\n  let skipToNextSelector = false;\n\n  for (let i = 0; i < selector.length; i++) {\n    const current = selector[i];\n    if (typeof current === 'number') {\n      // If we finish processing a :not selector and it hasn't failed, return false\n      if (!skipToNextSelector && !isPositive(mode) && !isPositive(current as number)) {\n        return false;\n      }\n      // If we are skipping to the next :not() and this mode flag is positive,\n      // it's a part of the current :not() selector, and we should keep skipping\n      if (skipToNextSelector && isPositive(current)) continue;\n      skipToNextSelector = false;\n      mode = (current as number) | (mode & SelectorFlags.NOT);\n      continue;\n    }\n\n    if (skipToNextSelector) continue;\n\n    if (mode & SelectorFlags.ELEMENT) {\n      mode = SelectorFlags.ATTRIBUTE | mode & SelectorFlags.NOT;\n      if (current !== '' && current !== tNode.tagName) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n      }\n    } else {\n      const attrName = mode & SelectorFlags.CLASS ? 'class' : current;\n      const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n\n      if (attrIndexInNode === -1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n        continue;\n      }\n\n      const selectorAttrValue = mode & SelectorFlags.CLASS ? current : selector[++i];\n      if (selectorAttrValue !== '') {\n        const nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n        if (mode & SelectorFlags.CLASS &&\n                !isCssClassMatching(nodeAttrValue, selectorAttrValue as string) ||\n            mode & SelectorFlags.ATTRIBUTE && selectorAttrValue !== nodeAttrValue) {\n          if (isPositive(mode)) return false;\n          skipToNextSelector = true;\n        }\n      }\n    }\n  }\n\n  return isPositive(mode) || skipToNextSelector;\n}\n\nfunction isPositive(mode: SelectorFlags): boolean {\n  return (mode & SelectorFlags.NOT) === 0;\n}\n\nfunction findAttrIndexInNode(name: string, attrs: string[] | null): number {\n  if (attrs === null) return -1;\n  for (let i = 0; i < attrs.length; i += 2) {\n    if (attrs[i] === name) return i;\n  }\n  return -1;\n}\n\nexport function isNodeMatchingSelectorList(tNode: TNode, selector: CssSelectorList): boolean {\n  for (let i = 0; i < selector.length; i++) {\n    if (isNodeMatchingSelector(tNode, selector[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function getProjectAsAttrValue(tNode: TNode): string|null {\n  const nodeAttrs = tNode.attrs;\n  if (nodeAttrs != null) {\n    const ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n    // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n    // (attribute names are stored at even indexes)\n    if ((ngProjectAsAttrIdx & 1) === 0) {\n      return nodeAttrs[ngProjectAsAttrIdx + 1];\n    }\n  }\n  return null;\n}\n\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nexport function matchingSelectorIndex(\n    tNode: TNode, selectors: CssSelectorList[], textSelectors: string[]): number {\n  const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n  for (let i = 0; i < selectors.length; i++) {\n    // if a node has the ngProjectAs attribute match it against unparsed selector\n    // match a node against a parsed selector only if ngProjectAs attribute is not present\n    if (ngProjectAsAttrVal === textSelectors[i] ||\n        ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n      return i + 1;  // first matching selector \"captures\" a given node\n    }\n  }\n  return 0;\n}\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {TNode} from './interfaces/node';\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: any): never {\n  throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n\n/** Called when there are multiple component selectors that match a given node */\nexport function throwMultipleComponentError(tNode: TNode): never {\n  throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nexport function throwErrorIfNoChangesMode(\n    creationMode: boolean, checkNoChangesMode: boolean, oldValue: any, currValue: any): never|void {\n  if (checkNoChangesMode) {\n    let msg =\n        `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (creationMode) {\n      msg +=\n          ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n          ` Has it been created in a change detection hook ?`;\n    }\n    // TODO: include debug context\n    throw new Error(msg);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {assertEqual, assertLessThan, assertNotEqual, assertNotNull, assertNull, assertSame} from './assert';\nimport {LContainer, TContainer} from './interfaces/container';\nimport {LInjector} from './interfaces/injector';\nimport {CssSelectorList, LProjection, NG_PROJECT_AS_ATTR_NAME} from './interfaces/projection';\nimport {LQueries} from './interfaces/query';\nimport {CurrentMatchesList, LView, LViewFlags, LifecycleStage, RootContext, TData, TView} from './interfaces/view';\n\nimport {LContainerNode, LElementNode, LNode, LNodeType, TNodeFlags, LProjectionNode, LTextNode, LViewNode, TNode, TContainerNode, InitialInputData, InitialInputs, PropertyAliases, PropertyAliasValue,} from './interfaces/node';\nimport {assertNodeType} from './node_assert';\nimport {appendChild, insertChild, insertView, appendProjectedNode, removeView, canInsertNativeNode, createTextNode} from './node_manipulation';\nimport {isNodeMatchingSelectorList, matchingSelectorIndex} from './node_selector_matcher';\nimport {ComponentDef, ComponentTemplate, ComponentType, DirectiveDef, DirectiveDefList, DirectiveDefListOrFactory, DirectiveType, PipeDef, PipeDefList, PipeDefListOrFactory, RenderFlags} from './interfaces/definition';\nimport {RElement, RText, Renderer3, RendererFactory3, ProceduralRenderer3, ObjectOrientedRenderer3, RendererStyleFlags3, isProceduralRenderer} from './interfaces/renderer';\nimport {isDifferent, stringify} from './util';\nimport {executeHooks, queueLifecycleHooks, queueInitHooks, executeInitHooks} from './hooks';\nimport {ViewRef} from './view_ref';\nimport {throwCyclicDependencyError, throwErrorIfNoChangesMode, throwMultipleComponentError} from './errors';\n\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nexport const NG_HOST_SYMBOL = '__ngHostLNode__';\n\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nconst _CLEAN_PROMISE = Promise.resolve(null);\n\n/**\n * Function used to sanitize the value before writing it into the renderer.\n */\nexport type Sanitizer = (value: any) => string;\n\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n */\nexport const _ROOT_DIRECTIVE_INDICES = [0, 0];\n\n/**\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n */\nexport const CIRCULAR = '__CIRCULAR__';\n\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nlet renderer: Renderer3;\nlet rendererFactory: RendererFactory3;\n\nexport function getRenderer(): Renderer3 {\n  // top level variables should not be exported for performance reason (PERF_NOTES.md)\n  return renderer;\n}\n\n/** Used to set the parent property when nodes are created. */\nlet previousOrParentNode: LNode;\n\nexport function getPreviousOrParentNode(): LNode {\n  // top level variables should not be exported for performance reason (PERF_NOTES.md)\n  return previousOrParentNode;\n}\n\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nlet isParent: boolean;\n\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n */\nlet tData: TData;\n\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nlet currentView: LView = null !;\n\nlet currentQueries: LQueries|null;\n\nexport function getCurrentQueries(QueryType: {new (): LQueries}): LQueries {\n  // top level variables should not be exported for performance reason (PERF_NOTES.md)\n  return currentQueries || (currentQueries = new QueryType());\n}\n\n/**\n * This property gets set before entering a template.\n */\nlet creationMode: boolean;\n\nexport function getCreationMode(): boolean {\n  // top level variables should not be exported for performance reason (PERF_NOTES.md)\n  return creationMode;\n}\n\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nlet data: any[];\n\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nlet directives: any[]|null;\n\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an output subscription:\n * 1st index is: unsubscribe function\n * 2nd index is: context for function\n */\nlet cleanup: any[]|null;\n\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nlet checkNoChangesMode = false;\n\n/** Whether or not this is the first time the current view has been processed. */\nlet firstTemplatePass = true;\n\nconst enum BindingDirection {\n  Input,\n  Output,\n}\n\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nexport function enterView(newView: LView, host: LElementNode | LViewNode | null): LView {\n  const oldView: LView = currentView;\n  data = newView && newView.data;\n  directives = newView && newView.directives;\n  tData = newView && newView.tView.data;\n  creationMode = newView && (newView.flags & LViewFlags.CreationMode) === LViewFlags.CreationMode;\n  firstTemplatePass = newView && newView.tView.firstTemplatePass;\n\n  cleanup = newView && newView.cleanup;\n  renderer = newView && newView.renderer;\n\n  if (newView && newView.bindingIndex < 0) {\n    newView.bindingIndex = newView.bindingStartIndex;\n  }\n\n  if (host != null) {\n    previousOrParentNode = host;\n    isParent = true;\n  }\n\n  currentView = newView;\n  currentQueries = newView && newView.queries;\n\n  return oldView;\n}\n\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n */\nexport function leaveView(newView: LView): void {\n  if (!checkNoChangesMode) {\n    executeHooks(\n        directives !, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n  }\n  // Views should be clean and in update mode after being checked, so these bits are cleared\n  currentView.flags &= ~(LViewFlags.CreationMode | LViewFlags.Dirty);\n  currentView.lifecycleStage = LifecycleStage.Init;\n  currentView.bindingIndex = -1;\n  enterView(newView, null);\n}\n\n/**  Refreshes directives in this view and triggers any init/content hooks.  */\nfunction refreshDirectives() {\n  executeInitAndContentHooks();\n\n  const tView = currentView.tView;\n  // This needs to be set before children are processed to support recursive components\n  tView.firstTemplatePass = firstTemplatePass = false;\n\n  setHostBindings(tView.hostBindings);\n  refreshChildComponents(tView.components);\n}\n\n/** Sets the host bindings for the current view. */\nexport function setHostBindings(bindings: number[] | null): void {\n  if (bindings != null) {\n    const defs = currentView.tView.directives !;\n    for (let i = 0; i < bindings.length; i += 2) {\n      const dirIndex = bindings[i];\n      const def = defs[dirIndex] as DirectiveDef<any>;\n      def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n    }\n  }\n}\n\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components: number[] | null): void {\n  if (components != null) {\n    for (let i = 0; i < components.length; i += 2) {\n      componentRefresh(components[i], components[i + 1]);\n    }\n  }\n}\n\nexport function executeInitAndContentHooks(): void {\n  if (!checkNoChangesMode) {\n    const tView = currentView.tView;\n    executeInitHooks(currentView, tView, creationMode);\n    executeHooks(directives !, tView.contentHooks, tView.contentCheckHooks, creationMode);\n  }\n}\n\nexport function createLView<T>(\n    viewId: number, renderer: Renderer3, tView: TView, template: ComponentTemplate<T>| null,\n    context: T | null, flags: LViewFlags): LView {\n  const newView = {\n    parent: currentView,\n    id: viewId,  // -1 for component views\n    flags: flags | LViewFlags.CreationMode | LViewFlags.Attached,\n    node: null !,  // until we initialize it in createNode.\n    data: [],\n    directives: null,\n    tView: tView,\n    cleanup: null,\n    renderer: renderer,\n    child: null,\n    tail: null,\n    next: null,\n    bindingStartIndex: -1,\n    bindingIndex: -1,\n    template: template,\n    context: context,\n    dynamicViewCount: 0,\n    lifecycleStage: LifecycleStage.Init,\n    queries: null,\n    injector: currentView && currentView.injector,\n  };\n\n  return newView;\n}\n\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n */\nexport function createLNodeObject(\n    type: LNodeType, currentView: LView, parent: LNode, native: RText | RElement | null | undefined,\n    state: any,\n    queries: LQueries | null): LElementNode&LTextNode&LViewNode&LContainerNode&LProjectionNode {\n  return {\n    type: type,\n    native: native as any,\n    view: currentView,\n    parent: parent as any,\n    child: null,\n    next: null,\n    nodeInjector: parent ? parent.nodeInjector : null,\n    data: state,\n    queries: queries,\n    tNode: null,\n    pNextOrParent: null,\n    dynamicLContainerNode: null\n  };\n}\n\n/**\n * A common way of creating the LNode to make sure that all of them have same shape to\n * keep the execution code monomorphic and fast.\n */\nexport function createLNode(\n    index: number | null, type: LNodeType.Element, native: RElement | RText | null,\n    lView?: LView | null): LElementNode;\nexport function createLNode(\n    index: null, type: LNodeType.View, native: null, lView: LView): LViewNode;\nexport function createLNode(\n    index: number, type: LNodeType.Container, native: undefined,\n    lContainer: LContainer): LContainerNode;\nexport function createLNode(\n    index: number, type: LNodeType.Projection, native: null,\n    lProjection: LProjection): LProjectionNode;\nexport function createLNode(\n    index: number | null, type: LNodeType, native: RText | RElement | null | undefined,\n    state?: null | LView | LContainer | LProjection): LElementNode&LTextNode&LViewNode&\n    LContainerNode&LProjectionNode {\n  const parent = isParent ? previousOrParentNode :\n                            previousOrParentNode && previousOrParentNode.parent as LNode;\n  let queries =\n      (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n      parent && parent.queries && parent.queries.child();\n  const isState = state != null;\n  const node =\n      createLNodeObject(type, currentView, parent, native, isState ? state as any : null, queries);\n\n  if ((type & LNodeType.ViewOrElement) === LNodeType.ViewOrElement && isState) {\n    // Bit of a hack to bust through the readonly because there is a circular dep between\n    // LView and LNode.\n    ngDevMode && assertNull((state as LView).node, 'LView.node should not have been initialized');\n    (state as LView as{node: LNode}).node = node;\n  }\n  if (index != null) {\n    // We are Element or Container\n    ngDevMode && assertDataNext(index);\n    data[index] = node;\n\n    // Every node adds a value to the static data array to avoid a sparse array\n    if (index >= tData.length) {\n      tData[index] = null;\n    } else {\n      node.tNode = tData[index] as TNode;\n    }\n\n    // Now link ourselves into the tree.\n    if (isParent) {\n      currentQueries = null;\n      if (previousOrParentNode.view === currentView ||\n          previousOrParentNode.type === LNodeType.View) {\n        // We are in the same view, which means we are adding content node to the parent View.\n        ngDevMode && assertNull(\n                         previousOrParentNode.child,\n                         `previousOrParentNode's child should not have been set.`);\n        previousOrParentNode.child = node;\n      } else {\n        // We are adding component view, so we don't link parent node child to this node.\n      }\n    } else if (previousOrParentNode) {\n      ngDevMode && assertNull(\n                       previousOrParentNode.next,\n                       `previousOrParentNode's next property should not have been set ${index}.`);\n      previousOrParentNode.next = node;\n      if (previousOrParentNode.dynamicLContainerNode) {\n        previousOrParentNode.dynamicLContainerNode.next = node;\n      }\n    }\n  }\n  previousOrParentNode = node;\n  isParent = true;\n  return node;\n}\n\n\n//////////////////////////\n//// Render\n//////////////////////////\n\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n  isParent = false;\n  previousOrParentNode = null !;\n}\n\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\nexport function renderTemplate<T>(\n    hostNode: RElement, template: ComponentTemplate<T>, context: T,\n    providedRendererFactory: RendererFactory3, host: LElementNode | null,\n    directives?: DirectiveDefListOrFactory | null,\n    pipes?: PipeDefListOrFactory | null): LElementNode {\n  if (host == null) {\n    resetApplicationState();\n    rendererFactory = providedRendererFactory;\n    const tView = getOrCreateTView(template, directives || null, pipes || null);\n    host = createLNode(\n        null, LNodeType.Element, hostNode,\n        createLView(\n            -1, providedRendererFactory.createRenderer(null, null), tView, null, {},\n            LViewFlags.CheckAlways));\n  }\n  const hostView = host.data !;\n  ngDevMode && assertNotNull(hostView, 'Host node should have an LView defined in host.data.');\n  renderComponentOrTemplate(host, hostView, context, template);\n  return host;\n}\n\nexport function renderEmbeddedTemplate<T>(\n    viewNode: LViewNode | null, template: ComponentTemplate<T>, context: T, renderer: Renderer3,\n    directives?: DirectiveDefList | null, pipes?: PipeDefList | null): LViewNode {\n  const _isParent = isParent;\n  const _previousOrParentNode = previousOrParentNode;\n  let oldView: LView;\n  try {\n    isParent = true;\n    previousOrParentNode = null !;\n    let rf: RenderFlags = RenderFlags.Update;\n    if (viewNode == null) {\n      const tView = getOrCreateTView(template, directives || null, pipes || null);\n      const lView = createLView(-1, renderer, tView, template, context, LViewFlags.CheckAlways);\n\n      viewNode = createLNode(null, LNodeType.View, null, lView);\n      rf = RenderFlags.Create;\n    }\n    oldView = enterView(viewNode.data, viewNode);\n\n    template(rf, context);\n    refreshDirectives();\n    refreshDynamicChildren();\n\n  } finally {\n    leaveView(oldView !);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n  }\n  return viewNode;\n}\n\nexport function renderComponentOrTemplate<T>(\n    node: LElementNode, hostView: LView, componentOrContext: T, template?: ComponentTemplate<T>) {\n  const oldView = enterView(hostView, node);\n  try {\n    if (rendererFactory.begin) {\n      rendererFactory.begin();\n    }\n    if (template) {\n      template(getRenderFlags(hostView), componentOrContext !);\n      refreshDynamicChildren();\n      refreshDirectives();\n    } else {\n      executeInitAndContentHooks();\n\n      // Element was stored at 0 in data and directive was stored at 0 in directives\n      // in renderComponent()\n      setHostBindings(_ROOT_DIRECTIVE_INDICES);\n      componentRefresh(0, 0);\n    }\n  } finally {\n    if (rendererFactory.end) {\n      rendererFactory.end();\n    }\n    leaveView(oldView);\n  }\n}\n\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n */\nfunction getRenderFlags(view: LView): RenderFlags {\n  return view.flags & LViewFlags.CreationMode ? RenderFlags.Create | RenderFlags.Update :\n                                                RenderFlags.Update;\n}\n\n//////////////////////////\n//// Element\n//////////////////////////\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nexport function elementStart(\n    index: number, name: string, attrs?: string[] | null, localRefs?: string[] | null): RElement {\n  ngDevMode &&\n      assertEqual(\n          currentView.bindingStartIndex, -1, 'elements should be created before any bindings');\n\n  const native: RElement = renderer.createElement(name);\n  const node: LElementNode = createLNode(index, LNodeType.Element, native !, null);\n\n  if (attrs) setUpAttributes(native, attrs);\n  appendChild(node.parent !, native, currentView);\n  createDirectivesAndLocals(index, name, attrs, localRefs, null);\n  return native;\n}\n\nfunction createDirectivesAndLocals(\n    index: number, name: string | null, attrs: string[] | null | undefined,\n    localRefs: string[] | null | undefined, containerData: TView[] | null) {\n  const node = previousOrParentNode;\n  if (firstTemplatePass) {\n    ngDevMode && assertDataInRange(index - 1);\n    node.tNode = tData[index] = createTNode(name, attrs || null, containerData);\n    cacheMatchingDirectivesForNode(node.tNode, currentView.tView, localRefs || null);\n  } else {\n    instantiateDirectivesDirectly();\n  }\n  saveResolvedLocalsInData();\n}\n\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n */\nfunction cacheMatchingDirectivesForNode(\n    tNode: TNode, tView: TView, localRefs: string[] | null): void {\n  // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n  const exportsMap: ({[key: string]: number} | null) = localRefs ? {'': -1} : null;\n  const matches = tView.currentMatches = findDirectiveMatches(tNode);\n  if (matches) {\n    for (let i = 0; i < matches.length; i += 2) {\n      const def = matches[i] as DirectiveDef<any>;\n      const valueIndex = i + 1;\n      resolveDirective(def, valueIndex, matches, tView);\n      saveNameToExportMap(matches[valueIndex] as number, def, exportsMap);\n    }\n  }\n  if (exportsMap) cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n\n/** Matches the current node against all available selectors. */\nfunction findDirectiveMatches(tNode: TNode): CurrentMatchesList|null {\n  const registry = currentView.tView.directiveRegistry;\n  let matches: any[]|null = null;\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const def = registry[i];\n      if (isNodeMatchingSelectorList(tNode, def.selectors !)) {\n        if ((def as ComponentDef<any>).template) {\n          if (tNode.flags & TNodeFlags.isComponent) throwMultipleComponentError(tNode);\n          tNode.flags = TNodeFlags.isComponent;\n        }\n        if (def.diPublic) def.diPublic(def);\n        (matches || (matches = [])).push(def, null);\n      }\n    }\n  }\n  return matches as CurrentMatchesList;\n}\n\nexport function resolveDirective(\n    def: DirectiveDef<any>, valueIndex: number, matches: CurrentMatchesList, tView: TView): any {\n  if (matches[valueIndex] === null) {\n    matches[valueIndex] = CIRCULAR;\n    const instance = def.factory();\n    (tView.directives || (tView.directives = [])).push(def);\n    return directiveCreate(matches[valueIndex] = tView.directives !.length - 1, instance, def);\n  } else if (matches[valueIndex] === CIRCULAR) {\n    // If we revisit this directive before it's resolved, we know it's circular\n    throwCyclicDependencyError(def.type);\n  }\n  return null;\n}\n\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex: number): void {\n  if (firstTemplatePass) {\n    (currentView.tView.components || (currentView.tView.components = [\n     ])).push(dirIndex, data.length - 1);\n  }\n}\n\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex: number): void {\n  ngDevMode &&\n      assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n  (currentView.tView.hostBindings || (currentView.tView.hostBindings = [\n   ])).push(dirIndex, data.length - 1);\n}\n\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nexport function initChangeDetectorIfExisting(\n    injector: LInjector | null, instance: any, view: LView): void {\n  if (injector && injector.changeDetectorRef != null) {\n    (injector.changeDetectorRef as ViewRef<any>)._setComponentContext(view, instance);\n  }\n}\n\nexport function isComponent(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.isComponent) === TNodeFlags.isComponent;\n}\n\n/**\n * This function instantiates the given directives.\n */\nfunction instantiateDirectivesDirectly() {\n  const tNode = previousOrParentNode.tNode !;\n  const count = tNode.flags & TNodeFlags.DirectiveCountMask;\n\n  if (count > 0) {\n    const start = tNode.flags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n    const tDirectives = currentView.tView.directives !;\n\n    for (let i = start; i < end; i++) {\n      const def: DirectiveDef<any> = tDirectives[i];\n      directiveCreate(i, def.factory(), def);\n    }\n  }\n}\n\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(\n    tNode: TNode, localRefs: string[] | null, exportsMap: {[key: string]: number}): void {\n  if (localRefs) {\n    const localNames: (string | number)[] = tNode.localNames = [];\n\n    // Local names must be stored in tNode in the same order that localRefs are defined\n    // in the template to ensure the data is loaded in the same slots as their refs\n    // in the template (for template queries).\n    for (let i = 0; i < localRefs.length; i += 2) {\n      const index = exportsMap[localRefs[i + 1]];\n      if (index == null) throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n      localNames.push(localRefs[i], index);\n    }\n  }\n}\n\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(\n    index: number, def: DirectiveDef<any>| ComponentDef<any>,\n    exportsMap: {[key: string]: number} | null) {\n  if (exportsMap) {\n    if (def.exportAs) exportsMap[def.exportAs] = index;\n    if ((def as ComponentDef<any>).template) exportsMap[''] = index;\n  }\n}\n\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to data[] in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(): void {\n  const localNames = previousOrParentNode.tNode !.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      const index = localNames[i + 1] as number;\n      const value = index === -1 ? previousOrParentNode.native : directives ![index];\n      data.push(value);\n    }\n  }\n}\n\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(\n    template: ComponentTemplate<any>, directives: DirectiveDefListOrFactory | null,\n    pipes: PipeDefListOrFactory | null): TView {\n  return template.ngPrivateData ||\n      (template.ngPrivateData = createTView(directives, pipes) as never);\n}\n\n/** Creates a TView instance */\nexport function createTView(\n    defs: DirectiveDefListOrFactory | null, pipes: PipeDefListOrFactory | null): TView {\n  return {\n    data: [],\n    directives: null,\n    firstTemplatePass: true,\n    initHooks: null,\n    checkHooks: null,\n    contentHooks: null,\n    contentCheckHooks: null,\n    viewHooks: null,\n    viewCheckHooks: null,\n    destroyHooks: null,\n    pipeDestroyHooks: null,\n    hostBindings: null,\n    components: null,\n    directiveRegistry: typeof defs === 'function' ? defs() : defs,\n    pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n    currentMatches: null\n  };\n}\n\nfunction setUpAttributes(native: RElement, attrs: string[]): void {\n  ngDevMode && assertEqual(attrs.length % 2, 0, 'each attribute should have a key and a value');\n\n  const isProc = isProceduralRenderer(renderer);\n  for (let i = 0; i < attrs.length; i += 2) {\n    const attrName = attrs[i];\n    if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n      const attrVal = attrs[i + 1];\n      isProc ? (renderer as ProceduralRenderer3).setAttribute(native, attrName, attrVal) :\n               native.setAttribute(attrName, attrVal);\n    }\n  }\n}\n\nexport function createError(text: string, token: any) {\n  return new Error(`Renderer: ${text} [${stringify(token)}]`);\n}\n\n\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nexport function locateHostElement(\n    factory: RendererFactory3, elementOrSelector: RElement | string): RElement|null {\n  ngDevMode && assertDataInRange(-1);\n  rendererFactory = factory;\n  const defaultRenderer = factory.createRenderer(null, null);\n  const rNode = typeof elementOrSelector === 'string' ?\n      (isProceduralRenderer(defaultRenderer) ?\n           defaultRenderer.selectRootElement(elementOrSelector) :\n           defaultRenderer.querySelector(elementOrSelector)) :\n      elementOrSelector;\n  if (ngDevMode && !rNode) {\n    if (typeof elementOrSelector === 'string') {\n      throw createError('Host node with selector not found:', elementOrSelector);\n    } else {\n      throw createError('Host node is required:', elementOrSelector);\n    }\n  }\n  return rNode;\n}\n\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nexport function hostElement(\n    tag: string, rNode: RElement | null, def: ComponentDef<any>): LElementNode {\n  resetApplicationState();\n  const node = createLNode(\n      0, LNodeType.Element, rNode,\n      createLView(\n          -1, renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, null,\n          def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways));\n\n  if (firstTemplatePass) {\n    node.tNode = createTNode(tag as string, null, null);\n    node.tNode.flags = TNodeFlags.isComponent;\n    if (def.diPublic) def.diPublic(def);\n    currentView.tView.directives = [def];\n  }\n\n  return node;\n}\n\n\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nexport function listener(\n    eventName: string, listenerFn: (e?: any) => any, useCapture = false): void {\n  ngDevMode && assertPreviousIsParent();\n  const node = previousOrParentNode;\n  const native = node.native as RElement;\n\n  // In order to match current behavior, native DOM event listeners must be added for all\n  // events (including outputs).\n  const cleanupFns = cleanup || (cleanup = currentView.cleanup = []);\n  if (isProceduralRenderer(renderer)) {\n    const wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n    const cleanupFn = renderer.listen(native, eventName, wrappedListener);\n    cleanupFns.push(cleanupFn, null);\n  } else {\n    const wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n    native.addEventListener(eventName, wrappedListener, useCapture);\n    cleanupFns.push(eventName, native, wrappedListener, useCapture);\n  }\n\n  let tNode: TNode|null = node.tNode !;\n  if (tNode.outputs === undefined) {\n    // if we create TNode here, inputs must be undefined so we know they still need to be\n    // checked\n    tNode.outputs = generatePropertyAliases(node.tNode !.flags, BindingDirection.Output);\n  }\n\n  const outputs = tNode.outputs;\n  let outputData: PropertyAliasValue|undefined;\n  if (outputs && (outputData = outputs[eventName])) {\n    createOutput(outputData, listenerFn);\n  }\n}\n\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs: PropertyAliasValue, listener: Function): void {\n  for (let i = 0; i < outputs.length; i += 2) {\n    ngDevMode && assertDataInRange(outputs[i] as number, directives !);\n    const subscription = directives ![outputs[i] as number][outputs[i + 1]].subscribe(listener);\n    cleanup !.push(subscription.unsubscribe, subscription);\n  }\n}\n\n/** Mark the end of the element. */\nexport function elementEnd() {\n  if (isParent) {\n    isParent = false;\n  } else {\n    ngDevMode && assertHasParent();\n    previousOrParentNode = previousOrParentNode.parent !;\n  }\n  ngDevMode && assertNodeType(previousOrParentNode, LNodeType.Element);\n  const queries = previousOrParentNode.queries;\n  queries && queries.addNode(previousOrParentNode);\n  queueLifecycleHooks(previousOrParentNode.tNode !.flags, currentView);\n}\n\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nexport function elementAttribute(\n    index: number, name: string, value: any, sanitizer?: Sanitizer): void {\n  if (value !== NO_CHANGE) {\n    const element: LElementNode = data[index];\n    if (value == null) {\n      isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                                       element.native.removeAttribute(name);\n    } else {\n      const strValue = sanitizer == null ? stringify(value) : sanitizer(value);\n      isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                                       element.native.setAttribute(name, strValue);\n    }\n  }\n}\n\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\n\nexport function elementProperty<T>(\n    index: number, propName: string, value: T | NO_CHANGE, sanitizer?: Sanitizer): void {\n  if (value === NO_CHANGE) return;\n  const node = data[index] as LElementNode;\n  const tNode = node.tNode !;\n  // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n  // yet been checked\n  if (tNode && tNode.inputs === undefined) {\n    // mark inputs as checked\n    tNode.inputs = generatePropertyAliases(node.tNode !.flags, BindingDirection.Input);\n  }\n\n  const inputData = tNode && tNode.inputs;\n  let dataValue: PropertyAliasValue|undefined;\n  if (inputData && (dataValue = inputData[propName])) {\n    setInputsForProperty(dataValue, value);\n    markDirtyIfOnPush(node);\n  } else {\n    // It is assumed that the sanitizer is only added when the compiler determines that the property\n    // is risky, so sanitization can be done without further checks.\n    value = sanitizer != null ? (sanitizer(value) as any) : value;\n    const native = node.native;\n    isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                                     (native.setProperty ? native.setProperty(propName, value) :\n                                                           (native as any)[propName] = value);\n  }\n}\n\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param tagName\n * @param attrs\n * @param data\n * @param localNames A list of local names and their matching indices\n * @returns the TNode object\n */\nfunction createTNode(\n    tagName: string | null, attrs: string[] | null, data: TContainer | null): TNode {\n  return {\n    flags: 0,\n    tagName: tagName,\n    attrs: attrs,\n    localNames: null,\n    initialInputs: undefined,\n    inputs: undefined,\n    outputs: undefined,\n    data: data\n  };\n}\n\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs: PropertyAliasValue, value: any): void {\n  for (let i = 0; i < inputs.length; i += 2) {\n    ngDevMode && assertDataInRange(inputs[i] as number, directives !);\n    directives ![inputs[i] as number][inputs[i + 1]] = value;\n  }\n}\n\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(\n    tNodeFlags: TNodeFlags, direction: BindingDirection): PropertyAliases|null {\n  const count = tNodeFlags & TNodeFlags.DirectiveCountMask;\n  let propStore: PropertyAliases|null = null;\n\n  if (count > 0) {\n    const start = tNodeFlags >> TNodeFlags.DirectiveStartingIndexShift;\n    const end = start + count;\n    const isInput = direction === BindingDirection.Input;\n    const defs = currentView.tView.directives !;\n\n    for (let i = start; i < end; i++) {\n      const directiveDef = defs[i] as DirectiveDef<any>;\n      const propertyAliasMap: {[publicName: string]: string} =\n          isInput ? directiveDef.inputs : directiveDef.outputs;\n      for (let publicName in propertyAliasMap) {\n        if (propertyAliasMap.hasOwnProperty(publicName)) {\n          propStore = propStore || {};\n          const internalName = propertyAliasMap[publicName];\n          const hasProperty = propStore.hasOwnProperty(publicName);\n          hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n        }\n      }\n    }\n  }\n  return propStore;\n}\n\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nexport function elementClassNamed<T>(index: number, className: string, value: T | NO_CHANGE): void {\n  if (value !== NO_CHANGE) {\n    const lElement = data[index] as LElementNode;\n    if (value) {\n      isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                                       lElement.native.classList.add(className);\n\n    } else {\n      isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                                       lElement.native.classList.remove(className);\n    }\n  }\n}\n\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nexport function elementClass<T>(index: number, value: T | NO_CHANGE): void {\n  if (value !== NO_CHANGE) {\n    // TODO: This is a naive implementation which simply writes value to the `className`. In the\n    // future\n    // we will add logic here which would work with the animation code.\n    const lElement: LElementNode = data[index];\n    isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                                     lElement.native['className'] = stringify(value);\n  }\n}\n\n/**\n * Update a given style on an Element.\n *\n * @param index Index of the element to change in the data array\n * @param styleName Name of property. Because it is going to DOM this is not subject to\n *        renaming as part of minification.\n * @param value New value to write (null to remove).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n * @param sanitizer An optional function used to transform the value typically used for\n *        sanitization.\n */\nexport function elementStyleNamed<T>(\n    index: number, styleName: string, value: T | NO_CHANGE, suffix?: string): void;\nexport function elementStyleNamed<T>(\n    index: number, styleName: string, value: T | NO_CHANGE, sanitizer?: Sanitizer): void;\nexport function elementStyleNamed<T>(\n    index: number, styleName: string, value: T | NO_CHANGE,\n    suffixOrSanitizer?: string | Sanitizer): void {\n  if (value !== NO_CHANGE) {\n    const lElement: LElementNode = data[index];\n    if (value == null) {\n      isProceduralRenderer(renderer) ?\n          renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n          lElement.native['style'].removeProperty(styleName);\n    } else {\n      let strValue =\n          typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify(value);\n      if (typeof suffixOrSanitizer == 'string') strValue = strValue + suffixOrSanitizer;\n      isProceduralRenderer(renderer) ?\n          renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n          lElement.native['style'].setProperty(styleName, strValue);\n    }\n  }\n}\n\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy than the style is remove. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nexport function elementStyle<T>(\n    index: number, value: {[styleName: string]: any} | NO_CHANGE): void {\n  if (value !== NO_CHANGE) {\n    // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n    // we will add logic here which would work with the animation code.\n    const lElement = data[index] as LElementNode;\n    if (isProceduralRenderer(renderer)) {\n      renderer.setProperty(lElement.native, 'style', value);\n    } else {\n      const style = lElement.native['style'];\n      for (let i = 0, keys = Object.keys(value); i < keys.length; i++) {\n        const styleName: string = keys[i];\n        const styleValue: any = (value as any)[styleName];\n        styleValue == null ? style.removeProperty(styleName) :\n                             style.setProperty(styleName, styleValue);\n      }\n    }\n  }\n}\n\n\n\n//////////////////////////\n//// Text\n//////////////////////////\n\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array.\n * @param value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n */\nexport function text(index: number, value?: any): void {\n  ngDevMode &&\n      assertEqual(\n          currentView.bindingStartIndex, -1, 'text nodes should be created before bindings');\n  const textNode = value != null ? createTextNode(value, renderer) : null;\n  const node = createLNode(index, LNodeType.Element, textNode);\n  // Text nodes are self closing.\n  isParent = false;\n  appendChild(node.parent !, textNode, currentView);\n}\n\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nexport function textBinding<T>(index: number, value: T | NO_CHANGE): void {\n  ngDevMode && assertDataInRange(index);\n  let existingNode = data[index] as LTextNode;\n  ngDevMode && assertNotNull(existingNode, 'existing node');\n  if (existingNode.native) {\n    // If DOM node exists and value changed, update textContent\n    value !== NO_CHANGE &&\n        (isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify(value)) :\n                                          existingNode.native.textContent = stringify(value));\n  } else {\n    // Node was created but DOM node creation was delayed. Create and append now.\n    existingNode.native = createTextNode(value, renderer);\n    insertChild(existingNode, currentView);\n  }\n}\n\n//////////////////////////\n//// Directive\n//////////////////////////\n\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n */\nexport function directiveCreate<T>(\n    index: number, directive: T, directiveDef: DirectiveDef<T>| ComponentDef<T>): T {\n  const instance = baseDirectiveCreate(index, directive, directiveDef);\n\n  ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n  const tNode = previousOrParentNode.tNode;\n\n  const isComponent = (directiveDef as ComponentDef<T>).template;\n  if (isComponent) {\n    addComponentLogic(index, directive, directiveDef as ComponentDef<T>);\n  }\n\n  if (firstTemplatePass) {\n    // Init hooks are queued now so ngOnInit is called in host components before\n    // any projected components.\n    queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n\n    if (directiveDef.hostBindings) queueHostBindingForCheck(index);\n  }\n\n  if (tNode && tNode.attrs) {\n    setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n  }\n\n  return instance;\n}\n\nfunction addComponentLogic<T>(index: number, instance: T, def: ComponentDef<T>): void {\n  const tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n\n  // Only component views should be added to the view tree directly. Embedded views are\n  // accessed through their containers because they may be removed / re-added later.\n  const hostView = addToViewTree(\n      currentView, createLView(\n                       -1, rendererFactory.createRenderer(\n                               previousOrParentNode.native as RElement, def.rendererType),\n                       tView, null, null, def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways));\n\n  (previousOrParentNode.data as any) = hostView;\n  (hostView.node as any) = previousOrParentNode;\n\n  initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n\n  if (firstTemplatePass) queueComponentIndexForCheck(index);\n}\n\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nexport function baseDirectiveCreate<T>(\n    index: number, directive: T, directiveDef: DirectiveDef<T>| ComponentDef<T>): T {\n  ngDevMode &&\n      assertEqual(\n          currentView.bindingStartIndex, -1, 'directives should be created before any bindings');\n  ngDevMode && assertPreviousIsParent();\n\n  Object.defineProperty(\n      directive, NG_HOST_SYMBOL, {enumerable: false, value: previousOrParentNode});\n\n  if (directives == null) currentView.directives = directives = [];\n\n  ngDevMode && assertDataNext(index, directives);\n  directives[index] = directive;\n\n  if (firstTemplatePass) {\n    const flags = previousOrParentNode.tNode !.flags;\n    if ((flags & TNodeFlags.DirectiveCountMask) === 0) {\n      // When the first directive is created:\n      // - save the index,\n      // - set the number of directives to 1\n      previousOrParentNode.tNode !.flags =\n          index << TNodeFlags.DirectiveStartingIndexShift | flags & TNodeFlags.isComponent | 1;\n    } else {\n      // Only need to bump the size when subsequent directives are created\n      ngDevMode && assertNotEqual(\n                       flags & TNodeFlags.DirectiveCountMask, TNodeFlags.DirectiveCountMask,\n                       'Reached the max number of directives');\n      previousOrParentNode.tNode !.flags++;\n    }\n  } else {\n    const diPublic = directiveDef !.diPublic;\n    if (diPublic) diPublic(directiveDef !);\n  }\n\n  if (directiveDef !.attributes != null && previousOrParentNode.type == LNodeType.Element) {\n    setUpAttributes(\n        (previousOrParentNode as LElementNode).native, directiveDef !.attributes as string[]);\n  }\n\n  return directive;\n}\n\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs<T>(\n    directiveIndex: number, instance: T, inputs: {[key: string]: string}, tNode: TNode): void {\n  let initialInputData = tNode.initialInputs as InitialInputData | undefined;\n  if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n    initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n  }\n\n  const initialInputs: InitialInputs|null = initialInputData[directiveIndex];\n  if (initialInputs) {\n    for (let i = 0; i < initialInputs.length; i += 2) {\n      (instance as any)[initialInputs[i]] = initialInputs[i + 1];\n    }\n  }\n}\n\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(\n    directiveIndex: number, inputs: {[key: string]: string}, tNode: TNode): InitialInputData {\n  const initialInputData: InitialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n  initialInputData[directiveIndex] = null;\n\n  const attrs = tNode.attrs !;\n  for (let i = 0; i < attrs.length; i += 2) {\n    const attrName = attrs[i];\n    const minifiedInputName = inputs[attrName];\n    if (minifiedInputName !== undefined) {\n      const inputsToStore: InitialInputs =\n          initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n      inputsToStore.push(minifiedInputName, attrs[i + 1]);\n    }\n  }\n  return initialInputData;\n}\n\n\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n\n\nexport function createLContainer(\n    parentLNode: LNode, currentView: LView, template?: ComponentTemplate<any>): LContainer {\n  ngDevMode && assertNotNull(parentLNode, 'containers should have a parent');\n  return <LContainer>{\n    views: [],\n    nextIndex: 0,\n    // If the direct parent of the container is a view, its views will need to be added\n    // through insertView() when its parent view is being inserted:\n    renderParent: canInsertNativeNode(parentLNode, currentView) ? parentLNode : null,\n    template: template == null ? null : template,\n    next: null,\n    parent: currentView,\n    dynamicViewCount: 0,\n    queries: null\n  };\n}\n\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nexport function container(\n    index: number, template?: ComponentTemplate<any>, tagName?: string, attrs?: string[],\n    localRefs?: string[] | null): void {\n  ngDevMode && assertEqual(\n                   currentView.bindingStartIndex, -1,\n                   'container nodes should be created before any bindings');\n\n  const currentParent = isParent ? previousOrParentNode : previousOrParentNode.parent !;\n  const lContainer = createLContainer(currentParent, currentView, template);\n\n  const node = createLNode(index, LNodeType.Container, undefined, lContainer);\n\n  // Containers are added to the current view tree instead of their embedded views\n  // because views can be removed and re-inserted.\n  addToViewTree(currentView, node.data);\n  createDirectivesAndLocals(index, tagName || null, attrs, localRefs, []);\n\n  isParent = false;\n  ngDevMode && assertNodeType(previousOrParentNode, LNodeType.Container);\n  const queries = node.queries;\n  if (queries) {\n    // check if a given container node matches\n    queries.addNode(node);\n    // prepare place for matching nodes from views inserted into a given container\n    lContainer.queries = queries.container();\n  }\n}\n\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nexport function containerRefreshStart(index: number): void {\n  ngDevMode && assertDataInRange(index);\n  previousOrParentNode = data[index] as LNode;\n  ngDevMode && assertNodeType(previousOrParentNode, LNodeType.Container);\n  isParent = true;\n  (previousOrParentNode as LContainerNode).data.nextIndex = 0;\n  ngDevMode && assertSame(\n                   (previousOrParentNode as LContainerNode).native, undefined,\n                   `the container's native element should not have been set yet.`);\n\n  if (!checkNoChangesMode) {\n    // We need to execute init hooks here so ngOnInit hooks are called in top level views\n    // before they are called in embedded views (for backwards compatibility).\n    executeInitHooks(currentView, currentView.tView, creationMode);\n  }\n}\n\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nexport function containerRefreshEnd(): void {\n  if (isParent) {\n    isParent = false;\n  } else {\n    ngDevMode && assertNodeType(previousOrParentNode, LNodeType.View);\n    ngDevMode && assertHasParent();\n    previousOrParentNode = previousOrParentNode.parent !;\n  }\n  ngDevMode && assertNodeType(previousOrParentNode, LNodeType.Container);\n  const container = previousOrParentNode as LContainerNode;\n  container.native = undefined;\n  ngDevMode && assertNodeType(container, LNodeType.Container);\n  const nextIndex = container.data.nextIndex;\n\n  // remove extra views at the end of the container\n  while (nextIndex < container.data.views.length) {\n    removeView(container, nextIndex);\n  }\n}\n\nfunction refreshDynamicChildren() {\n  for (let current = currentView.child; current !== null; current = current.next) {\n    if (current.dynamicViewCount !== 0 && (current as LContainer).views) {\n      const container = current as LContainer;\n      for (let i = 0; i < container.views.length; i++) {\n        const view = container.views[i];\n        // The directives and pipes are not needed here as an existing view is only being refreshed.\n        renderEmbeddedTemplate(view, view.data.template !, view.data.context !, renderer);\n      }\n    }\n  }\n}\n\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(\n    containerNode: LContainerNode, startIdx: number, viewBlockId: number): LViewNode|null {\n  const views = containerNode.data.views;\n  for (let i = startIdx; i < views.length; i++) {\n    const viewAtPositionId = views[i].data.id;\n    if (viewAtPositionId === viewBlockId) {\n      return views[i];\n    } else if (viewAtPositionId < viewBlockId) {\n      // found a view that should not be at this position - remove\n      removeView(containerNode, i);\n    } else {\n      // found a view with id grater than the one we are searching for\n      // which means that required view doesn't exist and can't be found at\n      // later positions in the views array - stop the search here\n      break;\n    }\n  }\n  return null;\n}\n\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nexport function embeddedViewStart(viewBlockId: number): RenderFlags {\n  const container =\n      (isParent ? previousOrParentNode : previousOrParentNode.parent !) as LContainerNode;\n  ngDevMode && assertNodeType(container, LNodeType.Container);\n  const lContainer = container.data;\n  let viewNode: LViewNode|null = scanForView(container, lContainer.nextIndex, viewBlockId);\n\n  if (viewNode) {\n    previousOrParentNode = viewNode;\n    ngDevMode && assertNodeType(previousOrParentNode, LNodeType.View);\n    isParent = true;\n    enterView(viewNode.data, viewNode);\n  } else {\n    // When we create a new LView, we always reset the state of the instructions.\n    const newView = createLView(\n        viewBlockId, renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, null,\n        LViewFlags.CheckAlways);\n    if (lContainer.queries) {\n      newView.queries = lContainer.queries.enterView(lContainer.nextIndex);\n    }\n\n    enterView(newView, viewNode = createLNode(null, LNodeType.View, null, newView));\n  }\n  return getRenderFlags(viewNode.data);\n}\n\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view needs to set the global tData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the static data for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param viewIndex The index of the TView in TContainer\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex: number, parent: LContainerNode): TView {\n  ngDevMode && assertNodeType(parent, LNodeType.Container);\n  const tContainer = (parent !.tNode as TContainerNode).data;\n  if (viewIndex >= tContainer.length || tContainer[viewIndex] == null) {\n    const tView = currentView.tView;\n    tContainer[viewIndex] = createTView(tView.directiveRegistry, tView.pipeRegistry);\n  }\n  return tContainer[viewIndex];\n}\n\n/** Marks the end of an embedded view. */\nexport function embeddedViewEnd(): void {\n  refreshDirectives();\n  isParent = false;\n  const viewNode = previousOrParentNode = currentView.node as LViewNode;\n  const containerNode = previousOrParentNode.parent as LContainerNode;\n  if (containerNode) {\n    ngDevMode && assertNodeType(viewNode, LNodeType.View);\n    ngDevMode && assertNodeType(containerNode, LNodeType.Container);\n    const lContainer = containerNode.data;\n\n    if (creationMode) {\n      // When projected nodes are going to be inserted, the renderParent of the dynamic container\n      // used by the ViewContainerRef must be set.\n      setRenderParentInProjectedNodes(lContainer.renderParent, viewNode);\n      // it is a new view, insert it into collection of views for a given container\n      insertView(containerNode, viewNode, lContainer.nextIndex);\n    }\n\n    lContainer.nextIndex++;\n  }\n  leaveView(currentView !.parent !);\n  ngDevMode && assertEqual(isParent, false, 'isParent');\n  ngDevMode && assertNodeType(previousOrParentNode, LNodeType.View);\n}\n\n/**\n * For nodes which are projected inside an embedded view, this function sets the renderParent\n * of their dynamic LContainerNode.\n * @param renderParent the renderParent of the LContainer which contains the embedded view.\n * @param viewNode the embedded view.\n */\nfunction setRenderParentInProjectedNodes(\n    renderParent: LElementNode | null, viewNode: LViewNode): void {\n  if (renderParent != null) {\n    let node = viewNode.child;\n    while (node) {\n      if (node.type === LNodeType.Projection) {\n        let nodeToProject: LNode|null = (node as LProjectionNode).data.head;\n        const lastNodeToProject = (node as LProjectionNode).data.tail;\n        while (nodeToProject) {\n          if (nodeToProject.dynamicLContainerNode) {\n            nodeToProject.dynamicLContainerNode.data.renderParent = renderParent;\n          }\n          nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n      }\n      node = node.next;\n    }\n  }\n}\n\n/////////////\n\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n */\nexport function componentRefresh<T>(directiveIndex: number, elementIndex: number): void {\n  ngDevMode && assertDataInRange(elementIndex);\n  const element = data ![elementIndex] as LElementNode;\n  ngDevMode && assertNodeType(element, LNodeType.Element);\n  ngDevMode && assertNotNull(element.data, `Component's host node should have an LView attached.`);\n  const hostView = element.data !;\n\n  // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n  if (viewAttached(hostView) && hostView.flags & (LViewFlags.CheckAlways | LViewFlags.Dirty)) {\n    ngDevMode && assertDataInRange(directiveIndex, directives !);\n    const def = currentView.tView.directives ![directiveIndex] as ComponentDef<T>;\n\n    detectChangesInternal(\n        hostView, element, def, getDirectiveInstance(directives ![directiveIndex]));\n  }\n}\n\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view: LView): boolean {\n  return (view.flags & LViewFlags.Attached) === LViewFlags.Attached;\n}\n\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nexport function projectionDef(\n    index: number, selectors?: CssSelectorList[], textSelectors?: string[]): void {\n  const noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n  const distributedNodes = new Array<LNode[]>(noOfNodeBuckets);\n  for (let i = 0; i < noOfNodeBuckets; i++) {\n    distributedNodes[i] = [];\n  }\n\n  const componentNode = findComponentHost(currentView);\n  let componentChild = componentNode.child;\n\n  while (componentChild !== null) {\n    // execute selector matching logic if and only if:\n    // - there are selectors defined\n    // - a node has a tag name / attributes that can be matched\n    if (selectors && componentChild.tNode) {\n      const matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors !);\n      distributedNodes[matchedIdx].push(componentChild);\n    } else {\n      distributedNodes[0].push(componentChild);\n    }\n\n    componentChild = componentChild.next;\n  }\n\n  ngDevMode && assertDataNext(index);\n  data[index] = distributedNodes;\n}\n\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(\n    projectionNode: LProjectionNode,\n    appendedFirst: LElementNode | LTextNode | LContainerNode | null,\n    appendedLast: LElementNode | LTextNode | LContainerNode | null) {\n  ngDevMode && assertEqual(\n                   !!appendedFirst, !!appendedLast,\n                   'appendedFirst can be null if and only if appendedLast is also null');\n  if (!appendedLast) {\n    // nothing to append\n    return;\n  }\n  const projectionNodeData = projectionNode.data;\n  if (projectionNodeData.tail) {\n    projectionNodeData.tail.pNextOrParent = appendedFirst;\n  } else {\n    projectionNodeData.head = appendedFirst;\n  }\n  projectionNodeData.tail = appendedLast;\n  appendedLast.pNextOrParent = projectionNode;\n}\n\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex - 0 means <ng-content> without any selector\n * @param attrs - attributes attached to the ng-content node, if present\n */\nexport function projection(\n    nodeIndex: number, localIndex: number, selectorIndex: number = 0, attrs?: string[]): void {\n  const node = createLNode(nodeIndex, LNodeType.Projection, null, {head: null, tail: null});\n\n  if (node.tNode == null) {\n    node.tNode = createTNode(null, attrs || null, null);\n  }\n\n  isParent = false;  // self closing\n  const currentParent = node.parent;\n\n  // re-distribution of projectable nodes is memorized on a component's view level\n  const componentNode = findComponentHost(currentView);\n\n  // make sure that nodes to project were memorized\n  const nodesForSelector = componentNode.data !.data ![localIndex][selectorIndex];\n\n  // build the linked list of projected nodes:\n  for (let i = 0; i < nodesForSelector.length; i++) {\n    const nodeToProject = nodesForSelector[i];\n    if (nodeToProject.type === LNodeType.Projection) {\n      const previouslyProjected = (nodeToProject as LProjectionNode).data;\n      appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n    } else {\n      appendToProjectionNode(\n          node, nodeToProject as LTextNode | LElementNode | LContainerNode,\n          nodeToProject as LTextNode | LElementNode | LContainerNode);\n    }\n  }\n\n  if (canInsertNativeNode(currentParent, currentView)) {\n    ngDevMode && assertNodeType(currentParent, LNodeType.Element);\n    // process each node in the list of projected nodes:\n    let nodeToProject: LNode|null = node.data.head;\n    const lastNodeToProject = node.data.tail;\n    while (nodeToProject) {\n      appendProjectedNode(\n          nodeToProject as LTextNode | LElementNode | LContainerNode, currentParent as LElementNode,\n          currentView);\n      nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n    }\n  }\n}\n\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lView: LView): LElementNode {\n  let viewRootLNode = lView.node;\n  while (viewRootLNode.type === LNodeType.View) {\n    ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n    lView = lView.parent !;\n    viewRootLNode = lView.node;\n  }\n\n  ngDevMode && assertNodeType(viewRootLNode, LNodeType.Element);\n  ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n\n  return viewRootLNode as LElementNode;\n}\n\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param currentView The view where LView or LContainer should be added\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nexport function addToViewTree<T extends LView|LContainer>(currentView: LView, state: T): T {\n  currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n  currentView.tail = state;\n  return state;\n}\n\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n\n/** If node is an OnPush component, marks its LView dirty. */\nexport function markDirtyIfOnPush(node: LElementNode): void {\n  // Because data flows down the component tree, ancestors do not need to be marked dirty\n  if (node.data && !(node.data.flags & LViewFlags.CheckAlways)) {\n    node.data.flags |= LViewFlags.Dirty;\n  }\n}\n\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nexport function wrapListenerWithDirtyLogic(view: LView, listenerFn: (e?: any) => any): (e: Event) =>\n    any {\n  return function(e: any) {\n    markViewDirty(view);\n    return listenerFn(e);\n  };\n}\n\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nexport function wrapListenerWithDirtyAndDefault(\n    view: LView, listenerFn: (e?: any) => any): EventListener {\n  return function wrapListenerIn_markViewDirty(e: Event) {\n    markViewDirty(view);\n    if (listenerFn(e) === false) {\n      e.preventDefault();\n      // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n      e.returnValue = false;\n    }\n  };\n}\n\n/** Marks current view and all ancestors dirty */\nexport function markViewDirty(view: LView): void {\n  let currentView: LView|null = view;\n\n  while (currentView.parent != null) {\n    currentView.flags |= LViewFlags.Dirty;\n    currentView = currentView.parent;\n  }\n  currentView.flags |= LViewFlags.Dirty;\n\n  ngDevMode && assertNotNull(currentView !.context, 'rootContext');\n  scheduleTick(currentView !.context as RootContext);\n}\n\n\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nexport function scheduleTick<T>(rootContext: RootContext) {\n  if (rootContext.clean == _CLEAN_PROMISE) {\n    let res: null|((val: null) => void);\n    rootContext.clean = new Promise<null>((r) => res = r);\n    rootContext.scheduler(() => {\n      tick(rootContext.component);\n      res !(null);\n      rootContext.clean = _CLEAN_PROMISE;\n    });\n  }\n}\n\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nexport function tick<T>(component: T): void {\n  const rootView = getRootView(component);\n  const rootComponent = (rootView.context as RootContext).component;\n  const hostNode = _getComponentHostLElementNode(rootComponent);\n\n  ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n  renderComponentOrTemplate(hostNode, rootView, rootComponent);\n}\n\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\n\nexport function getRootView(component: any): LView {\n  ngDevMode && assertNotNull(component, 'component');\n  const lElementNode = _getComponentHostLElementNode(component);\n  let lView = lElementNode.view;\n  while (lView.parent) {\n    lView = lView.parent;\n  }\n  return lView;\n}\n\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nexport function detectChanges<T>(component: T): void {\n  const hostNode = _getComponentHostLElementNode(component);\n  ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n  const componentIndex = hostNode.tNode !.flags >> TNodeFlags.DirectiveStartingIndexShift;\n  const def = hostNode.view.tView.directives ![componentIndex] as ComponentDef<T>;\n  detectChangesInternal(hostNode.data as LView, hostNode, def, component);\n}\n\n\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nexport function checkNoChanges<T>(component: T): void {\n  checkNoChangesMode = true;\n  try {\n    detectChanges(component);\n  } finally {\n    checkNoChangesMode = false;\n  }\n}\n\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nexport function detectChangesInternal<T>(\n    hostView: LView, hostNode: LElementNode, def: ComponentDef<T>, component: T) {\n  const oldView = enterView(hostView, hostNode);\n  const template = def.template;\n\n  try {\n    template(getRenderFlags(hostView), component);\n    refreshDirectives();\n    refreshDynamicChildren();\n  } finally {\n    leaveView(oldView);\n  }\n}\n\n\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\nexport function markDirty<T>(component: T) {\n  ngDevMode && assertNotNull(component, 'component');\n  const lElementNode = _getComponentHostLElementNode(component);\n  markViewDirty(lElementNode.view);\n}\n\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n\nexport interface NO_CHANGE {\n  // This is a brand that ensures that this type can never match anything else\n  brand: 'NO_CHANGE';\n}\n\n/** A special value which designates that a value has not changed. */\nexport const NO_CHANGE = {} as NO_CHANGE;\n\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n  ngDevMode && assertEqual(\n                   currentView.bindingStartIndex, -1,\n                   'Binding start index should only be set once, when null');\n  ngDevMode && assertEqual(\n                   currentView.bindingIndex, -1,\n                   'Binding index should not yet be set ' + currentView.bindingIndex);\n  currentView.bindingIndex = currentView.bindingStartIndex = data.length;\n}\n\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nexport function bind<T>(value: T | NO_CHANGE): T|NO_CHANGE {\n  if (currentView.bindingStartIndex < 0) {\n    initBindings();\n    return data[currentView.bindingIndex++] = value;\n  }\n\n  const changed: boolean =\n      value !== NO_CHANGE && isDifferent(data[currentView.bindingIndex], value);\n  if (changed) {\n    throwErrorIfNoChangesMode(\n        creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n    data[currentView.bindingIndex] = value;\n  }\n  currentView.bindingIndex++;\n  return changed ? value : NO_CHANGE;\n}\n\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function interpolationV(values: any[]): string|NO_CHANGE {\n  ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n  ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n\n  let different = false;\n\n  for (let i = 1; i < values.length; i += 2) {\n    // Check if bindings (odd indexes) have changed\n    bindingUpdated(values[i]) && (different = true);\n  }\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  // Build the updated content\n  let content = values[0];\n  for (let i = 1; i < values.length; i += 2) {\n    content += stringify(values[i]) + values[i + 1];\n  }\n\n  return content;\n}\n\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nexport function interpolation1(prefix: string, v0: any, suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated(v0);\n\n  return different ? prefix + stringify(v0) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 2 expressions. */\nexport function interpolation2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated2(v0, v1);\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation bindings with 3 expressions. */\nexport function interpolation3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string): string|\n    NO_CHANGE {\n  let different = bindingUpdated2(v0, v1);\n  different = bindingUpdated(v2) || different;\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n                     NO_CHANGE;\n}\n\n/** Create an interpolation binding with 4 expressions. */\nexport function interpolation4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): string|NO_CHANGE {\n  const different = bindingUpdated4(v0, v1, v2, v3);\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n          suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 5 expressions. */\nexport function interpolation5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(v0, v1, v2, v3);\n  different = bindingUpdated(v4) || different;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 6 expressions. */\nexport function interpolation6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(v0, v1, v2, v3);\n  different = bindingUpdated2(v4, v5) || different;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 7 expressions. */\nexport function interpolation7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): string|\n    NO_CHANGE {\n  let different = bindingUpdated4(v0, v1, v2, v3);\n  different = bindingUpdated2(v4, v5) || different;\n  different = bindingUpdated(v6) || different;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 8 expressions. */\nexport function interpolation8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): string|NO_CHANGE {\n  let different = bindingUpdated4(v0, v1, v2, v3);\n  different = bindingUpdated4(v4, v5, v6, v7) || different;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n      NO_CHANGE;\n}\n\n/** Store a value in the `data` at a given `index`. */\nexport function store<T>(index: number, value: T): void {\n  // We don't store any static data for local variables, so the first time\n  // we see the template, we should store as null to avoid a sparse array\n  if (index >= tData.length) {\n    tData[index] = null;\n  }\n  data[index] = value;\n}\n\n/** Retrieves a value from the `data`. */\nexport function load<T>(index: number): T {\n  ngDevMode && assertDataInRange(index);\n  return data[index];\n}\n\n/** Retrieves a value from the `directives` array. */\nexport function loadDirective<T>(index: number): T {\n  ngDevMode && assertNotNull(directives, 'Directives array should be defined if reading a dir.');\n  ngDevMode && assertDataInRange(index, directives !);\n  return directives ![index];\n}\n\n/** Gets the current binding value and increments the binding index. */\nexport function consumeBinding(): any {\n  ngDevMode && assertDataInRange(currentView.bindingIndex);\n  ngDevMode &&\n      assertNotEqual(\n          data[currentView.bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n  return data[currentView.bindingIndex++];\n}\n\n/** Updates binding if changed, then returns whether it was updated. */\nexport function bindingUpdated(value: any): boolean {\n  ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n\n  if (currentView.bindingStartIndex < 0) {\n    initBindings();\n  } else if (isDifferent(data[currentView.bindingIndex], value)) {\n    throwErrorIfNoChangesMode(\n        creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n  } else {\n    currentView.bindingIndex++;\n    return false;\n  }\n\n  data[currentView.bindingIndex++] = value;\n  return true;\n}\n\n/** Updates binding if changed, then returns the latest value. */\nexport function checkAndUpdateBinding(value: any): any {\n  bindingUpdated(value);\n  return value;\n}\n\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nexport function bindingUpdated2(exp1: any, exp2: any): boolean {\n  const different = bindingUpdated(exp1);\n  return bindingUpdated(exp2) || different;\n}\n\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated4(exp1: any, exp2: any, exp3: any, exp4: any): boolean {\n  const different = bindingUpdated2(exp1, exp2);\n  return bindingUpdated2(exp3, exp4) || different;\n}\n\nexport function getTView(): TView {\n  return currentView.tView;\n}\n\nexport function getDirectiveInstance<T>(instanceOrArray: T | [T]): T {\n  // Directives with content queries store an array in directives[directiveIndex]\n  // with the instance as the first index\n  return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\n\nexport function assertPreviousIsParent() {\n  assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\n\nfunction assertHasParent() {\n  assertNotNull(previousOrParentNode.parent, 'previousOrParentNode should have a parent');\n}\n\nfunction assertDataInRange(index: number, arr?: any[]) {\n  if (arr == null) arr = data;\n  assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n\nfunction assertDataNext(index: number, arr?: any[]) {\n  if (arr == null) arr = data;\n  assertEqual(\n      arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\n\nexport function _getComponentHostLElementNode<T>(component: T): LElementNode {\n  ngDevMode && assertNotNull(component, 'expecting component got null');\n  const lElementNode = (component as any)[NG_HOST_SYMBOL] as LElementNode;\n  ngDevMode && assertNotNull(component, 'object is not a component');\n  return lElementNode;\n}\n\nexport const CLEAN_PROMISE = _CLEAN_PROMISE;\nexport const ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef} from '../linker/view_ref';\n\nimport {checkNoChanges, detectChanges, markViewDirty} from './instructions';\nimport {ComponentTemplate} from './interfaces/definition';\nimport {LViewNode} from './interfaces/node';\nimport {LView, LViewFlags} from './interfaces/view';\nimport {notImplemented} from './util';\n\nexport class ViewRef<T> implements viewEngine_EmbeddedViewRef<T> {\n  context: T;\n  rootNodes: any[];\n\n  constructor(private _view: LView, context: T|null, ) { this.context = context !; }\n\n  /** @internal */\n  _setComponentContext(view: LView, context: T) {\n    this._view = view;\n    this.context = context;\n  }\n\n  destroy(): void { notImplemented(); }\n  destroyed: boolean;\n  onDestroy(callback: Function) { notImplemented(); }\n\n  /**\n   * Marks a view and all of its ancestors dirty.\n   *\n   * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n   * multiple `markForCheck` calls to into one change detection run.\n   *\n   * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n   * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n   * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'my-app',\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   * })\n   * class AppComponent {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   * ```\n   */\n  markForCheck(): void { markViewDirty(this._view); }\n\n  /**\n   * Detaches the view from the change detection tree.\n   *\n   * Detached views will not be checked during change detection runs until they are\n   * re-attached, even if they are dirty. `detach` can be used in combination with\n   * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  detach(): void { this._view.flags &= ~LViewFlags.Attached; }\n\n  /**\n   * Re-attaches a view to the change detection tree.\n   *\n   * This can be used to re-attach views that were previously detached from the tree\n   * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'my-app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class AppComponent {\n   *   live = true;\n   * }\n   * ```\n   */\n  reattach(): void { this._view.flags |= LViewFlags.Attached; }\n\n  /**\n   * Checks the view and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n   * local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach detach} for more information.\n   */\n  detectChanges(): void { detectChanges(this.context); }\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't\n   * introduce other changes.\n   */\n  checkNoChanges(): void { checkNoChanges(this.context); }\n}\n\n\nexport class EmbeddedViewRef<T> extends ViewRef<T> {\n  /**\n   * @internal\n   */\n  _lViewNode: LViewNode;\n\n  constructor(viewNode: LViewNode, template: ComponentTemplate<T>, context: T) {\n    super(viewNode.data, context);\n    this._lViewNode = viewNode;\n  }\n}\n\n/**\n * Creates a ViewRef bundled with destroy functionality.\n *\n * @param context The context for this view\n * @returns The ViewRef\n */\nexport function createViewRef<T>(view: LView | null, context: T): ViewRef<T> {\n  // TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges\n  return addDestroyable(new ViewRef(view !, context));\n}\n\n/** Interface for destroy logic. Implemented by addDestroyable. */\nexport interface DestroyRef<T> {\n  /** Whether or not this object has been destroyed */\n  destroyed: boolean;\n  /** Destroy the instance and call all onDestroy callbacks. */\n  destroy(): void;\n  /** Register callbacks that should be called onDestroy */\n  onDestroy(cb: Function): void;\n}\n\n/**\n * Decorates an object with destroy logic (implementing the DestroyRef interface)\n * and returns the enhanced object.\n *\n * @param obj The object to decorate\n * @returns The object with destroy logic\n */\nexport function addDestroyable<T, C>(obj: any): T&DestroyRef<C> {\n  let destroyFn: Function[]|null = null;\n  obj.destroyed = false;\n  obj.destroy = function() {\n    destroyFn && destroyFn.forEach((fn) => fn());\n    this.destroyed = true;\n  };\n  obj.onDestroy = (fn: Function) => (destroyFn || (destroyFn = [])).push(fn);\n  return obj;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Type} from '../core';\nimport {Injector} from '../di/injector';\nimport {ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\n\nimport {assertComponentType, assertNotNull} from './assert';\nimport {queueInitHooks, queueLifecycleHooks} from './hooks';\nimport {CLEAN_PROMISE, ROOT_DIRECTIVE_INDICES, _getComponentHostLElementNode, baseDirectiveCreate, createLView, createTView, detectChangesInternal, enterView, executeInitAndContentHooks, getRootView, hostElement, initChangeDetectorIfExisting, leaveView, locateHostElement, setHostBindings} from './instructions';\nimport {ComponentDef, ComponentType} from './interfaces/definition';\nimport {LElementNode, TNodeFlags} from './interfaces/node';\nimport {RElement, RendererFactory3, domRendererFactory3} from './interfaces/renderer';\nimport {LView, LViewFlags, RootContext} from './interfaces/view';\nimport {stringify} from './util';\nimport {createViewRef} from './view_ref';\n\n\n\n/** Options that control how the component should be bootstrapped. */\nexport interface CreateComponentOptions {\n  /** Which renderer factory to use. */\n  rendererFactory?: RendererFactory3;\n\n  /**\n   * Host element on which the component will be bootstrapped. If not specified,\n   * the component definition's `tag` is used to query the existing DOM for the\n   * element to bootstrap.\n   */\n  host?: RElement|string;\n\n  /** Module injector for the component. If unspecified, the injector will be NULL_INJECTOR. */\n  injector?: Injector;\n\n  /**\n   * List of features to be applied to the created component. Features are simply\n   * functions that decorate a component with a certain behavior.\n   *\n   * Typically, the features in this list are features that cannot be added to the\n   * other features list in the component definition because they rely on other factors.\n   *\n   * Example: `RootLifecycleHooks` is a function that adds lifecycle hook capabilities\n   * to root components in a tree-shakable way. It cannot be added to the component\n   * features list because there's no way of knowing when the component will be used as\n   * a root component.\n   */\n  hostFeatures?: (<T>(component: T, componentDef: ComponentDef<T>) => void)[];\n\n  /**\n   * A function which is used to schedule change detection work in the future.\n   *\n   * When marking components as dirty, it is necessary to schedule the work of\n   * change detection in the future. This is done to coalesce multiple\n   * {@link markDirty} calls into a single changed detection processing.\n   *\n   * The default value of the scheduler is the `requestAnimationFrame` function.\n   *\n   * It is also useful to override this function for testing purposes.\n   */\n  scheduler?: (work: () => void) => void;\n}\n\n\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nexport function createComponentRef<T>(\n    componentType: ComponentType<T>, opts: CreateComponentOptions): viewEngine_ComponentRef<T> {\n  const component = renderComponent(componentType, opts);\n  const hostView = _getComponentHostLElementNode(component).data as LView;\n  const hostViewRef = createViewRef(hostView, component);\n  return {\n    location: {nativeElement: getHostElement(component)},\n    injector: opts.injector || NULL_INJECTOR,\n    instance: component,\n    hostView: hostViewRef,\n    changeDetectorRef: hostViewRef,\n    componentType: componentType,\n    // TODO: implement destroy and onDestroy\n    destroy: () => {},\n    onDestroy: (cb: Function) => {}\n  };\n}\n\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\nexport const NULL_INJECTOR: Injector = {\n  get: (token: any, notFoundValue?: any) => {\n    throw new Error('NullInjector: Not found: ' + stringify(token));\n  }\n};\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nexport function renderComponent<T>(\n    componentType: ComponentType<T>|\n        Type<T>/* Type as workaround for: Microsoft/TypeScript/issues/4881 */\n    ,\n    opts: CreateComponentOptions = {}): T {\n  ngDevMode && assertComponentType(componentType);\n  const rendererFactory = opts.rendererFactory || domRendererFactory3;\n  const componentDef = (componentType as ComponentType<T>).ngComponentDef as ComponentDef<T>;\n  if (componentDef.type != componentType) componentDef.type = componentType;\n  let component: T;\n  // The first index of the first selector is the tag name.\n  const componentTag = componentDef.selectors ![0] ![0] as string;\n  const hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n  const rootContext: RootContext = {\n    // Incomplete initialization due to circular reference.\n    component: null !,\n    scheduler: opts.scheduler || requestAnimationFrame.bind(window),\n    clean: CLEAN_PROMISE,\n  };\n  const rootView: LView = createLView(\n      -1, rendererFactory.createRenderer(hostNode, componentDef.rendererType),\n      createTView(null, null), null, rootContext,\n      componentDef.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways);\n  rootView.injector = opts.injector || null;\n\n  const oldView = enterView(rootView, null !);\n  let elementNode: LElementNode;\n  try {\n    if (rendererFactory.begin) rendererFactory.begin();\n\n    // Create element node at index 0 in data array\n    elementNode = hostElement(componentTag, hostNode, componentDef);\n\n    // Create directive instance with factory() and store at index 0 in directives array\n    component = rootContext.component =\n        baseDirectiveCreate(0, componentDef.factory(), componentDef) as T;\n    initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data !);\n\n    opts.hostFeatures && opts.hostFeatures.forEach((feature) => feature(component, componentDef));\n\n    executeInitAndContentHooks();\n    setHostBindings(ROOT_DIRECTIVE_INDICES);\n    detectChangesInternal(elementNode.data as LView, elementNode, componentDef, component);\n  } finally {\n    leaveView(oldView);\n    if (rendererFactory.end) rendererFactory.end();\n  }\n\n  return component;\n}\n\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nexport function LifecycleHooksFeature(component: any, def: ComponentDef<any>): void {\n  const elementNode = _getComponentHostLElementNode(component);\n\n  // Root component is always created at dir index 0\n  queueInitHooks(0, def.onInit, def.doCheck, elementNode.view.tView);\n  queueLifecycleHooks(elementNode.tNode !.flags, elementNode.view);\n}\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component: any): RootContext {\n  const rootContext = getRootView(component).context as RootContext;\n  ngDevMode && assertNotNull(rootContext, 'rootContext');\n  return rootContext;\n}\n\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\nexport function getHostElement<T>(component: T): HTMLElement {\n  return _getComponentHostLElementNode(component).native as any;\n}\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\nexport function getRenderedText(component: any): string {\n  const hostElement = getHostElement(component);\n  return hostElement.textContent || '';\n}\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component: any): Promise<null> {\n  return getRootContext(component).clean;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {ChangeDetectorRef as viewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {InjectFlags, Injector, inject, setCurrentInjector} from '../di/injector';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\nimport {ElementRef as viewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef as viewEngine_TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef as viewEngine_ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, ViewRef as viewEngine_ViewRef} from '../linker/view_ref';\nimport {Type} from '../type';\n\nimport {assertGreaterThan, assertLessThan, assertNotNull} from './assert';\nimport {addToViewTree, assertPreviousIsParent, createLContainer, createLNodeObject, getDirectiveInstance, getPreviousOrParentNode, getRenderer, isComponent, renderEmbeddedTemplate, resolveDirective} from './instructions';\nimport {ComponentTemplate, DirectiveDef, DirectiveDefList, PipeDefList} from './interfaces/definition';\nimport {LInjector} from './interfaces/injector';\nimport {LContainerNode, LElementNode, LNode, LNodeType, LViewNode, TNodeFlags} from './interfaces/node';\nimport {QueryReadType} from './interfaces/query';\nimport {Renderer3} from './interfaces/renderer';\nimport {LView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes, assertNodeType} from './node_assert';\nimport {insertView, removeView} from './node_manipulation';\nimport {notImplemented, stringify} from './util';\nimport {EmbeddedViewRef, ViewRef, addDestroyable, createViewRef} from './view_ref';\n\n\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nconst NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nconst BLOOM_SIZE = 256;\n\n/** Counter used to generate unique IDs for directives. */\nlet nextNgElementId = 0;\n\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nexport function bloomAdd(injector: LInjector, type: Type<any>): void {\n  let id: number|undefined = (type as any)[NG_ELEMENT_ID];\n\n  // Set a unique ID on the directive type, so if something tries to inject the directive,\n  // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n  if (id == null) {\n    id = (type as any)[NG_ELEMENT_ID] = nextNgElementId++;\n  }\n\n  // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n  // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n  // This means that after 255, some directives will share slots, leading to some false positives\n  // when checking for a directive's presence.\n  const bloomBit = id % BLOOM_SIZE;\n\n  // Create a mask that targets the specific bit associated with the directive.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomBit;\n\n  // Use the raw bloomBit number to determine which bloom filter bucket we should check\n  // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n  if (bloomBit < 128) {\n    // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n    bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                    (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n  } else {\n    bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                     (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n  }\n}\n\nexport function getOrCreateNodeInjector(): LInjector {\n  ngDevMode && assertPreviousIsParent();\n  return getOrCreateNodeInjectorForNode(getPreviousOrParentNode() as LElementNode | LContainerNode);\n}\n\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nexport function getOrCreateNodeInjectorForNode(node: LElementNode | LContainerNode): LInjector {\n  const nodeInjector = node.nodeInjector;\n  const parentInjector = node.parent && node.parent.nodeInjector;\n  if (nodeInjector != parentInjector) {\n    return nodeInjector !;\n  }\n  return node.nodeInjector = {\n    parent: parentInjector,\n    node: node,\n    bf0: 0,\n    bf1: 0,\n    bf2: 0,\n    bf3: 0,\n    bf4: 0,\n    bf5: 0,\n    bf6: 0,\n    bf7: 0,\n    cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n    cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n    cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n    cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n    cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n    cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n    cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n    cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n    templateRef: null,\n    viewContainerRef: null,\n    elementRef: null,\n    changeDetectorRef: null\n  };\n}\n\n\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nexport function diPublicInInjector(di: LInjector, def: DirectiveDef<any>): void {\n  bloomAdd(di, def.type);\n}\n\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nexport function diPublic(def: DirectiveDef<any>): void {\n  diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n\n/**\n * Searches for an instance of the given type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(directiveInject(DirectiveA))\n *   });\n * }\n *\n * NOTE: use `directiveInject` with `@Directive`, `@Component`, and `@Pipe`. For\n * all other injection use `inject` which does not walk the DOM render tree.\n *\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nexport function directiveInject<T>(token: Type<T>): T;\nexport function directiveInject<T>(token: Type<T>, flags?: InjectFlags): T|null;\nexport function directiveInject<T>(token: Type<T>, flags = InjectFlags.Default): T|null {\n  return getOrCreateInjectable<T>(getOrCreateNodeInjector(), token, flags);\n}\n\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\nexport function injectElementRef(): viewEngine_ElementRef {\n  return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nexport function injectTemplateRef<T>(): viewEngine_TemplateRef<T> {\n  return getOrCreateTemplateRef<T>(getOrCreateNodeInjector());\n}\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef(): viewEngine_ViewContainerRef {\n  return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nexport function injectChangeDetectorRef(): viewEngine_ChangeDetectorRef {\n  return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nexport function injectAttribute(attrName: string): string|undefined {\n  ngDevMode && assertPreviousIsParent();\n  const lElement = getPreviousOrParentNode() as LElementNode;\n  ngDevMode && assertNodeType(lElement, LNodeType.Element);\n  const tElement = lElement.tNode !;\n  ngDevMode && assertNotNull(tElement, 'expecting tNode');\n  const attrs = tElement.attrs;\n  if (attrs) {\n    for (let i = 0; i < attrs.length; i = i + 2) {\n      if (attrs[i] == attrName) {\n        return attrs[i + 1];\n      }\n    }\n  }\n  return undefined;\n}\n\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nexport function getOrCreateChangeDetectorRef(\n    di: LInjector, context: any): viewEngine_ChangeDetectorRef {\n  if (di.changeDetectorRef) return di.changeDetectorRef;\n\n  const currentNode = di.node;\n  if (isComponent(currentNode.tNode !)) {\n    return di.changeDetectorRef = createViewRef(currentNode.data as LView, context);\n  } else if (currentNode.type === LNodeType.Element) {\n    return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n  }\n  return null !;\n}\n\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode: LViewNode | LElementNode):\n    viewEngine_ChangeDetectorRef {\n  const hostNode = getClosestComponentAncestor(currentNode);\n  const hostInjector = hostNode.nodeInjector;\n  const existingRef = hostInjector && hostInjector.changeDetectorRef;\n\n  return existingRef ?\n      existingRef :\n      createViewRef(\n          hostNode.data as LView,\n          hostNode.view\n              .directives ![hostNode.tNode !.flags >> TNodeFlags.DirectiveStartingIndexShift]);\n}\n\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node: LViewNode | LElementNode): LElementNode {\n  while (node.type === LNodeType.View) {\n    node = node.view.node;\n  }\n  return node as LElementNode;\n}\n\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nexport function getOrCreateInjectable<T>(di: LInjector, token: Type<T>, flags?: InjectFlags): T|\n    null {\n  const bloomHash = bloomHashBit(token);\n\n  // If the token has a bloom hash, then it is a directive that is public to the injection system\n  // (diPublic). If there is no hash, fall back to the module injector.\n  if (bloomHash === null) {\n    const moduleInjector = getPreviousOrParentNode().view.injector;\n    const formerInjector = setCurrentInjector(moduleInjector);\n    try {\n      return inject(token, flags);\n    } finally {\n      setCurrentInjector(formerInjector);\n    }\n  } else {\n    let injector: LInjector|null = di;\n\n    while (injector) {\n      // Get the closest potential matching injector (upwards in the injector tree) that\n      // *potentially* has the token.\n      injector = bloomFindPossibleInjector(injector, bloomHash);\n\n      // If no injector is found, we *know* that there is no ancestor injector that contains the\n      // token, so we abort.\n      if (!injector) {\n        break;\n      }\n\n      // At this point, we have an injector which *may* contain the token, so we step through the\n      // directives associated with the injector's corresponding node to get the directive instance.\n      const node = injector.node;\n      const flags = node.tNode !.flags;\n      const count = flags & TNodeFlags.DirectiveCountMask;\n\n      if (count !== 0) {\n        const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n        const end = start + count;\n        const defs = node.view.tView.directives !;\n\n        for (let i = start; i < end; i++) {\n          // Get the definition for the directive at this index and, if it is injectable (diPublic),\n          // and matches the given token, return the directive instance.\n          const directiveDef = defs[i] as DirectiveDef<any>;\n          if (directiveDef.type === token && directiveDef.diPublic) {\n            return getDirectiveInstance(node.view.directives ![i]);\n          }\n        }\n      }\n\n      // If we *didn't* find the directive for the token and we are searching the current node's\n      // injector, it's possible the directive is on this node and hasn't been created yet.\n      let instance: T|null;\n      if (injector === di && (instance = searchMatchesQueuedForCreation<T>(node, token))) {\n        return instance;\n      }\n\n      // The def wasn't found anywhere on this node, so it might be a false positive.\n      // Traverse up the tree and continue searching.\n      injector = injector.parent;\n    }\n  }\n\n  // No directive was found for the given token.\n  // TODO: implement optional, check-self, and check-parent.\n  throw new Error('Implement');\n}\n\nfunction searchMatchesQueuedForCreation<T>(node: LNode, token: any): T|null {\n  const matches = node.view.tView.currentMatches;\n  if (matches) {\n    for (let i = 0; i < matches.length; i += 2) {\n      const def = matches[i] as DirectiveDef<any>;\n      if (def.type === token) {\n        return resolveDirective(def, i + 1, matches, node.view.tView);\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type: Type<any>): number|null {\n  let id: number|undefined = (type as any)[NG_ELEMENT_ID];\n  return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @returns An injector that might have the directive\n */\nexport function bloomFindPossibleInjector(startInjector: LInjector, bloomBit: number): LInjector|\n    null {\n  // Create a mask that targets the specific bit associated with the directive we're looking for.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomBit;\n\n  // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n  // match.\n  let injector: LInjector|null = startInjector;\n  while (injector) {\n    // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n    // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n    // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n    let value: number;\n    if (bloomBit < 128) {\n      value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                              (bloomBit < 96 ? injector.bf2 : injector.bf3);\n    } else {\n      value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                               (bloomBit < 224 ? injector.bf6 : injector.bf7);\n    }\n\n    // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n    // this injector is a potential match.\n    if ((value & mask) === mask) {\n      return injector;\n    }\n\n    // If the current injector does not have the directive, check the bloom filters for the ancestor\n    // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n    if (bloomBit < 128) {\n      value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                              (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n    } else {\n      value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                               (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n    }\n\n    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n    // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n    injector = (value & mask) ? injector.parent : null;\n  }\n  return null;\n}\n\nexport class ReadFromInjectorFn<T> {\n  constructor(readonly read: (injector: LInjector, node: LNode, directiveIndex?: number) => T) {}\n}\n\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nexport function getOrCreateElementRef(di: LInjector): viewEngine_ElementRef {\n  return di.elementRef || (di.elementRef = new ElementRef(\n                               di.node.type === LNodeType.Container ? null : di.node.native));\n}\n\nexport const QUERY_READ_TEMPLATE_REF = <QueryReadType<viewEngine_TemplateRef<any>>>(\n    new ReadFromInjectorFn<viewEngine_TemplateRef<any>>(\n        (injector: LInjector) => getOrCreateTemplateRef(injector)) as any);\n\nexport const QUERY_READ_CONTAINER_REF = <QueryReadType<viewEngine_ViewContainerRef>>(\n    new ReadFromInjectorFn<viewEngine_ViewContainerRef>(\n        (injector: LInjector) => getOrCreateContainerRef(injector)) as any);\n\nexport const QUERY_READ_ELEMENT_REF =\n    <QueryReadType<viewEngine_ElementRef>>(new ReadFromInjectorFn<viewEngine_ElementRef>(\n        (injector: LInjector) => getOrCreateElementRef(injector)) as any);\n\nexport const QUERY_READ_FROM_NODE =\n    (new ReadFromInjectorFn<any>((injector: LInjector, node: LNode, directiveIdx: number) => {\n      ngDevMode && assertNodeOfPossibleTypes(node, LNodeType.Container, LNodeType.Element);\n      if (directiveIdx > -1) {\n        return node.view.directives ![directiveIdx];\n      } else if (node.type === LNodeType.Element) {\n        return getOrCreateElementRef(injector);\n      } else if (node.type === LNodeType.Container) {\n        return getOrCreateTemplateRef(injector);\n      }\n      throw new Error('fail');\n    }) as any as QueryReadType<any>);\n\n/** A ref to a node's native element. */\nclass ElementRef implements viewEngine_ElementRef {\n  readonly nativeElement: any;\n  constructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nexport function getOrCreateContainerRef(di: LInjector): viewEngine_ViewContainerRef {\n  if (!di.viewContainerRef) {\n    const vcRefHost = di.node;\n\n    ngDevMode && assertNodeOfPossibleTypes(vcRefHost, LNodeType.Container, LNodeType.Element);\n\n    const lContainer = createLContainer(vcRefHost.parent !, vcRefHost.view);\n    const lContainerNode: LContainerNode = createLNodeObject(\n        LNodeType.Container, vcRefHost.view, vcRefHost.parent !, undefined, lContainer, null);\n\n    vcRefHost.dynamicLContainerNode = lContainerNode;\n\n    addToViewTree(vcRefHost.view, lContainer);\n\n    di.viewContainerRef = new ViewContainerRef(lContainerNode);\n  }\n\n  return di.viewContainerRef;\n}\n\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nclass ViewContainerRef implements viewEngine_ViewContainerRef {\n  private _viewRefs: viewEngine_ViewRef[] = [];\n  element: viewEngine_ElementRef;\n  injector: Injector;\n  parentInjector: Injector;\n\n  constructor(private _lContainerNode: LContainerNode) {}\n\n  clear(): void {\n    const lContainer = this._lContainerNode.data;\n    while (lContainer.views.length) {\n      this.remove(0);\n    }\n  }\n\n  get(index: number): viewEngine_ViewRef|null { return this._viewRefs[index] || null; }\n\n  get length(): number {\n    const lContainer = this._lContainerNode.data;\n    return lContainer.views.length;\n  }\n\n  createEmbeddedView<C>(templateRef: viewEngine_TemplateRef<C>, context?: C, index?: number):\n      viewEngine_EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: viewEngine_ComponentFactory<C>, index?: number|undefined,\n      injector?: Injector|undefined, projectableNodes?: any[][]|undefined,\n      ngModule?: viewEngine_NgModuleRef<any>|undefined): viewEngine_ComponentRef<C> {\n    throw notImplemented();\n  }\n\n  insert(viewRef: viewEngine_ViewRef, index?: number): viewEngine_ViewRef {\n    const lViewNode = (viewRef as EmbeddedViewRef<any>)._lViewNode;\n    const adjustedIdx = this._adjustIndex(index);\n\n    insertView(this._lContainerNode, lViewNode, adjustedIdx);\n    // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n    // instruction)\n    this._lContainerNode.native = undefined;\n\n    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n\n    (lViewNode as{parent: LNode}).parent = this._lContainerNode;\n\n    // If the view is dynamic (has a template), it needs to be counted both at the container\n    // level and at the node above the container.\n    if (lViewNode.data.template !== null) {\n      // Increment the container view count.\n      this._lContainerNode.data.dynamicViewCount++;\n\n      // Look for the parent node and increment its dynamic view count.\n      if (this._lContainerNode.parent !== null && this._lContainerNode.parent.data !== null) {\n        ngDevMode && assertNodeOfPossibleTypes(\n                         this._lContainerNode.parent, LNodeType.View, LNodeType.Element);\n        this._lContainerNode.parent.data.dynamicViewCount++;\n      }\n    }\n    return viewRef;\n  }\n\n  move(viewRef: viewEngine_ViewRef, newIndex: number): viewEngine_ViewRef {\n    const index = this.indexOf(viewRef);\n    this.detach(index);\n    this.insert(viewRef, this._adjustIndex(newIndex));\n    return viewRef;\n  }\n\n  indexOf(viewRef: viewEngine_ViewRef): number { return this._viewRefs.indexOf(viewRef); }\n\n  remove(index?: number): void {\n    this.detach(index);\n    // TODO(ml): proper destroy of the ViewRef, i.e. recursively destroy the LviewNode and its\n    // children, delete DOM nodes and QueryList, trigger hooks (onDestroy), destroy the renderer,\n    // detach projected nodes\n  }\n\n  detach(index?: number): viewEngine_ViewRef|null {\n    const adjustedIdx = this._adjustIndex(index, -1);\n    removeView(this._lContainerNode, adjustedIdx);\n    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n  }\n\n  private _adjustIndex(index?: number, shift: number = 0) {\n    if (index == null) {\n      return this._lContainerNode.data.views.length + shift;\n    }\n    if (ngDevMode) {\n      assertGreaterThan(index, -1, 'index must be positive');\n      // +1 because it's legal to insert at the end.\n      assertLessThan(index, this._lContainerNode.data.views.length + 1 + shift, 'index');\n    }\n    return index;\n  }\n}\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nexport function getOrCreateTemplateRef<T>(di: LInjector): viewEngine_TemplateRef<T> {\n  ngDevMode && assertNodeType(di.node, LNodeType.Container);\n  const data = (di.node as LContainerNode).data;\n  const tView = di.node.view.tView;\n  return di.templateRef || (di.templateRef = new TemplateRef<any>(\n                                getOrCreateElementRef(di), data.template !, getRenderer(),\n                                tView.directiveRegistry, tView.pipeRegistry));\n}\n\nclass TemplateRef<T> implements viewEngine_TemplateRef<T> {\n  readonly elementRef: viewEngine_ElementRef;\n  private _template: ComponentTemplate<T>;\n\n  constructor(\n      elementRef: viewEngine_ElementRef, template: ComponentTemplate<T>,\n      private _renderer: Renderer3, private _directives: DirectiveDefList|null,\n      private _pipes: PipeDefList|null) {\n    this.elementRef = elementRef;\n    this._template = template;\n  }\n\n  createEmbeddedView(context: T): viewEngine_EmbeddedViewRef<T> {\n    const viewNode = renderEmbeddedTemplate(\n        null, this._template, context, this._renderer, this._directives, this._pipes);\n    return addDestroyable(new EmbeddedViewRef(viewNode, this._template, context));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../change_detection/change_detection_util';\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {PipeTransform} from '../change_detection/pipe_transform';\nimport {Provider} from '../core';\nimport {OnChanges, SimpleChanges} from '../metadata/lifecycle_hooks';\nimport {RendererType2} from '../render/api';\nimport {Type} from '../type';\nimport {resolveRendererType2} from '../view/util';\n\nimport {diPublic} from './di';\nimport {ComponentDef, ComponentDefFeature, ComponentTemplate, ComponentType, DirectiveDef, DirectiveDefFeature, DirectiveDefListOrFactory, DirectiveType, DirectiveTypesOrFactory, PipeDef, PipeType, PipeTypesOrFactory} from './interfaces/definition';\nimport {CssSelectorList, SelectorFlags} from './interfaces/projection';\n\n\n\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nexport function defineComponent<T>(componentDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this component. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: () => T | ({0: T} & any[]); /* trying to say T | [T, ...any] */\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  inputs?: {[P in keyof T]?: string};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: (directiveIndex: number, elementIndex: number) => void;\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n\n  /**\n   * Template function use for rendering DOM.\n   *\n   * This function has following structure.\n   *\n   * ```\n   * function Template<T>(ctx:T, creationMode: boolean) {\n   *   if (creationMode) {\n   *     // Contains creation mode instructions.\n   *   }\n   *   // Contains binding update instructions\n   * }\n   * ```\n   *\n   * Common instructions are:\n   * Creation mode instructions:\n   *  - `elementStart`, `elementEnd`\n   *  - `text`\n   *  - `container`\n   *  - `listener`\n   *\n   * Binding update instructions:\n   * - `bind`\n   * - `elementAttribute`\n   * - `elementProperty`\n   * - `elementClass`\n   * - `elementStyle`\n   *\n   */\n  template: ComponentTemplate<T>;\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link PublicFeature}\n   */\n  features?: ComponentDefFeature[];\n\n  rendererType?: RendererType2;\n\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * Registry of directives and components that may be found in this component's view.\n   *\n   * The property is either an array of `DirectiveDef`s or a function which returns the array of\n   * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n   */\n  directives?: DirectiveTypesOrFactory | null;\n\n  /**\n   * Registry of pipes that may be found in this component's view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   */\n  pipes?: PipeTypesOrFactory | null;\n}): never {\n  const type = componentDefinition.type;\n  const pipeTypes = componentDefinition.pipes !;\n  const directiveTypes = componentDefinition.directives !;\n  const def = <ComponentDef<any>>{\n    type: type,\n    diPublic: null,\n    factory: componentDefinition.factory,\n    template: componentDefinition.template || null !,\n    hostBindings: componentDefinition.hostBindings || null,\n    attributes: componentDefinition.attributes || null,\n    inputs: invertObject(componentDefinition.inputs),\n    outputs: invertObject(componentDefinition.outputs),\n    rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n    exportAs: componentDefinition.exportAs,\n    onInit: type.prototype.ngOnInit || null,\n    doCheck: type.prototype.ngDoCheck || null,\n    afterContentInit: type.prototype.ngAfterContentInit || null,\n    afterContentChecked: type.prototype.ngAfterContentChecked || null,\n    afterViewInit: type.prototype.ngAfterViewInit || null,\n    afterViewChecked: type.prototype.ngAfterViewChecked || null,\n    onDestroy: type.prototype.ngOnDestroy || null,\n    onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n    directiveDefs: directiveTypes ?\n        () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                  .map(extractDirectiveDef) :\n        null,\n    pipeDefs: pipeTypes ?\n        () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n        null,\n    selectors: componentDefinition.selectors\n  };\n  const feature = componentDefinition.features;\n  feature && feature.forEach((fn) => fn(def));\n  return def as never;\n}\n\nexport function extractDirectiveDef(type: DirectiveType<any>& ComponentType<any>):\n    DirectiveDef<any>|ComponentDef<any> {\n  const def = type.ngComponentDef || type.ngDirectiveDef;\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n  }\n  return def;\n}\n\nexport function extractPipeDef(type: PipeType<any>): PipeDef<any> {\n  const def = type.ngPipeDef;\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is not a 'PipeType'.`);\n  }\n  return def;\n}\n\n\n\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n\ntype OnChangesExpando = OnChanges & {\n  __ngOnChanges_: SimpleChanges|null|undefined;\n  [key: string]: any;\n};\n\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nexport function NgOnChangesFeature(inputPropertyNames?: {[key: string]: string}):\n    DirectiveDefFeature {\n  return function(definition: DirectiveDef<any>): void {\n    const inputs = definition.inputs;\n    const proto = definition.type.prototype;\n    // Place where we will store SimpleChanges if there is a change\n    Object.defineProperty(proto, PRIVATE_PREFIX, {value: undefined, writable: true});\n    for (let pubKey in inputs) {\n      const minKey = inputs[pubKey];\n      const propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n      const privateMinKey = PRIVATE_PREFIX + minKey;\n      // Create a place where the actual value will be stored and make it non-enumerable\n      Object.defineProperty(proto, privateMinKey, {value: undefined, writable: true});\n\n      const existingDesc = Object.getOwnPropertyDescriptor(proto, minKey);\n\n      // create a getter and setter for property\n      Object.defineProperty(proto, minKey, {\n        get: function(this: OnChangesExpando) {\n          return (existingDesc && existingDesc.get) ? existingDesc.get.call(this) :\n                                                      this[privateMinKey];\n        },\n        set: function(this: OnChangesExpando, value: any) {\n          let simpleChanges = this[PRIVATE_PREFIX];\n          let isFirstChange = simpleChanges === undefined;\n          if (simpleChanges == null) {\n            simpleChanges = this[PRIVATE_PREFIX] = {};\n          }\n          simpleChanges[propertyName] = new SimpleChange(this[privateMinKey], value, isFirstChange);\n          (existingDesc && existingDesc.set) ? existingDesc.set.call(this, value) :\n                                               this[privateMinKey] = value;\n        }\n      });\n    }\n\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n      definition.onInit = onChangesWrapper(definition.onInit);\n    }\n\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n  };\n\n  function onChangesWrapper(delegateHook: (() => void) | null) {\n    return function(this: OnChangesExpando) {\n      let simpleChanges = this[PRIVATE_PREFIX];\n      if (simpleChanges != null) {\n        this.ngOnChanges(simpleChanges);\n        this[PRIVATE_PREFIX] = null;\n      }\n      delegateHook && delegateHook.apply(this);\n    };\n  }\n}\n\n\nexport function PublicFeature<T>(definition: DirectiveDef<T>) {\n  definition.diPublic = diPublic;\n}\n\nconst EMPTY = {};\n\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj: any): any {\n  if (obj == null) return EMPTY;\n  const newObj: any = {};\n  for (let minifiedKey in obj) {\n    newObj[obj[minifiedKey]] = minifiedKey;\n  }\n  return newObj;\n}\n\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nexport const defineDirective = defineComponent as any as<T>(directiveDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this directive. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: () => T | ({0: T} & any[]); /* trying to say T | [T, ...any] */\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  inputs?: {[P in keyof T]?: string};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link PublicFeature}\n   */\n  features?: DirectiveDefFeature[];\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: (directiveIndex: number, elementIndex: number) => void;\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n}) => never;\n\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nexport function definePipe<T>(pipeDef: {\n  /** Name of the pipe. Used for matching pipes in template to pipe defs. */\n  name: string,\n\n  /** Pipe class reference. Needed to extract pipe lifecycle hooks. */\n  type: Type<T>,\n\n  /** A factory for creating a pipe instance. */\n  factory: () => T,\n\n  /** Whether the pipe is pure. */\n  pure?: boolean\n}): never {\n  return (<PipeDef<T>>{\n    name: pipeDef.name,\n    n: pipeDef.factory,\n    pure: pipeDef.pure !== false,\n    onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n  }) as never;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {bindingUpdated, bindingUpdated2, bindingUpdated4, checkAndUpdateBinding, consumeBinding, getCreationMode} from './instructions';\n\n\n\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @returns value\n */\nexport function pureFunction0<T>(pureFn: () => T, thisArg?: any): T {\n  return getCreationMode() ? checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n                             consumeBinding();\n}\n\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @returns Updated value\n */\nexport function pureFunction1(pureFn: (v: any) => any, exp: any, thisArg?: any): any {\n  return bindingUpdated(exp) ?\n      checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @returns Updated value\n */\nexport function pureFunction2(\n    pureFn: (v1: any, v2: any) => any, exp1: any, exp2: any, thisArg?: any): any {\n  return bindingUpdated2(exp1, exp2) ?\n      checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @returns Updated value\n */\nexport function pureFunction3(\n    pureFn: (v1: any, v2: any, v3: any) => any, exp1: any, exp2: any, exp3: any,\n    thisArg?: any): any {\n  const different = bindingUpdated2(exp1, exp2);\n  return bindingUpdated(exp3) || different ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @returns Updated value\n */\nexport function pureFunction4(\n    pureFn: (v1: any, v2: any, v3: any, v4: any) => any, exp1: any, exp2: any, exp3: any, exp4: any,\n    thisArg?: any): any {\n  return bindingUpdated4(exp1, exp2, exp3, exp4) ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @returns Updated value\n */\nexport function pureFunction5(\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any) => any, exp1: any, exp2: any, exp3: any,\n    exp4: any, exp5: any, thisArg?: any): any {\n  const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n  return bindingUpdated(exp5) || different ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @returns Updated value\n */\nexport function pureFunction6(\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any) => any, exp1: any, exp2: any,\n    exp3: any, exp4: any, exp5: any, exp6: any, thisArg?: any): any {\n  const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n  return bindingUpdated2(exp5, exp6) || different ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @returns Updated value\n */\nexport function pureFunction7(\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, thisArg?: any): any {\n  let different = bindingUpdated4(exp1, exp2, exp3, exp4);\n  different = bindingUpdated2(exp5, exp6) || different;\n  return bindingUpdated(exp7) || different ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n      consumeBinding();\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @returns Updated value\n */\nexport function pureFunction8(\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any, v8: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, exp8: any,\n    thisArg?: any): any {\n  const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n  return bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n      checkAndUpdateBinding(\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                    pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n      consumeBinding();\n}\n\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exp An array of binding values\n * @returns Updated value\n */\nexport function pureFunctionV(pureFn: (...v: any[]) => any, exps: any[], thisArg?: any): any {\n  let different = false;\n\n  for (let i = 0; i < exps.length; i++) {\n    bindingUpdated(exps[i]) && (different = true);\n  }\n  return different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PipeTransform} from '../change_detection/pipe_transform';\n\nimport {getTView, load, store} from './instructions';\nimport {PipeDef, PipeDefList} from './interfaces/definition';\nimport {pureFunction1, pureFunction2, pureFunction3, pureFunction4, pureFunctionV} from './pure_function';\n\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nexport function pipe(index: number, pipeName: string): any {\n  const tView = getTView();\n  let pipeDef: PipeDef<any>;\n\n  if (tView.firstTemplatePass) {\n    pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n    tView.data[index] = pipeDef;\n    if (pipeDef.onDestroy) {\n      (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n    }\n  } else {\n    pipeDef = tView.data[index] as PipeDef<any>;\n  }\n\n  const pipeInstance = pipeDef.n();\n  store(index, pipeInstance);\n  return pipeInstance;\n}\n\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name: string, registry: PipeDefList | null): PipeDef<any> {\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const pipeDef = registry[i];\n      if (name === pipeDef.name) {\n        return pipeDef;\n      }\n    }\n  }\n  throw new Error(`Pipe with name '${name}' not found!`);\n}\n\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind1(index: number, v1: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction1(pipeInstance.transform, v1, pipeInstance) :\n                         pipeInstance.transform(v1);\n}\n\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind2(index: number, v1: any, v2: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction2(pipeInstance.transform, v1, v2, pipeInstance) :\n                         pipeInstance.transform(v1, v2);\n}\n\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind3(index: number, v1: any, v2: any, v3: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction3(pipeInstance.transform.bind(pipeInstance), v1, v2, v3) :\n                         pipeInstance.transform(v1, v2, v3);\n}\n\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind4(index: number, v1: any, v2: any, v3: any, v4: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunction4(pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n                         pipeInstance.transform(v1, v2, v3, v4);\n}\n\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nexport function pipeBindV(index: number, values: any[]): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return isPure(index) ? pureFunctionV(pipeInstance.transform, values, pipeInstance) :\n                         pipeInstance.transform.apply(pipeInstance, values);\n}\n\nfunction isPure(index: number): boolean {\n  return (<PipeDef<any>>getTView().data[index]).pure;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Provider} from '../../core';\nimport {RendererType2} from '../../render/api';\nimport {Type} from '../../type';\nimport {CssSelectorList} from './projection';\n\n/**\n * Definition of what a template rendering function should look like.\n */\nexport type ComponentTemplate<T> = {\n  (rf: RenderFlags, ctx: T): void; ngPrivateData?: never;\n};\n\n/**\n * Flags passed into template functions to determine which blocks (i.e. creation, update)\n * should be executed.\n *\n * Typically, a template runs both the creation block and the update block on initialization and\n * subsequent runs only execute the update block. However, dynamically created views require that\n * the creation block be executed separately from the update block (for backwards compat).\n */\nexport const enum RenderFlags {\n  /* Whether to run the creation block (e.g. create elements and directives) */\n  Create = 0b01,\n\n  /* Whether to run the update block (e.g. refresh bindings) */\n  Update = 0b10\n}\n\n/**\n * A subclass of `Type` which has a static `ngComponentDef`:`ComponentDef` field making it\n * consumable for rendering.\n */\nexport interface ComponentType<T> extends Type<T> { ngComponentDef: never; }\n\n/**\n * A subclass of `Type` which has a static `ngDirectiveDef`:`DirectiveDef` field making it\n * consumable for rendering.\n */\nexport interface DirectiveType<T> extends Type<T> { ngDirectiveDef: never; }\n\nexport const enum DirectiveDefFlags {ContentQuery = 0b10}\n\n/**\n * A subclass of `Type` which has a static `ngPipeDef`:`PipeDef` field making it\n * consumable for rendering.\n */\nexport interface PipeType<T> extends Type<T> { ngPipeDef: never; }\n\n/**\n * Runtime link information for Directives.\n *\n * This is internal data structure used by the render to link\n * directives into templates.\n *\n * NOTE: Always use `defineDirective` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {@link defineDirective}\n */\nexport interface DirectiveDef<T> {\n  /** Token representing the directive. Used by DI. */\n  type: Type<T>;\n\n  /** Function that makes a directive public to the DI system. */\n  diPublic: ((def: DirectiveDef<any>) => void)|null;\n\n  /** The selectors that will be used to match nodes to this directive. */\n  selectors: CssSelectorList;\n\n  /**\n   * A dictionary mapping the inputs' minified property names to their public API names, which\n   * are their aliases if any, or their original unminified property names\n   * (as in `@Input('alias') propertyName: any;`).\n   */\n  readonly inputs: {[P in keyof T]: P};\n\n  /**\n   * A dictionary mapping the outputs' minified property names to their public API names, which\n   * are their aliases if any, or their original unminified property names\n   * (as in `@Output('alias') propertyName: any;`).\n   */\n  readonly outputs: {[P in keyof T]: P};\n\n  /**\n   * Name under which the directive is exported (for use with local references in template)\n   */\n  readonly exportAs: string|null;\n\n  /**\n   * Factory function used to create a new directive instance.\n   *\n   * Usually returns the directive instance, but if the directive has a content query,\n   * it instead returns an array that contains the instance as well as content query data.\n   */\n  factory(): T|[T];\n\n  /** Refreshes host bindings on the associated directive. */\n  hostBindings: ((directiveIndex: number, elementIndex: number) => void)|null;\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes: string[]|null;\n\n  /* The following are lifecycle hooks for this component */\n  onInit: (() => void)|null;\n  doCheck: (() => void)|null;\n  afterContentInit: (() => void)|null;\n  afterContentChecked: (() => void)|null;\n  afterViewInit: (() => void)|null;\n  afterViewChecked: (() => void)|null;\n  onDestroy: (() => void)|null;\n}\n\n/**\n * Runtime link information for Components.\n *\n * This is internal data structure used by the render to link\n * components into templates.\n *\n * NOTE: Always use `defineComponent` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {@link defineComponent}\n */\nexport interface ComponentDef<T> extends DirectiveDef<T> {\n  /**\n   * The View template of the component.\n   *\n   * NOTE: only used with component directives.\n   */\n  readonly template: ComponentTemplate<T>;\n\n  /**\n   * Renderer type data of the component.\n   *\n   * NOTE: only used with component directives.\n   */\n  readonly rendererType: RendererType2|null;\n\n  /** Whether or not this component's ChangeDetectionStrategy is OnPush */\n  readonly onPush: boolean;\n\n  /**\n   * Defines the set of injectable providers that are visible to a Directive and its content DOM\n   * children.\n   */\n  readonly providers?: Provider[];\n\n  /**\n   * Defines the set of injectable providers that are visible to a Directive and its view DOM\n   * children only.\n   */\n  readonly viewProviders?: Provider[];\n\n  /**\n   * Registry of directives and components that may be found in this view.\n   *\n   * The property is either an array of `DirectiveDef`s or a function which returns the array of\n   * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n   */\n  directiveDefs: DirectiveDefListOrFactory|null;\n\n  /**\n   * Registry of pipes that may be found in this view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   */\n  pipeDefs: PipeDefListOrFactory|null;\n}\n\n/**\n * Runtime link information for Pipes.\n *\n * This is internal data structure used by the renderer to link\n * pipes into templates.\n *\n * NOTE: Always use `definePipe` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n *\n * See: {@link definePipe}\n */\nexport interface PipeDef<T> {\n  /**\n   * Pipe name.\n   *\n   * Used to resolve pipe in templates.\n   */\n  name: string;\n\n  /**\n   * factory function used to create a new directive instance.\n   *\n   * NOTE: this property is short (1 char) because it is used in\n   * component templates which is sensitive to size.\n   */\n  n: () => T;\n\n  /**\n   * Whether or not the pipe is pure.\n   *\n   * Pure pipes result only depends on the pipe input and not on internal\n   * state of the pipe.\n   */\n  pure: boolean;\n\n  /* The following are lifecycle hooks for this pipe */\n  onDestroy: (() => void)|null;\n}\n\nexport type DirectiveDefFeature = <T>(directiveDef: DirectiveDef<T>) => void;\nexport type ComponentDefFeature = <T>(componentDef: ComponentDef<T>) => void;\n\n/**\n * Type used for directiveDefs on component definition.\n *\n * The function is necessary to be able to support forward declarations.\n */\nexport type DirectiveDefListOrFactory = (() => DirectiveDefList) | DirectiveDefList;\n\nexport type DirectiveDefList = (DirectiveDef<any>| ComponentDef<any>)[];\n\nexport type DirectiveTypesOrFactory = (() => DirectiveTypeList) | DirectiveTypeList;\n\nexport type DirectiveTypeList =\n    (DirectiveDef<any>| ComponentDef<any>|\n     Type<any>/* Type as workaround for: Microsoft/TypeScript/issues/4881 */)[];\n\n/**\n * Type used for PipeDefs on component definition.\n *\n * The function is necessary to be able to support forward declarations.\n */\nexport type PipeDefListOrFactory = (() => PipeDefList) | PipeDefList;\n\nexport type PipeDefList = PipeDef<any>[];\n\nexport type PipeTypesOrFactory = (() => DirectiveTypeList) | DirectiveTypeList;\n\nexport type PipeTypeList =\n    (PipeDef<any>| Type<any>/* Type as workaround for: Microsoft/TypeScript/issues/4881 */)[];\n\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../../change_detection/change_detector_ref';\nimport {ElementRef} from '../../linker/element_ref';\nimport {TemplateRef} from '../../linker/template_ref';\nimport {ViewContainerRef} from '../../linker/view_container_ref';\n\nimport {LContainerNode, LElementNode} from './node';\n\nexport interface LInjector {\n  /**\n   * We need to store a reference to the injector's parent so DI can keep looking up\n   * the injector tree until it finds the dependency it's looking for.\n   */\n  readonly parent: LInjector|null;\n\n  /**\n   * Allows access to the directives array in that node's static data and to\n   * the node's flags (for starting directive index and directive size). Necessary\n   * for DI to retrieve a directive from the data array if injector indicates\n   * it is there.\n   */\n  readonly node: LElementNode|LContainerNode;\n\n  /**\n   * The following bloom filter determines whether a directive is available\n   * on the associated node or not. This prevents us from searching the directives\n   * array at this level unless it's probable the directive is in it.\n   *\n   * - bf0: Check directive IDs 0-31  (IDs are % 128)\n   * - bf1: Check directive IDs 32-63\n   * - bf2: Check directive IDs 64-95\n   * - bf3: Check directive IDs 96-127\n   * - bf4: Check directive IDs 128-159\n   * - bf5: Check directive IDs 160 - 191\n   * - bf6: Check directive IDs 192 - 223\n   * - bf7: Check directive IDs 224 - 255\n   *\n   * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n   */\n  bf0: number;\n  bf1: number;\n  bf2: number;\n  bf3: number;\n  bf4: number;\n  bf5: number;\n  bf6: number;\n  bf7: number;\n\n  /**\n   * cbf0 - cbf7 properties determine whether a directive is available through a\n   * parent injector. They refer to the merged values of parent bloom filters. This\n   * allows us to skip looking up the chain unless it's probable that directive exists\n   * up the chain.\n   */\n  cbf0: number;\n  cbf1: number;\n  cbf2: number;\n  cbf3: number;\n  cbf4: number;\n  cbf5: number;\n  cbf6: number;\n  cbf7: number;\n\n  /** Stores the TemplateRef so subsequent injections of the TemplateRef get the same instance. */\n  templateRef: TemplateRef<any>|null;\n\n  /** Stores the ViewContainerRef so subsequent injections of the ViewContainerRef get the same\n   * instance. */\n  viewContainerRef: ViewContainerRef|null;\n\n  /** Stores the ElementRef so subsequent injections of the ElementRef get the same instance. */\n  elementRef: ElementRef|null;\n\n  /**\n   * Stores the ChangeDetectorRef so subsequent injections of the ChangeDetectorRef get the\n   * same instance.\n   */\n  changeDetectorRef: ChangeDetectorRef|null;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList} from '../../linker';\nimport {Type} from '../../type';\nimport {LNode} from './node';\n\n/** Used for tracking queries (e.g. ViewChild, ContentChild). */\nexport interface LQueries {\n  /**\n   * Used to ask queries if those should be cloned to the child element.\n   *\n   * For example in the case of deep queries the `child()` returns\n   * queries for the child node. In case of shallow queries it returns\n   * `null`.\n   */\n  child(): LQueries|null;\n\n  /**\n   * Notify `LQueries` that a new `LNode` has been created and needs to be added to query results\n   * if matching query predicate.\n   */\n  addNode(node: LNode): void;\n\n  /**\n   * Notify `LQueries` that a  `LNode` has been created and needs to be added to query results\n   * if matching query predicate.\n   */\n  container(): LQueries|null;\n\n  /**\n   * Notify `LQueries` that a new view was created and is being entered in the creation mode.\n   * This allow queries to prepare space for matching nodes from views.\n   */\n  enterView(newViewIndex: number): LQueries|null;\n\n  /**\n   * Notify `LQueries` that an `LViewNode` has been removed from `LContainerNode`. As a result all\n   * the matching nodes from this view should be removed from container's queries.\n   */\n  removeView(removeIndex: number): void;\n\n  /**\n   * Add additional `QueryList` to track.\n   *\n   * @param queryList `QueryList` to update with changes.\n   * @param predicate Either `Type` or selector array of [key, value] predicates.\n   * @param descend If true the query will recursively apply to the children.\n   * @param read Indicates which token should be read from DI for this query.\n   */\n  track<T>(\n      queryList: QueryList<T>, predicate: Type<any>|string[], descend?: boolean,\n      read?: QueryReadType<T>|Type<T>): void;\n}\n\nexport class QueryReadType<T> { private defeatStructuralTyping: any; }\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {QueryList as viewEngine_QueryList} from '../linker/query_list';\nimport {Type} from '../type';\nimport {getSymbolIterator} from '../util';\n\nimport {assertEqual, assertNotNull} from './assert';\nimport {ReadFromInjectorFn, getOrCreateNodeInjectorForNode} from './di';\nimport {assertPreviousIsParent, getCurrentQueries, store} from './instructions';\nimport {DirectiveDef, unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {LInjector, unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {LContainerNode, LElementNode, LNode, TNode, TNodeFlags, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, QueryReadType, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {flatten} from './util';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n */\nexport interface QueryPredicate<T> {\n  /**\n   * If looking for directives then it contains the directive type.\n   */\n  type: Type<T>|null;\n\n  /**\n   * If selector then contains local names to query for.\n   */\n  selector: string[]|null;\n\n  /**\n   * Indicates which token should be read from DI for this query.\n   */\n  read: QueryReadType<T>|Type<T>|null;\n}\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n */\nexport interface LQuery<T> {\n  /**\n   * Next query. Used when queries are stored as a linked list in `LQueries`.\n   */\n  next: LQuery<any>|null;\n\n  /**\n   * Destination to which the value should be added.\n   */\n  list: QueryList<T>;\n\n  /**\n   * A predicate which determines if a given element/directive should be included in the query\n   * results.\n   */\n  predicate: QueryPredicate<T>;\n\n  /**\n   * Values which have been located.\n   *\n   * This is what builds up the `QueryList._valuesTree`.\n   */\n  values: any[];\n}\n\nexport class LQueries_ implements LQueries {\n  shallow: LQuery<any>|null = null;\n  deep: LQuery<any>|null = null;\n\n  constructor(deep?: LQuery<any>) { this.deep = deep == null ? null : deep; }\n\n  track<T>(\n      queryList: viewEngine_QueryList<T>, predicate: Type<T>|string[], descend?: boolean,\n      read?: QueryReadType<T>|Type<T>): void {\n    // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n    // mutate parent.\n    if (descend) {\n      this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n    } else {\n      this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n    }\n  }\n\n  child(): LQueries|null {\n    if (this.deep === null) {\n      // if we don't have any deep queries then no need to track anything more.\n      return null;\n    }\n    if (this.shallow === null) {\n      // DeepQuery: We can reuse the current state if the child state would be same as current\n      // state.\n      return this;\n    } else {\n      // We need to create new state\n      return new LQueries_(this.deep);\n    }\n  }\n\n  container(): LQueries|null {\n    let result: LQuery<any>|null = null;\n    let query = this.deep;\n\n    while (query) {\n      const containerValues: any[] = [];  // prepare room for views\n      query.values.push(containerValues);\n      const clonedQuery: LQuery<any> =\n          {next: null, list: query.list, predicate: query.predicate, values: containerValues};\n      clonedQuery.next = result;\n      result = clonedQuery;\n      query = query.next;\n    }\n\n    return result ? new LQueries_(result) : null;\n  }\n\n  enterView(index: number): LQueries|null {\n    let result: LQuery<any>|null = null;\n    let query = this.deep;\n\n    while (query) {\n      const viewValues: any[] = [];  // prepare room for view nodes\n      query.values.splice(index, 0, viewValues);\n      const clonedQuery: LQuery<any> =\n          {next: null, list: query.list, predicate: query.predicate, values: viewValues};\n      clonedQuery.next = result;\n      result = clonedQuery;\n      query = query.next;\n    }\n\n    return result ? new LQueries_(result) : null;\n  }\n\n  addNode(node: LNode): void {\n    add(this.shallow, node);\n    add(this.deep, node);\n  }\n\n  removeView(index: number): void {\n    let query = this.deep;\n    while (query) {\n      const removed = query.values.splice(index, 1);\n\n      // mark a query as dirty only when removed view had matching modes\n      ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n      if (removed[0].length) {\n        query.list.setDirty();\n      }\n\n      query = query.next;\n    }\n  }\n}\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node: LNode, type: Type<any>): number|null {\n  const defs = node.view.tView.directives !;\n  const flags = node.tNode !.flags;\n  const count = flags & TNodeFlags.DirectiveCountMask;\n  const start = flags >> TNodeFlags.DirectiveStartingIndexShift;\n  const end = start + count;\n  for (let i = start; i < end; i++) {\n    const def = defs[i] as DirectiveDef<any>;\n    if (def.type === type && def.diPublic) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction readFromNodeInjector(\n    nodeInjector: LInjector, node: LNode, read: QueryReadType<any>| Type<any>,\n    directiveIdx: number): any {\n  if (read instanceof ReadFromInjectorFn) {\n    return read.read(nodeInjector, node, directiveIdx);\n  } else {\n    const matchingIdx = getIdxOfMatchingDirective(node, read as Type<any>);\n    if (matchingIdx !== null) {\n      return node.view.directives ![matchingIdx];\n    }\n  }\n  return null;\n}\n\nfunction add(query: LQuery<any>| null, node: LNode) {\n  const nodeInjector = getOrCreateNodeInjectorForNode(node as LElementNode | LContainerNode);\n  while (query) {\n    const predicate = query.predicate;\n    const type = predicate.type;\n    if (type) {\n      const directiveIdx = getIdxOfMatchingDirective(node, type);\n      if (directiveIdx !== null) {\n        // a node is matching a predicate - determine what to read\n        // if read token and / or strategy is not specified, use type as read token\n        const result =\n            readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n        if (result !== null) {\n          addMatch(query, result);\n        }\n      }\n    } else {\n      const selector = predicate.selector !;\n      for (let i = 0; i < selector.length; i++) {\n        ngDevMode && assertNotNull(node.tNode, 'node.tNode');\n        const directiveIdx = getIdxOfMatchingSelector(node.tNode !, selector[i]);\n        if (directiveIdx !== null) {\n          // a node is matching a predicate - determine what to read\n          // note that queries using name selector must specify read strategy\n          ngDevMode && assertNotNull(predicate.read, 'the node should have a predicate');\n          const result = readFromNodeInjector(nodeInjector, node, predicate.read !, directiveIdx);\n          if (result !== null) {\n            addMatch(query, result);\n          }\n        }\n      }\n    }\n    query = query.next;\n  }\n}\n\nfunction addMatch(query: LQuery<any>, matchingValue: any): void {\n  query.values.push(matchingValue);\n  query.list.setDirty();\n}\n\nfunction createPredicate<T>(\n    predicate: Type<T>| string[], read: QueryReadType<T>| Type<T>| null): QueryPredicate<T> {\n  const isArray = Array.isArray(predicate);\n  return {\n    type: isArray ? null : predicate as Type<T>,\n    selector: isArray ? predicate as string[] : null,\n    read: read\n  };\n}\n\nfunction createQuery<T>(\n    previous: LQuery<any>| null, queryList: QueryList<T>, predicate: Type<T>| string[],\n    read: QueryReadType<T>| Type<T>| null): LQuery<T> {\n  return {\n    next: previous,\n    list: queryList,\n    predicate: createPredicate(predicate, read),\n    values: (queryList as any as QueryList_<T>)._valuesTree\n  };\n}\n\nclass QueryList_<T>/* implements viewEngine_QueryList<T> */ {\n  readonly dirty = true;\n  readonly changes: Observable<T> = new EventEmitter();\n  private _values: T[] = [];\n  /** @internal */\n  _valuesTree: any[] = [];\n\n  get length(): number { return this._values.length; }\n\n  get first(): T|null {\n    let values = this._values;\n    return values.length ? values[0] : null;\n  }\n\n  get last(): T|null {\n    let values = this._values;\n    return values.length ? values[values.length - 1] : null;\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._values.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._values.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._values.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._values.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._values.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._values.some(fn);\n  }\n\n  toArray(): T[] { return this._values.slice(0); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._values as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._values.toString(); }\n\n  reset(res: (any[]|T)[]): void {\n    this._values = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n  setDirty(): void { (this as{dirty: boolean}).dirty = true; }\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\n// NOTE: this hack is here because IQueryList has private members and therefore\n// it can't be implemented only extended.\nexport type QueryList<T> = viewEngine_QueryList<T>;\nexport const QueryList: typeof viewEngine_QueryList = QueryList_ as any;\n\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nexport function query<T>(\n    memoryIndex: number | null, predicate: Type<any>| string[], descend?: boolean,\n    read?: QueryReadType<T>| Type<T>): QueryList<T> {\n  ngDevMode && assertPreviousIsParent();\n  const queryList = new QueryList<T>();\n  const queries = getCurrentQueries(LQueries_);\n  queries.track(queryList, predicate, descend, read);\n\n  if (memoryIndex != null) {\n    store(memoryIndex, queryList);\n  }\n  return queryList;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nexport function queryRefresh(queryList: QueryList<any>): boolean {\n  const queryListImpl = (queryList as any as QueryList_<any>);\n  if (queryList.dirty) {\n    queryList.reset(queryListImpl._valuesTree);\n    queryList.notifyOnChanges();\n    return true;\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LifecycleHooksFeature, createComponentRef, getHostElement, getRenderedText, renderComponent, whenRendered} from './component';\nimport {NgOnChangesFeature, PublicFeature, defineComponent, defineDirective, definePipe} from './definition';\nimport {ComponentDef, ComponentTemplate, ComponentType, DirectiveDef, DirectiveDefFlags, DirectiveType, PipeDef} from './interfaces/definition';\n\nexport {QUERY_READ_CONTAINER_REF, QUERY_READ_ELEMENT_REF, QUERY_READ_FROM_NODE, QUERY_READ_TEMPLATE_REF, directiveInject, injectAttribute, injectChangeDetectorRef, injectElementRef, injectTemplateRef, injectViewContainerRef} from './di';\nexport {RenderFlags} from './interfaces/definition';\nexport {CssSelectorList} from './interfaces/projection';\n\n\n\n// Naming scheme:\n// - Capital letters are for creating things: T(Text), E(Element), D(Directive), V(View),\n// C(Container), L(Listener)\n// - lower case letters are for binding: b(bind)\n// - lower case letters are for binding target: p(property), a(attribute), k(class), s(style),\n// i(input)\n// - lower case letters for guarding life cycle hooks: l(lifeCycle)\n// - lower case for closing: c(containerEnd), e(elementEnd), v(viewEnd)\n// clang-format off\nexport {\n\n  NO_CHANGE as NC,\n\n  bind as b,\n  interpolation1 as i1,\n  interpolation2 as i2,\n  interpolation3 as i3,\n  interpolation4 as i4,\n  interpolation5 as i5,\n  interpolation6 as i6,\n  interpolation7 as i7,\n  interpolation8 as i8,\n  interpolationV as iV,\n\n  container as C,\n  containerRefreshStart as cR,\n  containerRefreshEnd as cr,\n\n  elementAttribute as a,\n  elementClass as k,\n  elementClassNamed as kn,\n  elementEnd as e,\n  elementProperty as p,\n  elementStart as E,\n  elementStyle as s,\n  elementStyleNamed as sn,\n\n  listener as L,\n  store as st,\n  load as ld,\n  loadDirective as d,\n\n  projection as P,\n  projectionDef as pD,\n\n  text as T,\n  textBinding as t,\n\n  embeddedViewStart as V,\n  embeddedViewEnd as v,\n  detectChanges,\n  markDirty,\n  tick,\n} from './instructions';\n\nexport {\n  pipe as Pp,\n  pipeBind1 as pb1,\n  pipeBind2 as pb2,\n  pipeBind3 as pb3,\n  pipeBind4 as pb4,\n  pipeBindV as pbV,\n} from './pipe';\n\nexport {\n  QueryList,\n\n  query as Q,\n  queryRefresh as qR,\n} from './query';\nexport {\n  pureFunction0 as f0,\n  pureFunction1 as f1,\n  pureFunction2 as f2,\n  pureFunction3 as f3,\n  pureFunction4 as f4,\n  pureFunction5 as f5,\n  pureFunction6 as f6,\n  pureFunction7 as f7,\n  pureFunction8 as f8,\n  pureFunctionV as fV,\n} from './pure_function';\n\n\n// clang-format on\n\nexport {\n  ComponentDef,\n  ComponentTemplate,\n  ComponentType,\n  DirectiveDef,\n  DirectiveDefFlags,\n  DirectiveType,\n  NgOnChangesFeature,\n  PublicFeature,\n  PipeDef,\n  LifecycleHooksFeature,\n  defineComponent,\n  defineDirective,\n  definePipe,\n  createComponentRef,\n  getHostElement,\n  getRenderedText,\n  renderComponent,\n  whenRendered,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../render3/util';\n\nimport {_sanitizeHtml as _sanitizeHtml} from './html_sanitizer';\nimport {_sanitizeStyle as _sanitizeStyle} from './style_sanitizer';\nimport {_sanitizeUrl as _sanitizeUrl} from './url_sanitizer';\n\nconst BRAND = '__SANITIZER_TRUSTED_BRAND__';\n\n/**\n * A branded trusted string used with sanitization.\n *\n * See: {@link TrustedHtmlString}, {@link TrustedResourceUrlString}, {@link TrustedScriptString},\n * {@link TrustedStyleString}, {@link TrustedUrlString}\n */\nexport interface TrustedString extends String {\n  '__SANITIZER_TRUSTED_BRAND__': 'Html'|'Style'|'Script'|'Url'|'ResourceUrl';\n}\n\n/**\n * A branded trusted string used with sanitization of `html` strings.\n *\n * See: {@link bypassSanitizationTrustHtml} and {@link htmlSanitizer}.\n */\nexport interface TrustedHtmlString extends TrustedString { '__SANITIZER_TRUSTED_BRAND__': 'Html'; }\n\n/**\n * A branded trusted string used with sanitization of `style` strings.\n *\n * See: {@link bypassSanitizationTrustStyle} and {@link styleSanitizer}.\n */\nexport interface TrustedStyleString extends TrustedString {\n  '__SANITIZER_TRUSTED_BRAND__': 'Style';\n}\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustScript} and {@link scriptSanitizer}.\n */\nexport interface TrustedScriptString extends TrustedString {\n  '__SANITIZER_TRUSTED_BRAND__': 'Script';\n}\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustUrl} and {@link urlSanitizer}.\n */\nexport interface TrustedUrlString extends TrustedString { '__SANITIZER_TRUSTED_BRAND__': 'Url'; }\n\n/**\n * A branded trusted string used with sanitization of `resourceUrl` strings.\n *\n * See: {@link bypassSanitizationTrustResourceUrl} and {@link resourceUrlSanitizer}.\n */\nexport interface TrustedResourceUrlString extends TrustedString {\n  '__SANITIZER_TRUSTED_BRAND__': 'ResourceUrl';\n}\n\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nexport function sanitizeHtml(unsafeHtml: any): string {\n  if (unsafeHtml instanceof String && (unsafeHtml as TrustedHtmlString)[BRAND] === 'Html') {\n    return unsafeHtml.toString();\n  }\n  return _sanitizeHtml(document, stringify(unsafeHtml));\n}\n\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nexport function sanitizeStyle(unsafeStyle: any): string {\n  if (unsafeStyle instanceof String && (unsafeStyle as TrustedStyleString)[BRAND] === 'Style') {\n    return unsafeStyle.toString();\n  }\n  return _sanitizeStyle(stringify(unsafeStyle));\n}\n\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nexport function sanitizeUrl(unsafeUrl: any): string {\n  if (unsafeUrl instanceof String && (unsafeUrl as TrustedUrlString)[BRAND] === 'Url') {\n    return unsafeUrl.toString();\n  }\n  return _sanitizeUrl(stringify(unsafeUrl));\n}\n\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nexport function sanitizeResourceUrl(unsafeResourceUrl: any): string {\n  if (unsafeResourceUrl instanceof String &&\n      (unsafeResourceUrl as TrustedResourceUrlString)[BRAND] === 'ResourceUrl') {\n    return unsafeResourceUrl.toString();\n  }\n  throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\nexport function sanitizeScript(unsafeScript: any): string {\n  if (unsafeScript instanceof String && (unsafeScript as TrustedScriptString)[BRAND] === 'Script') {\n    return unsafeScript.toString();\n  }\n  throw new Error('unsafe value used in a script context');\n}\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustHtml(trustedHtml: string): TrustedHtmlString {\n  return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustStyle(trustedStyle: string): TrustedStyleString {\n  return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustScript(trustedScript: string): TrustedScriptString {\n  return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustUrl(trustedUrl: string): TrustedUrlString {\n  return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustResourceUrl(trustedResourceUrl: string):\n    TrustedResourceUrlString {\n  return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\n\n\nfunction bypassSanitizationTrustString(trustedString: string, mode: 'Html'): TrustedHtmlString;\nfunction bypassSanitizationTrustString(trustedString: string, mode: 'Style'): TrustedStyleString;\nfunction bypassSanitizationTrustString(trustedString: string, mode: 'Script'): TrustedScriptString;\nfunction bypassSanitizationTrustString(trustedString: string, mode: 'Url'): TrustedUrlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: 'ResourceUrl'): TrustedResourceUrlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string,\n    mode: 'Html' | 'Style' | 'Script' | 'Url' | 'ResourceUrl'): TrustedString {\n  const trusted = new String(trustedString) as TrustedString;\n  trusted[BRAND] = mode;\n  return trusted;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// clang-format off\nexport {\n  defineComponent as ÉµdefineComponent,\n  defineDirective as ÉµdefineDirective,\n  definePipe as ÉµdefinePipe,\n  detectChanges as ÉµdetectChanges,\n  renderComponent as ÉµrenderComponent,\n  ComponentType as ÉµComponentType,\n  DirectiveType as ÉµDirectiveType,\n  RenderFlags as ÉµRenderFlags,\n  directiveInject as ÉµdirectiveInject,\n  injectTemplateRef as ÉµinjectTemplateRef,\n  injectViewContainerRef as ÉµinjectViewContainerRef,\n  injectChangeDetectorRef as ÉµinjectChangeDetectorRef,\n  injectAttribute as ÉµinjectAttribute,\n  PublicFeature as ÉµPublicFeature,\n  NgOnChangesFeature as ÉµNgOnChangesFeature,\n  CssSelectorList as ÉµCssSelectorList,\n  markDirty as ÉµmarkDirty,\n  NC as ÉµNC,\n  C as ÉµC,\n  E as ÉµE,\n  L as ÉµL,\n  T as ÉµT,\n  V as ÉµV,\n  Q as ÉµQ,\n  d as Éµd,\n  P as ÉµP,\n  b as Éµb,\n  i1 as Éµi1,\n  i2 as Éµi2,\n  i3 as Éµi3,\n  i4 as Éµi4,\n  i5 as Éµi5,\n  i6 as Éµi6,\n  i7 as Éµi7,\n  i8 as Éµi8,\n  iV as ÉµiV,\n  pb1 as Éµpb1,\n  pb2 as Éµpb2,\n  pb3 as Éµpb3,\n  pb4 as Éµpb4,\n  pbV as ÉµpbV,\n  f0 as Éµf0,\n  f1 as Éµf1,\n  f2 as Éµf2,\n  f3 as Éµf3,\n  f4 as Éµf4,\n  f5 as Éµf5,\n  f6 as Éµf6,\n  f7 as Éµf7,\n  f8 as Éµf8,\n  fV as ÉµfV,\n  cR as ÉµcR,\n  cr as Éµcr,\n  qR as ÉµqR,\n  e as Éµe,\n  p as Éµp,\n  pD as ÉµpD,\n  a as Éµa,\n  s as Éµs,\n  sn as Éµsn,\n  k as Éµk,\n  kn as Éµkn,\n  t as Éµt,\n  v as Éµv,\n  st as Éµst,\n  ld as Éµld,\n  Pp as ÉµPp,\n  ComponentDef as ÉµComponentDef,\n  DirectiveDef as ÉµDirectiveDef,\n  PipeDef as ÉµPipeDef,\n  whenRendered as ÉµwhenRendered,\n} from './render3/index';\nexport {\n  bypassSanitizationTrustHtml as ÉµbypassSanitizationTrustHtml,\n  bypassSanitizationTrustStyle as ÉµbypassSanitizationTrustStyle,\n  bypassSanitizationTrustScript as ÉµbypassSanitizationTrustScript,\n  bypassSanitizationTrustUrl as ÉµbypassSanitizationTrustUrl,\n  bypassSanitizationTrustResourceUrl as ÉµbypassSanitizationTrustResourceUrl,\n  sanitizeHtml as ÉµsanitizeHtml,\n  sanitizeStyle as ÉµsanitizeStyle,\n  sanitizeUrl as ÉµsanitizeUrl,\n  sanitizeResourceUrl as ÉµsanitizeResourceUrl,\n} from './sanitization/sanitization';\n// clang-format on\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CodegenComponentFactoryResolver as ÉµCodegenComponentFactoryResolver} from './linker/component_factory_resolver';\nexport {registerModuleFactory as ÉµregisterModuleFactory} from './linker/ng_module_factory_loader';\nexport {ArgumentType as ÉµArgumentType, BindingFlags as ÉµBindingFlags, DepFlags as ÉµDepFlags, EMPTY_ARRAY as ÉµEMPTY_ARRAY, EMPTY_MAP as ÉµEMPTY_MAP, NodeFlags as ÉµNodeFlags, QueryBindingType as ÉµQueryBindingType, QueryValueType as ÉµQueryValueType, ViewDefinition as ÉµViewDefinition, ViewFlags as ÉµViewFlags, anchorDef as Éµand, createComponentFactory as Éµccf, createNgModuleFactory as Éµcmf, createRendererType2 as Éµcrt, directiveDef as Éµdid, elementDef as Éµeld, elementEventFullName as ÉµelementEventFullName, getComponentViewDefinitionFactory as ÉµgetComponentViewDefinitionFactory, inlineInterpolate as ÉµinlineInterpolate, interpolate as Éµinterpolate, moduleDef as Éµmod, moduleProvideDef as Éµmpd, ngContentDef as Éµncd, nodeValue as Éµnov, pipeDef as Éµpid, providerDef as Éµprd, pureArrayDef as Éµpad, pureObjectDef as Éµpod, purePipeDef as Éµppd, queryDef as Éµqud, textDef as Éµted, unwrapValue as Éµunv, viewDef as Éµvid} from './view/index';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\nexport * from './metadata';\nexport * from './version';\nexport {TypeDecorator} from './util/decorators';\nexport * from './di';\nexport {createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken} from './application_ref';\nexport {APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER} from './application_tokens';\nexport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nexport * from './zone';\nexport * from './render';\nexport * from './linker';\nexport {DebugElement, DebugNode, asNativeElements, getDebugNode, Predicate} from './debug/debug_node';\nexport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter} from './testability/testability';\nexport * from './change_detection';\nexport * from './platform_core_providers';\nexport {TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy} from './i18n/tokens';\nexport {ApplicationModule} from './application_module';\nexport {wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, WtfScopeFn} from './profile/profile';\nexport {Type} from './type';\nexport {EventEmitter} from './event_emitter';\nexport {ErrorHandler} from './error_handler';\nexport * from './core_private_export';\nexport * from './core_render3_private_export';\nexport {Sanitizer, SecurityContext} from './sanitization/security';\nexport * from './codegen_private_exports';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/core';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {_iterableDiffersFactory as Éµangular_packages_core_core_j,_keyValueDiffersFactory as Éµangular_packages_core_core_k,_localeFactory as Éµangular_packages_core_core_l} from './src/application_module';\nexport {_appIdRandomProviderFactory as Éµangular_packages_core_core_f} from './src/application_tokens';\nexport {defaultKeyValueDiffers as Éµangular_packages_core_core_g} from './src/change_detection/change_detection';\nexport {DefaultIterableDifferFactory as Éµangular_packages_core_core_h} from './src/change_detection/differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory as Éµangular_packages_core_core_i} from './src/change_detection/differs/default_keyvalue_differ';\nexport {ReflectiveInjector_ as Éµangular_packages_core_core_c} from './src/di/reflective_injector';\nexport {ReflectiveDependency as Éµangular_packages_core_core_d,resolveReflectiveProviders as Éµangular_packages_core_core_e} from './src/di/reflective_provider';\nexport {wtfEnabled as Éµangular_packages_core_core_m} from './src/profile/profile';\nexport {createScope as Éµangular_packages_core_core_o,detectWTF as Éµangular_packages_core_core_n,endTimeRange as Éµangular_packages_core_core_r,leave as Éµangular_packages_core_core_p,startTimeRange as Éµangular_packages_core_core_q} from './src/profile/wtf_impl';\nexport {getOrCreateChangeDetectorRef as Éµangular_packages_core_core_v,getOrCreateContainerRef as Éµangular_packages_core_core_x,getOrCreateInjectable as Éµangular_packages_core_core_w,getOrCreateNodeInjector as Éµangular_packages_core_core_u,getOrCreateTemplateRef as Éµangular_packages_core_core_y} from './src/render3/di';\nexport {bindingUpdated as Éµangular_packages_core_core_bb,bindingUpdated2 as Éµangular_packages_core_core_bd,bindingUpdated4 as Éµangular_packages_core_core_be,checkAndUpdateBinding as Éµangular_packages_core_core_bc,consumeBinding as Éµangular_packages_core_core_ba,getCreationMode as Éµangular_packages_core_core_z} from './src/render3/instructions';\nexport {makeParamDecorator as Éµangular_packages_core_core_a,makePropDecorator as Éµangular_packages_core_core_b} from './src/util/decorators';\nexport {_def as Éµangular_packages_core_core_s} from './src/view/provider';\nexport {DebugContext as Éµangular_packages_core_core_t} from './src/view/types';"],"names":["ChangeDetectionStrategy","ChangeDetectorStatus","global","getClosureSafeProperty","GET_PROPERTY_NAME","USE_VALUE","ViewEncapsulation","ResolvedReflectiveFactory","CIRCULAR","EMPTY_ARRAY","NULL_INJECTOR","tslib_1.__extends","Subscription","Subject","Observable","merge","share","RendererStyleFlags2","MissingTranslationStrategy","tslib_1.__values","SecurityContext","renderNode","RendererV1","InjectorRefTokenKey","INJECTORRefTokenKey","_createProviderInstance","tokenKey","createInjector","anchorDef","viewDef","stringify","ViewRef","ElementRef","ViewContainerRef","TemplateRef","EmbeddedViewRef","EMPTY","checkAndUpdateBinding","createQuery","flatten","QueryList"],"mappings":"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"}