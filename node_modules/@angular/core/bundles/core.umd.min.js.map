{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","apply","_a","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","Directive","dir","Component","c","changeDetection","Default","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","__global","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","type","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","injectableType","NgModule","ngModule","moduleType","metadata","ngInjectorDef","Version","VERSION","full","major","split","minor","patch","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","makeRecord","isRootInjector","defType","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","processProvider","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","subscribe","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","RenderComponentType","templateUrl","slotCount","encapsulation","styles","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ChangeDetectorRef","TemplateRef","ViewContainerRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","queryAllNodes","_queryNodeChildren","node","triggerEventHandler","eventObj","element","parentNode","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","e_1_1","return","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","lastRenderRootNode","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","createChangeDetectorRef","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","queueContentHooks","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","destroyHooks","executeInitHooks","currentView","creationMode","lifecycleStage","executeHooks","directives","initHooks","checkHooks","allHooks","hooksToCall","callHooks","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","isDifferent","stringify$1","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","findFirstRNode","currentSibling","parentType","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","native","childContainerData","dynamicLContainerNode","views","head","createTextNode","addRemoveViewFromContainer","container","insertMode","beforeNode","insertView","newView","setViewNext","containerNextNativeNode","removeView","removeIndex","viewNode","destroyViewTree","rootView","viewOrContainer","cleanUpView","getParentState","queries","removeListeners","cleanup","removeEventListener","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","tNode","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","throwMultipleComponentError","throwErrorIfNoChangesMode","checkNoChangesMode","previousOrParentNode","isParent","tData","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","CIRCULAR$2","getPreviousOrParentNode","currentQueries","getCreationMode","firstTemplatePass","enterView","host","bindingStartIndex","leaveView","refreshDirectives","executeInitAndContentHooks","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","createLView","viewId","tail","dynamicViewCount","createLNodeObject","nodeInjector","createLNode","isState","renderEmbeddedTemplate","pipes","_isParent","_previousOrParentNode","rf","getOrCreateTView","refreshDynamicChildren","getRenderFlags","createDirectivesAndLocals","localRefs","containerData","createTNode","cacheMatchingDirectivesForNode","exportsMap","","currentMatches","findDirectiveMatches","directiveRegistry","diPublic","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","throwCyclicDependencyError","initChangeDetectorIfExisting","_setComponentContext","exportAs","ngPrivateData","createTView","pipeRegistry","setUpAttributes","isProc","attrVal","locateHostElement","elementOrSelector","defaultRenderer","initialInputs","generatePropertyAliases","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","baseDirectiveCreate","addComponentLogic","directiveDefs","pipeDefs","addToViewTree","onPush","queueComponentIndexForCheck","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","createLContainer","parentLNode","nextIndex","container_1","elementIndex","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","lView","viewRootLNode","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","getRootView","rootComponent","renderComponentOrTemplate","componentOrContext","_getComponentHostLElementNode","hostNode","NO_CHANGE","initBindings","store","consumeBinding","bindingUpdated","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","ViewRef$1","EmbeddedViewRef$1","_lViewNode","createViewRef","addDestroyable","destroyFn","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","flags_1","searchMatchesQueuedForCreation","startInjector","ReadFromInjectorFn","read","ElementRef$1","getOrCreateContainerRef","vcRefHost","lContainerNode","ViewContainerRef$1","_lContainerNode","_viewRefs","notImplemented","lViewNode","adjustedIdx","_adjustIndex","newIndex","shift","getOrCreateTemplateRef","TemplateRef$1","getOrCreateElementRef","getRenderer","_renderer","_directives","_pipes","_template","defineComponent","componentDefinition","pipeTypes","directiveTypes","invertObject","OnPush","extractDirectiveDef","extractPipeDef","feature","features","ngComponentDef","ngDirectiveDef","ngPipeDef","PRIVATE_PREFIX","EMPTY$1","newObj","minifiedKey","defineDirective","pureFunction1","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","LQueries_","deep","shallow","track","descend","createQuery$1","containerValues","clonedQuery","viewValues","addNode","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","bypassSanitizationTrustString","trustedString","trusted","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_m","Éµangular_packages_core_core_o","Éµangular_packages_core_core_n","Éµangular_packages_core_core_r","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_v","Éµangular_packages_core_core_x","Éµangular_packages_core_core_w","Éµangular_packages_core_core_u","Éµangular_packages_core_core_y","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_s","Éµangular_packages_core_core_t","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createInjector","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","ÉµdetectChanges","ÉµrenderComponent","renderComponent","componentDef","componentTag","requestAnimationFrame","elementNode","tag","rNode","resetApplicationState","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","ÉµPublicFeature","PublicFeature","definition","ÉµNgOnChangesFeature","NgOnChangesFeature","inputPropertyNames","proto","writable","_loop_1","pubKey","minKey","privateMinKey","existingDesc","getOwnPropertyDescriptor","simpleChanges","onChangesWrapper","delegateHook","ÉµmarkDirty","markDirty","ÉµNC","ÉµC","ÉµE","elementStart","ÉµL","listenerFn","useCapture","cleanupFns","wrappedListener","wrapListenerWithDirtyLogic","cleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","addEventListener","outputData","createOutput","ÉµT","textNode","ÉµV","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","tContainer","ÉµQ","memoryIndex","getCurrentQueries","QueryType","Éµd","loadDirective","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","nodeToProject","previouslyProjected","lastNodeToProject","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","ÉµqR","queryRefresh","Éµe","elementEnd","queueLifecycleHooks","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","Éµa","elementAttribute","strValue","Éµs","elementStyle","lElement","removeProperty","Éµsn","elementStyleNamed","suffixOrSanitizer","DashCase","Éµk","elementClass","Éµkn","elementClassNamed","classList","Éµt","textBinding","existingNode","textContent","insertChild","nativeSibling","Éµv","embeddedViewEnd","setRenderParentInProjectedNodes","Éµst","Éµld","ÉµPp","pipeName","getPipeDef","ÉµwhenRendered","whenRendered","getRootContext","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","ngModuleType","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.9\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n            var _a;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n            var _a;\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n            var _a;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Component metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive);\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    var _global = __window || __global || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n        var _a;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty$1(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var Éµ0$1 = GET_PROPERTY_NAME$1;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n                var _a;\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (injectableType, options) {\n        if (options && options.providedIn !== undefined &&\n            injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options)\n            });\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.0.9');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using `InjectorType`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent) {\n        if (parent === void 0) { parent = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    token = provider;\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            var existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(\"Mixed multi-provider for \" + token);\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationInitStatus.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n        ]; };\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.decorators = [\n            { type: Injectable }\n        ];\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        Compiler.decorators = [\n            { type: Injectable }\n        ];\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        Testability.ctorParameters = function () { return [\n            { type: NgZone }\n        ]; };\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        TestabilityRegistry.ctorParameters = function () { return []; };\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler = compilerFactory.createCompiler([options]);\n            return compiler.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        PlatformRef.ctorParameters = function () { return [\n            { type: Injector }\n        ]; };\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        ApplicationRef.ctorParameters = function () { return [\n            { type: NgZone },\n            { type: Console },\n            { type: Injector },\n            { type: ErrorHandler },\n            { type: ComponentFactoryResolver },\n            { type: ApplicationInitStatus }\n        ]; };\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.decorators = [\n            { type: Injectable }\n        ];\n        /** @nocollapse */\n        SystemJsNgModuleLoader.ctorParameters = function () { return [\n            { type: Compiler },\n            { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n        ]; };\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n            var _a;\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.decorators = [\n            { type: NgModule, args: [{\n                        providers: [\n                            ApplicationRef,\n                            ApplicationInitStatus,\n                            Compiler,\n                            APP_ID_RANDOM_PROVIDER,\n                            { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                            { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                            {\n                                provide: LOCALE_ID,\n                                useFactory: _localeFactory,\n                                deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                            },\n                        ]\n                    },] }\n        ];\n        /** @nocollapse */\n        ApplicationModule.ctorParameters = function () { return [\n            { type: ApplicationRef }\n        ]; };\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var res = {};\n        try {\n            for (var _a = __values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var t = _b.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n        var e_1, _c;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n        var e_2, _a;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n            var _a;\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _b = __read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n        var _b;\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n                var _a;\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNull(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertNotNull(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView.data\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, currentView) {\n        var tView = currentView.tView;\n        if (tView.firstTemplatePass === true) {\n            var start = flags >> 13 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView.lifecycleStage === 1 /* Init */) {\n            executeHooks(currentView.directives, tView.initHooks, tView.checkHooks, creationMode);\n            currentView.lifecycleStage = 2 /* AfterInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (typeof ngDevMode == 'undefined') {\n        if (typeof window != 'undefined')\n            window.ngDevMode = true;\n        if (typeof self != 'undefined')\n            self.ngDevMode = true;\n        if (typeof global != 'undefined')\n            global.ngDevMode = true;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertNotNull(node, 'should be called with a node');\n        assertEqual(node.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertNotNull(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten$1(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the first RNode following the given LNode in the same parent DOM element.\n     *\n     * This is needed in order to insert the given node with insertBefore.\n     *\n     * @param node The node whose following DOM node must be found.\n     * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n     * lookup should not be stopped until the result is found.\n     * @returns RNode before which the provided node should be inserted or null if the lookup was\n     * stopped\n     * or if there is no native node after the given logical node in the same native parent.\n     */\n    function findNextRNodeSibling(node, stopNode) {\n        var currentNode = node;\n        while (currentNode && currentNode !== stopNode) {\n            var pNextOrParent = currentNode.pNextOrParent;\n            if (pNextOrParent) {\n                while (pNextOrParent.type !== 1 /* Projection */) {\n                    var nativeNode = findFirstRNode(pNextOrParent);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    pNextOrParent = pNextOrParent.pNextOrParent;\n                }\n                currentNode = pNextOrParent;\n            }\n            else {\n                var currentSibling = currentNode.next;\n                while (currentSibling) {\n                    var nativeNode = findFirstRNode(currentSibling);\n                    if (nativeNode) {\n                        return nativeNode;\n                    }\n                    currentSibling = currentSibling.next;\n                }\n                var parentNode = currentNode.parent;\n                currentNode = null;\n                if (parentNode) {\n                    var parentType = parentNode.type;\n                    if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                        currentNode = parentNode;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * @param node The node whose next node in the LNode tree must be found.\n     * @return LNode|null The next sibling in the LNode tree.\n     */\n    function getNextLNodeWithProjection(node) {\n        var pNextOrParent = node.pNextOrParent;\n        if (pNextOrParent) {\n            // The node is projected\n            var isLastProjectedNode = pNextOrParent.type === 1 /* Projection */;\n            // returns pNextOrParent if we are not at the end of the list, null otherwise\n            return isLastProjectedNode ? null : pNextOrParent;\n        }\n        // returns node.next because the the node is not projected\n        return node.next;\n    }\n    /**\n     * Find the next node in the LNode tree, taking into account the place where a node is\n     * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n     *\n     * If there is no sibling node, this function goes to the next sibling of the parent node...\n     * until it reaches rootNode (at which point null is returned).\n     *\n     * @param initialNode The node whose following node in the LNode tree must be found.\n     * @param rootNode The root node at which the lookup should stop.\n     * @return LNode|null The following node in the LNode tree.\n     */\n    function getNextOrParentSiblingNode(initialNode, rootNode) {\n        var node = initialNode;\n        var nextNode = getNextLNodeWithProjection(node);\n        while (node && !nextNode) {\n            // if node.pNextOrParent is not null here, it is not the next node\n            // (because, at this point, nextNode is null, so it is the parent)\n            node = node.pNextOrParent || node.parent;\n            if (node === rootNode) {\n                return null;\n            }\n            nextNode = node && getNextLNodeWithProjection(node);\n        }\n        return nextNode;\n    }\n    /**\n     * Returns the first RNode inside the given LNode.\n     *\n     * @param node The node whose first DOM node must be found\n     * @returns RNode The first RNode of the given LNode or null if there is none.\n     */\n    function findFirstRNode(rootNode) {\n        var node = rootNode;\n        while (node) {\n            var nextNode = null;\n            if (node.type === 3 /* Element */) {\n                // A LElementNode has a matching RNode in LElementNode.native\n                return node.native;\n            }\n            else if (node.type === 0 /* Container */) {\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n            }\n            else if (node.type === 1 /* Projection */) {\n                // For Projection look at the first projected node\n                nextNode = node.data.head;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = node.child;\n            }\n            node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n        }\n        return null;\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data.renderParent;\n        var parent = parentNode ? parentNode.native : null;\n        var node = rootNode.child;\n        if (parent) {\n            while (node) {\n                var nextNode = null;\n                var renderer = container.view.renderer;\n                if (node.type === 3 /* Element */) {\n                    if (insertMode) {\n                        if (!node.native) {\n                            // If the native element doesn't exist, this is a bound text node that hasn't yet been\n                            // created because update mode has not run (occurs when a bound text node is a root\n                            // node of a dynamically created view). See textBinding() in instructions for ctx.\n                            node.native = createTextNode('', renderer);\n                        }\n                        isProceduralRenderer(renderer) ?\n                            renderer.insertBefore(parent, node.native, beforeNode) :\n                            parent.insertBefore(node.native, beforeNode, true);\n                    }\n                    else {\n                        isProceduralRenderer(renderer) ? renderer.removeChild(parent, node.native) :\n                            parent.removeChild(node.native);\n                    }\n                    nextNode = node.next;\n                }\n                else if (node.type === 0 /* Container */) {\n                    // if we get to a container, it must be a root node of a view because we are only\n                    // propagating down into child views / containers and not child elements\n                    var childContainerData = node.data;\n                    childContainerData.renderParent = parentNode;\n                    nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n                }\n                else if (node.type === 1 /* Projection */) {\n                    nextNode = node.data.head;\n                }\n                else {\n                    nextNode = node.child;\n                }\n                if (nextNode === null) {\n                    node = getNextOrParentSiblingNode(node, rootNode);\n                }\n                else {\n                    node = nextNode;\n                }\n            }\n        }\n    }\n    /**\n     * Traverses the tree of component views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        var viewOrContainer = rootView;\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.views && viewOrContainer.views.length) {\n                next = viewOrContainer.views[0].data;\n            }\n            else if (viewOrContainer.child) {\n                next = viewOrContainer.child;\n            }\n            else if (viewOrContainer.next) {\n                cleanUpView(viewOrContainer);\n                next = viewOrContainer.next;\n            }\n            if (next == null) {\n                // If the viewOrContainer is the rootView, then the cleanup is done twice.\n                // Without this check, ngOnDestroy would be called twice for a directive on an element.\n                while (viewOrContainer && !viewOrContainer.next && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer.next;\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param newView The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, newView, index) {\n        var state = container.data;\n        var views = state.views;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            setViewNext(views[index - 1], newView);\n        }\n        if (index < views.length) {\n            setViewNext(newView, views[index]);\n            views.splice(index, 0, newView);\n        }\n        else {\n            views.push(newView);\n        }\n        // If the container's renderParent is null, we know that it is a root node of its own parent view\n        // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n        // nodes twice - once now and once when its parent inserts its views).\n        if (container.data.renderParent !== null) {\n            var beforeNode = findNextRNodeSibling(newView, container);\n            if (!beforeNode) {\n                var containerNextNativeNode = container.native;\n                if (containerNextNativeNode === undefined) {\n                    containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n                }\n                beforeNode = containerNextNativeNode;\n            }\n            addRemoveViewFromContainer(container, newView, true, beforeNode);\n        }\n        return newView;\n    }\n    /**\n     * Removes a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n     * listeners, calling onDestroys).\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var views = container.data.views;\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            setViewNext(views[removeIndex - 1], viewNode.next);\n        }\n        views.splice(removeIndex, 1);\n        viewNode.next = null;\n        destroyViewTree(viewNode.data);\n        addRemoveViewFromContainer(container, viewNode, false);\n        // Notify query that view has been removed\n        container.data.queries && container.data.queries.removeView(removeIndex);\n        return viewNode;\n    }\n    /**\n     * Sets a next on the view node, so views in for loops can easily jump from\n     * one view to the next to add/remove elements. Also adds the LView (view.data)\n     * to the view tree for easy traversal when cleaning up the view.\n     *\n     * @param view The view to set up\n     * @param next The view's new next\n     */\n    function setViewNext(view, next) {\n        view.next = next;\n        view.data.next = next ? next.data : null;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state.node) && node.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return node.parent.data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state.parent === rootView ? null : state.parent;\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(view) {\n        var cleanup = view.cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    cleanup[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n                    i += 2;\n                }\n                else {\n                    cleanup[i].call(cleanup[i + 1]);\n                }\n            }\n            view.cleanup = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view.tView;\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view.directives, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(view) {\n        var pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(view.data, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element should be inserted in the given parent.\n     *\n     * The native node can be inserted when its parent is:\n     * - A regular element => Yes\n     * - A component host element =>\n     *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n     *      template)\n     *      => don't add as the parent component will project if needed.\n     *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n     *      add it\n     * - View element => delay insertion, will be done on `viewEnd()`\n     *\n     * @param parent The parent in which to insert the child\n     * @param currentView The LView being processed\n     * @return boolean Whether the child element should be inserted.\n     */\n    function canInsertNativeNode(parent, currentView) {\n        var parentIsElement = parent.type === 3 /* Element */;\n        return parentIsElement &&\n            (parent.view !== currentView || parent.data === null /* Regular Element. */);\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only add element if not in View or not projected.\n            var renderer = currentView.renderer;\n            isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                parent.native.appendChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Inserts the provided node before the correct element in the DOM.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}\n     *\n     * @param node Node to insert\n     * @param currentView Current LView\n     */\n    function insertChild(node, currentView) {\n        var parent = node.parent;\n        if (canInsertNativeNode(parent, currentView)) {\n            var nativeSibling = findNextRNodeSibling(node, null);\n            var renderer = currentView.renderer;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent.native, node.native, nativeSibling) :\n                parent.native.insertBefore(node.native, nativeSibling, false);\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView) {\n        if (node.type !== 0 /* Container */) {\n            appendChild(currentParent, node.native, currentView);\n        }\n        else {\n            // The node we are adding is a Container and we are adding it to Element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assignee the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer.renderParent = currentParent;\n            var views = lContainer.views;\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, null);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data.renderParent = currentParent;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertNotNull(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        for (var i = 0; i < attrs.length; i += 2) {\n            if (attrs[i] === name)\n                return i;\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$2 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reason (PERF_NOTES.md)\n        return renderer;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reason (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    /**\n     * Static data that corresponds to the instance-specific data array on an LView.\n     *\n     * Each node's static data is stored in tData at the same index that it's stored\n     * in the data array. Any nodes that do not have static data store a null value in\n     * tData to avoid a sparse array.\n     */\n    var tData;\n    /**\n     * State of the current view being processed.\n     *\n     * NOTE: we cheat here and initialize it to `null` even thought the type does not\n     * contain `null`. This is because we expect this value to be not `null` as soon\n     * as we enter the view. Declaring the type as `null` would require us to place `!`\n     * in most instructions since they all assume that `currentView` is defined.\n     */\n    var currentView = null;\n    var currentQueries;\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reason (PERF_NOTES.md)\n        return currentQueries || (currentQueries = new QueryType());\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reason (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var data;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    /**\n     * When a view is destroyed, listeners need to be released and outputs need to be\n     * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n     * and output data (in chunks of 2) for a particular view. Combining the arrays\n     * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n     * separate for loops).\n     *\n     * If it's a listener being stored:\n     * 1st index is: event name to remove\n     * 2nd index is: native element\n     * 3rd index is: listener function\n     * 4th index is: useCapture boolean\n     *\n     * If it's an output subscription:\n     * 1st index is: unsubscribe function\n     * 2nd index is: context for function\n     */\n    var cleanup;\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = currentView;\n        data = newView && newView.data;\n        directives = newView && newView.directives;\n        tData = newView && newView.tView.data;\n        creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && newView.tView.firstTemplatePass;\n        cleanup = newView && newView.cleanup;\n        renderer = newView && newView.renderer;\n        if (newView && newView.bindingIndex < 0) {\n            newView.bindingIndex = newView.bindingStartIndex;\n        }\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        currentView = newView;\n        currentQueries = newView && newView.queries;\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     */\n    function leaveView(newView) {\n        if (!checkNoChangesMode) {\n            executeHooks(directives, currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n        }\n        // Views should be clean and in update mode after being checked, so these bits are cleared\n        currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        currentView.lifecycleStage = 1 /* Init */;\n        currentView.bindingIndex = -1;\n        enterView(newView, null);\n    }\n    /**  Refreshes directives in this view and triggers any init/content hooks.  */\n    function refreshDirectives() {\n        executeInitAndContentHooks();\n        var tView = currentView.tView;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = currentView.tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            var tView = currentView.tView;\n            executeInitHooks(currentView, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLView(viewId, renderer, tView, template, context, flags) {\n        var newView = {\n            parent: currentView,\n            id: viewId,\n            flags: flags | 1 /* CreationMode */ | 8 /* Attached */,\n            node: null,\n            data: [],\n            directives: null,\n            tView: tView,\n            cleanup: null,\n            renderer: renderer,\n            child: null,\n            tail: null,\n            next: null,\n            bindingStartIndex: -1,\n            bindingIndex: -1,\n            template: template,\n            context: context,\n            dynamicViewCount: 0,\n            lifecycleStage: 1 /* Init */,\n            queries: null,\n            injector: currentView && currentView.injector,\n        };\n        return newView;\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            type: type,\n            native: native,\n            view: currentView,\n            parent: parent,\n            child: null,\n            next: null,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            pNextOrParent: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && previousOrParentNode.parent;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, currentView, parent, native, isState ? state : null, queries);\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            // Bit of a hack to bust through the readonly because there is a circular dep between\n            // LView and LNode.\n            ngDevMode && assertNull(state.node, 'LView.node should not have been initialized');\n            state.node = node;\n        }\n        if (index != null) {\n            // We are Element or Container\n            ngDevMode && assertDataNext(index);\n            data[index] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (index >= tData.length) {\n                tData[index] = null;\n            }\n            else {\n                node.tNode = tData[index];\n            }\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.view === currentView ||\n                    previousOrParentNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    ngDevMode && assertNull(previousOrParentNode.child, \"previousOrParentNode's child should not have been set.\");\n                    previousOrParentNode.child = node;\n                }\n            }\n            else if (previousOrParentNode) {\n                ngDevMode && assertNull(previousOrParentNode.next, \"previousOrParentNode's next property should not have been set \" + index + \".\");\n                previousOrParentNode.next = node;\n                if (previousOrParentNode.dynamicLContainerNode) {\n                    previousOrParentNode.dynamicLContainerNode.next = node;\n                }\n            }\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    function renderEmbeddedTemplate(viewNode, template, context, renderer, directives, pipes) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            var rf = 2 /* Update */;\n            if (viewNode == null) {\n                var tView = getOrCreateTView(template, directives || null, pipes || null);\n                var lView = createLView(-1, renderer, tView, template, context, 2 /* CheckAlways */);\n                viewNode = createLNode(null, 2 /* View */, null, lView);\n                rf = 1 /* Create */;\n            }\n            oldView = enterView(viewNode.data, viewNode);\n            template(rf, context);\n            refreshDirectives();\n            refreshDynamicChildren();\n        }\n        finally {\n            leaveView(oldView);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshDynamicChildren();\n                refreshDirectives();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, 0);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view.flags & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(currentView.bindingStartIndex, -1, 'elements should be created before any bindings');\n        var native = renderer.createElement(name);\n        var node = createLNode(index, 3 /* Element */, native, null);\n        if (attrs)\n            setUpAttributes(native, attrs);\n        appendChild(node.parent, native, currentView);\n        createDirectivesAndLocals(index, name, attrs, localRefs, null);\n        return native;\n    }\n    function createDirectivesAndLocals(index, name, attrs, localRefs, containerData) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && assertDataInRange(index - 1);\n            node.tNode = tData[index] = createTNode(name, attrs || null, containerData);\n            cacheMatchingDirectivesForNode(node.tNode, currentView.tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = currentView.tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$2;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$2) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (currentView.tView.components || (currentView.tView.components = [])).push(dirIndex, data.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (currentView.tView.hostBindings || (currentView.tView.hostBindings = [])).push(dirIndex, data.length - 1);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = currentView.tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to data[] in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                data.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes) {\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(directives, pipes));\n    }\n    /** Creates a TView instance */\n    function createTView(defs, pipes) {\n        return {\n            data: [],\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            hostBindings: null,\n            components: null,\n            directiveRegistry: typeof defs === 'function' ? defs() : defs,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        ngDevMode && assertEqual(attrs.length % 2, 0, 'each attribute should have a key and a value');\n        var isProc = isProceduralRenderer(renderer);\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                var attrVal = attrs[i + 1];\n                isProc ? renderer.setAttribute(native, attrName, attrVal) :\n                    native.setAttribute(attrName, attrVal);\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, createLView(-1, renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */));\n        if (firstTemplatePass) {\n            node.tNode = createTNode(tag, null, null);\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            currentView.tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        var cleanupFns = cleanup || (cleanup = currentView.cleanup = []);\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            cleanupFns.push(cleanupFn, null);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            cleanupFns.push(eventName, native, wrappedListener, useCapture);\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            cleanup.push(subscription.unsubscribe, subscription);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = previousOrParentNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, currentView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element = data[index];\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                    element.native.removeAttribute(name);\n            }\n            else {\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                    element.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = data[index];\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tagName\n     * @param attrs\n     * @param data\n     * @param localNames A list of local names and their matching indices\n     * @returns the TNode object\n     */\n    function createTNode(tagName, attrs, data) {\n        return {\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            data: data\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 13 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = currentView.tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = data[index];\n            if (value) {\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = data[index];\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    function elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n        if (value !== NO_CHANGE) {\n            var lElement = data[index];\n            if (value == null) {\n                isProceduralRenderer(renderer) ?\n                    renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].removeProperty(styleName);\n            }\n            else {\n                var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n                if (typeof suffixOrSanitizer == 'string')\n                    strValue = strValue + suffixOrSanitizer;\n                isProceduralRenderer(renderer) ?\n                    renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                    lElement.native['style'].setProperty(styleName, strValue);\n            }\n        }\n    }\n    /**\n     * Set the `style` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage.\n     *\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is falsy than the style is remove. An absence\n     *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n     *   performed.\n     */\n    function elementStyle(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n            // we will add logic here which would work with the animation code.\n            var lElement = data[index];\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(lElement.native, 'style', value);\n            }\n            else {\n                var style = lElement.native['style'];\n                for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                    var styleName = keys[i];\n                    var styleValue = value[styleName];\n                    styleValue == null ? style.removeProperty(styleName) :\n                        style.setProperty(styleName, styleValue);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array.\n     * @param value Value to write. This value will be stringified.\n     *   If value is not provided than the actual creation of the text node is delayed.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(currentView.bindingStartIndex, -1, 'text nodes should be created before bindings');\n        var textNode = value != null ? createTextNode(value, renderer) : null;\n        var node = createLNode(index, 3 /* Element */, textNode);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(node.parent, textNode, currentView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper bind(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        ngDevMode && assertDataInRange(index);\n        var existingNode = data[index];\n        ngDevMode && assertNotNull(existingNode, 'existing node');\n        if (existingNode.native) {\n            // If DOM node exists and value changed, update textContent\n            value !== NO_CHANGE &&\n                (isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                    existingNode.native.textContent = stringify$1(value));\n        }\n        else {\n            // Node was created but DOM node creation was delayed. Create and append now.\n            existingNode.native = createTextNode(value, renderer);\n            insertChild(existingNode, currentView);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(index, directive, directiveDef) {\n        var instance = baseDirectiveCreate(index, directive, directiveDef);\n        ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(index, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n        }\n        return instance;\n    }\n    function addComponentLogic(index, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var hostView = addToViewTree(currentView, createLView(-1, rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */));\n        previousOrParentNode.data = hostView;\n        hostView.node = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(index);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(currentView.bindingStartIndex, -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            currentView.directives = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 13 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        for (var i = 0; i < attrs.length; i += 2) {\n            var attrName = attrs[i];\n            var minifiedInputName = inputs[attrName];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrs[i + 1]);\n            }\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    function createLContainer(parentLNode, currentView, template) {\n        ngDevMode && assertNotNull(parentLNode, 'containers should have a parent');\n        return {\n            views: [],\n            nextIndex: 0,\n            // If the direct parent of the container is a view, its views will need to be added\n            // through insertView() when its parent view is being inserted:\n            renderParent: canInsertNativeNode(parentLNode, currentView) ? parentLNode : null,\n            template: template == null ? null : template,\n            next: null,\n            parent: currentView,\n            dynamicViewCount: 0,\n            queries: null\n        };\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : previousOrParentNode.parent;\n        var lContainer = createLContainer(currentParent, currentView, template);\n        var node = createLNode(index, 0 /* Container */, undefined, lContainer);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(currentView, node.data);\n        createDirectivesAndLocals(index, tagName || null, attrs, localRefs, []);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var queries = node.queries;\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer.queries = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        ngDevMode && assertDataInRange(index);\n        previousOrParentNode = data[index];\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data.nextIndex = 0;\n        ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(currentView, currentView.tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = previousOrParentNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        container.native = undefined;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data.nextIndex;\n        // remove extra views at the end of the container\n        while (nextIndex < container.data.views.length) {\n            removeView(container, nextIndex);\n        }\n    }\n    function refreshDynamicChildren() {\n        for (var current = currentView.child; current !== null; current = current.next) {\n            if (current.dynamicViewCount !== 0 && current.views) {\n                var container_1 = current;\n                for (var i = 0; i < container_1.views.length; i++) {\n                    var view = container_1.views[i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    renderEmbeddedTemplate(view, view.data.template, view.data.context, renderer);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data.views;\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data.id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id grater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : previousOrParentNode.parent);\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer.nextIndex, viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLView(viewBlockId, renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, null, 2 /* CheckAlways */);\n            if (lContainer.queries) {\n                newView.queries = lContainer.queries.enterView(lContainer.nextIndex);\n            }\n            enterView(newView, viewNode = createLNode(null, 2 /* View */, null, newView));\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view needs to set the global tData variable to the static data for\n     * that view. Otherwise, the view's static data for a particular node would overwrite\n     * the static data for a node in the view above it with the same index (since it's in the\n     * same template).\n     *\n     * @param viewIndex The index of the TView in TContainer\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var tContainer = parent.tNode.data;\n        if (viewIndex >= tContainer.length || tContainer[viewIndex] == null) {\n            var tView = currentView.tView;\n            tContainer[viewIndex] = createTView(tView.directiveRegistry, tView.pipeRegistry);\n        }\n        return tContainer[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshDirectives();\n        isParent = false;\n        var viewNode = previousOrParentNode = currentView.node;\n        var containerNode = previousOrParentNode.parent;\n        if (containerNode) {\n            ngDevMode && assertNodeType(viewNode, 2 /* View */);\n            ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n            var lContainer = containerNode.data;\n            if (creationMode) {\n                // When projected nodes are going to be inserted, the renderParent of the dynamic container\n                // used by the ViewContainerRef must be set.\n                setRenderParentInProjectedNodes(lContainer.renderParent, viewNode);\n                // it is a new view, insert it into collection of views for a given container\n                insertView(containerNode, viewNode, lContainer.nextIndex);\n            }\n            lContainer.nextIndex++;\n        }\n        leaveView(currentView.parent);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /**\n     * For nodes which are projected inside an embedded view, this function sets the renderParent\n     * of their dynamic LContainerNode.\n     * @param renderParent the renderParent of the LContainer which contains the embedded view.\n     * @param viewNode the embedded view.\n     */\n    function setRenderParentInProjectedNodes(renderParent, viewNode) {\n        if (renderParent != null) {\n            var node = viewNode.child;\n            while (node) {\n                if (node.type === 1 /* Projection */) {\n                    var nodeToProject = node.data.head;\n                    var lastNodeToProject = node.data.tail;\n                    while (nodeToProject) {\n                        if (nodeToProject.dynamicLContainerNode) {\n                            nodeToProject.dynamicLContainerNode.data.renderParent = renderParent;\n                        }\n                        nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n                    }\n                }\n                node = node.next;\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex\n     * @param elementIndex\n     */\n    function componentRefresh(directiveIndex, elementIndex) {\n        ngDevMode && assertDataInRange(elementIndex);\n        var element = data[elementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode && assertNotNull(element.data, \"Component's host node should have an LView attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            var def = currentView.tView.directives[directiveIndex];\n            detectChangesInternal(hostView, element, def, getDirectiveInstance(directives[directiveIndex]));\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view.flags & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(index, selectors, textSelectors) {\n        var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        var distributedNodes = new Array(noOfNodeBuckets);\n        for (var i = 0; i < noOfNodeBuckets; i++) {\n            distributedNodes[i] = [];\n        }\n        var componentNode = findComponentHost(currentView);\n        var componentChild = componentNode.child;\n        while (componentChild !== null) {\n            // execute selector matching logic if and only if:\n            // - there are selectors defined\n            // - a node has a tag name / attributes that can be matched\n            if (selectors && componentChild.tNode) {\n                var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, textSelectors);\n                distributedNodes[matchedIdx].push(componentChild);\n            }\n            else {\n                distributedNodes[0].push(componentChild);\n            }\n            componentChild = componentChild.next;\n        }\n        ngDevMode && assertDataNext(index);\n        data[index] = distributedNodes;\n    }\n    /**\n     * Updates the linked list of a projection node, by appending another linked list.\n     *\n     * @param projectionNode Projection node whose projected nodes linked list has to be updated\n     * @param appendedFirst First node of the linked list to append.\n     * @param appendedLast Last node of the linked list to append.\n     */\n    function appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n        ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n        if (!appendedLast) {\n            // nothing to append\n            return;\n        }\n        var projectionNodeData = projectionNode.data;\n        if (projectionNodeData.tail) {\n            projectionNodeData.tail.pNextOrParent = appendedFirst;\n        }\n        else {\n            projectionNodeData.head = appendedFirst;\n        }\n        projectionNodeData.tail = appendedLast;\n        appendedLast.pNextOrParent = projectionNode;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param localIndex - index under which distribution of projected nodes was memorized\n     * @param selectorIndex - 0 means <ng-content> without any selector\n     * @param attrs - attributes attached to the ng-content node, if present\n     */\n    function projection(nodeIndex, localIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, { head: null, tail: null });\n        if (node.tNode == null) {\n            node.tNode = createTNode(null, attrs || null, null);\n        }\n        isParent = false; // self closing\n        var currentParent = node.parent;\n        // re-distribution of projectable nodes is memorized on a component's view level\n        var componentNode = findComponentHost(currentView);\n        // make sure that nodes to project were memorized\n        var nodesForSelector = componentNode.data.data[localIndex][selectorIndex];\n        // build the linked list of projected nodes:\n        for (var i = 0; i < nodesForSelector.length; i++) {\n            var nodeToProject = nodesForSelector[i];\n            if (nodeToProject.type === 1 /* Projection */) {\n                var previouslyProjected = nodeToProject.data;\n                appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n            }\n            else {\n                appendToProjectionNode(node, nodeToProject, nodeToProject);\n            }\n        }\n        if (canInsertNativeNode(currentParent, currentView)) {\n            ngDevMode && assertNodeType(currentParent, 3 /* Element */);\n            // process each node in the list of projected nodes:\n            var nodeToProject = node.data.head;\n            var lastNodeToProject = node.data.tail;\n            while (nodeToProject) {\n                appendProjectedNode(nodeToProject, currentParent, currentView);\n                nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n            }\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lView) {\n        var viewRootLNode = lView.node;\n        while (viewRootLNode.type === 2 /* View */) {\n            ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n            lView = lView.parent;\n            viewRootLNode = lView.node;\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * Adds a LView or a LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LView or LContainer should be added\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, state) {\n        currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n        currentView.tail = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n            node.data.flags |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView.parent != null) {\n            currentView.flags |= 4 /* Dirty */;\n            currentView = currentView.parent;\n        }\n        currentView.flags |= 4 /* Dirty */;\n        ngDevMode && assertNotNull(currentView.context, 'rootContext');\n        scheduleTick(currentView.context);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tick(rootContext.component);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootComponent = rootView.context.component;\n        var hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, rootView, rootComponent);\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertNotNull(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lView = lElementNode.view;\n        while (lView.parent) {\n            lView = lView.parent;\n        }\n        return lView;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n        var componentIndex = hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */;\n        var def = hostNode.view.tView.directives[componentIndex];\n        detectChangesInternal(hostNode.data, hostNode, def, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, def, component) {\n        var oldView = enterView(hostView, hostNode);\n        var template = def.template;\n        try {\n            template(getRenderFlags(hostView), component);\n            refreshDirectives();\n            refreshDynamicChildren();\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertNotNull(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(currentView.bindingStartIndex, -1, 'Binding start index should only be set once, when null');\n        ngDevMode && assertEqual(currentView.bindingIndex, -1, 'Binding index should not yet be set ' + currentView.bindingIndex);\n        currentView.bindingIndex = currentView.bindingStartIndex = data.length;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        if (currentView.bindingStartIndex < 0) {\n            initBindings();\n            return data[currentView.bindingIndex++] = value;\n        }\n        var changed = value !== NO_CHANGE && isDifferent(data[currentView.bindingIndex], value);\n        if (changed) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n            data[currentView.bindingIndex] = value;\n        }\n        currentView.bindingIndex++;\n        return changed ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        if (index >= tData.length) {\n            tData[index] = null;\n        }\n        data[index] = value;\n    }\n    /** Retrieves a value from the `data`. */\n    function load(index) {\n        ngDevMode && assertDataInRange(index);\n        return data[index];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertNotNull(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(currentView.bindingIndex);\n        ngDevMode &&\n            assertNotEqual(data[currentView.bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return data[currentView.bindingIndex++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (currentView.bindingStartIndex < 0) {\n            initBindings();\n        }\n        else if (isDifferent(data[currentView.bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, data[currentView.bindingIndex], value);\n        }\n        else {\n            currentView.bindingIndex++;\n            return false;\n        }\n        data[currentView.bindingIndex++] = value;\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding$1(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return currentView.tView;\n    }\n    function getDirectiveInstance(instanceOrArray) {\n        // Directives with content queries store an array in directives[directiveIndex]\n        // with the instance as the first index\n        return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertNotNull(previousOrParentNode.parent, 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = data;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = data;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertNotNull(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertNotNull(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        ViewRef.prototype.destroy = function () { };\n        ViewRef.prototype.onDestroy = function (callback) { };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view.flags &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view.flags |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n    /**\n     * Creates a ViewRef bundled with destroy functionality.\n     *\n     * @param context The context for this view\n     * @returns The ViewRef\n     */\n    function createViewRef(view, context) {\n        // TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges\n        return addDestroyable(new ViewRef$1(view, context));\n    }\n    /**\n     * Decorates an object with destroy logic (implementing the DestroyRef interface)\n     * and returns the enhanced object.\n     *\n     * @param obj The object to decorate\n     * @returns The object with destroy logic\n     */\n    function addDestroyable(obj) {\n        var destroyFn = null;\n        obj.destroyed = false;\n        obj.destroy = function () {\n            destroyFn && destroyFn.forEach(function (fn) { return fn(); });\n            this.destroyed = true;\n        };\n        obj.onDestroy = function (fn) { return (destroyFn || (destroyFn = [])).push(fn); };\n        return obj;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = {\n            // Incomplete initialization due to circular reference.\n            component: null,\n            scheduler: opts.scheduler || requestAnimationFrame.bind(window),\n            clean: CLEAN_PROMISE,\n        };\n        var rootView = createLView(-1, rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(null, null), null, rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView.injector = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            component = rootContext.component =\n                baseDirectiveCreate(0, componentDef.factory(), componentDef);\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, componentDef, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component).context;\n        ngDevMode && assertNotNull(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parentInjector = node.parent && node.parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrName) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertNotNull(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                if (attrs[i] == attrName) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = createViewRef(currentNode.data, context);\n        }\n        else if (currentNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            createViewRef(hostNode.data, hostNode.view\n                .directives[hostNode.tNode.flags >> 13 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.type === 2 /* View */) {\n            node = node.view.node;\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view.injector;\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var flags_1 = node.tNode.flags;\n                var count = flags_1 & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = flags_1 >> 13 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view.tView.directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return getDirectiveInstance(node.view.directives[i]);\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it might be a false positive.\n                // Traverse up the tree and continue searching.\n                injector = injector.parent;\n            }\n        }\n        // No directive was found for the given token.\n        // TODO: implement optional, check-self, and check-parent.\n        throw new Error('Implement');\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view.tView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view.tView);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef$1(di.node.type === 0 /* Container */ ? null : di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var lContainer = createLContainer(vcRefHost.parent, vcRefHost.view);\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, vcRefHost.parent, undefined, lContainer, null);\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, lContainer);\n            di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer.views.length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer.views.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            // invalidate cache of next sibling RNode (we do similar operation in the containerRefreshEnd\n            // instruction)\n            this._lContainerNode.native = undefined;\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            lViewNode.parent = this._lContainerNode;\n            // If the view is dynamic (has a template), it needs to be counted both at the container\n            // level and at the node above the container.\n            if (lViewNode.data.template !== null) {\n                // Increment the container view count.\n                this._lContainerNode.data.dynamicViewCount++;\n                // Look for the parent node and increment its dynamic view count.\n                if (this._lContainerNode.parent !== null && this._lContainerNode.parent.data !== null) {\n                    ngDevMode && assertNodeOfPossibleTypes(this._lContainerNode.parent, 2 /* View */, 3 /* Element */);\n                    this._lContainerNode.parent.data.dynamicViewCount++;\n                }\n            }\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            this.detach(index);\n            // TODO(ml): proper destroy of the ViewRef, i.e. recursively destroy the LviewNode and its\n            // children, delete DOM nodes and QueryList, trigger hooks (onDestroy), destroy the renderer,\n            // detach projected nodes\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data.views.length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data.views.length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        var data = di.node.data;\n        var tView = di.node.view.tView;\n        return di.templateRef || (di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), data.template, getRenderer(), tView.directiveRegistry, tView.pipeRegistry));\n    }\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef(elementRef, template, _renderer, _directives, _pipes) {\n            this._renderer = _renderer;\n            this._directives = _directives;\n            this._pipes = _pipes;\n            this.elementRef = elementRef;\n            this._template = template;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context) {\n            var viewNode = renderEmbeddedTemplate(null, this._template, context, this._renderer, this._directives, this._pipes);\n            return addDestroyable(new EmbeddedViewRef$1(viewNode, this._template, context));\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs),\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * Creates an NgOnChangesFeature function for a component's features list.\n     *\n     * It accepts an optional map of minified input property names to original property names,\n     * if any input properties have a public alias.\n     *\n     * The NgOnChangesFeature function that is returned decorates a component with support for\n     * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature({name: 'name'})]\n     * });\n     * ```\n     *\n     * @param inputPropertyNames Map of input property names, if they are aliased\n     * @returns DirectiveDefFeature\n     */\n    function NgOnChangesFeature(inputPropertyNames) {\n        return function (definition) {\n            var inputs = definition.inputs;\n            var proto = definition.type.prototype;\n            // Place where we will store SimpleChanges if there is a change\n            Object.defineProperty(proto, PRIVATE_PREFIX, { value: undefined, writable: true });\n            var _loop_1 = function (pubKey) {\n                var minKey = inputs[pubKey];\n                var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n                var privateMinKey = PRIVATE_PREFIX + minKey;\n                // Create a place where the actual value will be stored and make it non-enumerable\n                Object.defineProperty(proto, privateMinKey, { value: undefined, writable: true });\n                var existingDesc = Object.getOwnPropertyDescriptor(proto, minKey);\n                // create a getter and setter for property\n                Object.defineProperty(proto, minKey, {\n                    get: function () {\n                        return (existingDesc && existingDesc.get) ? existingDesc.get.call(this) :\n                            this[privateMinKey];\n                    },\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        var isFirstChange = simpleChanges === undefined;\n                        if (simpleChanges == null) {\n                            simpleChanges = this[PRIVATE_PREFIX] = {};\n                        }\n                        simpleChanges[propertyName] = new SimpleChange(this[privateMinKey], value, isFirstChange);\n                        (existingDesc && existingDesc.set) ? existingDesc.set.call(this, value) :\n                            this[privateMinKey] = value;\n                    }\n                });\n            };\n            for (var pubKey in inputs) {\n                _loop_1(pubKey);\n            }\n            // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n            // so the call order is changes-init-check in creation mode. In subsequent\n            // change detection runs, only the check wrapper will be called.\n            if (definition.onInit != null) {\n                definition.onInit = onChangesWrapper(definition.onInit);\n            }\n            definition.doCheck = onChangesWrapper(definition.doCheck);\n        };\n        function onChangesWrapper(delegateHook) {\n            return function () {\n                var simpleChanges = this[PRIVATE_PREFIX];\n                if (simpleChanges != null) {\n                    this.ngOnChanges(simpleChanges);\n                    this[PRIVATE_PREFIX] = null;\n                }\n                delegateHook && delegateHook.apply(this);\n            };\n        }\n    }\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n    var EMPTY$1 = {};\n    /** Swaps the keys and values of an object. */\n    function invertObject(obj) {\n        if (obj == null)\n            return EMPTY$1;\n        var newObj = {};\n        for (var minifiedKey in obj) {\n            newObj[obj[minifiedKey]] = minifiedKey;\n        }\n        return newObj;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            n: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @returns value\n     */\n    function pureFunction0(pureFn, thisArg) {\n        return getCreationMode() ? checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @returns Updated value\n     */\n    function pureFunction1(pureFn, exp, thisArg) {\n        return bindingUpdated(exp) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @returns Updated value\n     */\n    function pureFunction2(pureFn, exp1, exp2, thisArg) {\n        return bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @returns Updated value\n     */\n    function pureFunction3(pureFn, exp1, exp2, exp3, thisArg) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @returns Updated value\n     */\n    function pureFunction4(pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        return bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @returns Updated value\n     */\n    function pureFunction5(pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        return bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @returns Updated value\n     */\n    function pureFunction6(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        return bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @returns Updated value\n     */\n    function pureFunction7(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        return bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @returns Updated value\n     */\n    function pureFunction8(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        return bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exp An array of binding values\n     * @returns Updated value\n     */\n    function pureFunctionV(pureFn, exps, thisArg) {\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        return different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[index] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[index];\n        }\n        var pipeInstance = pipeDef.n();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction3(pipeInstance.transform.bind(pipeInstance), v1, v2, v3) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction4(pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n            // mutate parent.\n            if (descend) {\n                this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: containerValues };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.enterView = function (index) {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var viewValues = []; // prepare room for view nodes\n                query.values.splice(index, 0, viewValues);\n                var clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: viewValues };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function (index) {\n            var query = this.deep;\n            while (query) {\n                var removed = query.values.splice(index, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view.tView.directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 13 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view.directives[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    ngDevMode && assertNotNull(node.tNode, 'node.tNode');\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertNotNull(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery$1(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten$1(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList$1 = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList$1();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_j = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_k = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_l = _localeFactory;\n    exports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_g = defaultKeyValueDiffers;\n    exports.Éµangular_packages_core_core_h = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_i = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_d = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_m = wtfEnabled;\n    exports.Éµangular_packages_core_core_o = createScope;\n    exports.Éµangular_packages_core_core_n = detectWTF;\n    exports.Éµangular_packages_core_core_r = endTimeRange;\n    exports.Éµangular_packages_core_core_p = leave;\n    exports.Éµangular_packages_core_core_q = startTimeRange;\n    exports.Éµangular_packages_core_core_v = getOrCreateChangeDetectorRef;\n    exports.Éµangular_packages_core_core_x = getOrCreateContainerRef;\n    exports.Éµangular_packages_core_core_w = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_u = getOrCreateNodeInjector;\n    exports.Éµangular_packages_core_core_y = getOrCreateTemplateRef;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_bd = bindingUpdated2;\n    exports.Éµangular_packages_core_core_be = bindingUpdated4;\n    exports.Éµangular_packages_core_core_bc = checkAndUpdateBinding$1;\n    exports.Éµangular_packages_core_core_ba = consumeBinding;\n    exports.Éµangular_packages_core_core_z = getCreationMode;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_s = _def;\n    exports.Éµangular_packages_core_core_t = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyle;\n    exports.Éµsn = elementStyleNamed;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}